{"version":3,"sources":["../../../../src/lib/extensions/KHR_lights_punctual.ts"],"names":["decode","gltfData","gltfScenegraph","GLTFScenegraph","json","extension","getExtension","KHR_LIGHTS_PUNCTUAL","lights","removeExtension","node","nodes","nodeExtension","getObjectExtension","light","removeObjectExtension","encode","addExtension","addObjectExtension"],"mappings":";;;;;;;;;;AAKA;;AACA;;AACA;;AAEO,eAAeA,MAAf,CAAsBC,QAAtB,EAA6D;AAClE,QAAMC,cAAc,GAAG,IAAIC,uBAAJ,CAAmBF,QAAnB,CAAvB;AACA,QAAM;AAACG,IAAAA;AAAD,MAASF,cAAf;AAGA,QAAMG,SAAS,GAAGH,cAAc,CAACI,YAAf,CAA4BC,kCAA5B,CAAlB;;AACA,MAAIF,SAAJ,EAAe;AAEbH,IAAAA,cAAc,CAACE,IAAf,CAAoBI,MAApB,GAA6BH,SAAS,CAACG,MAAvC;AACAN,IAAAA,cAAc,CAACO,eAAf,CAA+BF,kCAA/B;AACD;;AAID,OAAK,MAAMG,IAAX,IAAmBN,IAAI,CAACO,KAAL,IAAc,EAAjC,EAAqC;AACnC,UAAMC,aAAa,GAAGV,cAAc,CAACW,kBAAf,CAAkCH,IAAlC,EAAwCH,kCAAxC,CAAtB;;AACA,QAAIK,aAAJ,EAAmB;AAEjBF,MAAAA,IAAI,CAACI,KAAL,GAAaF,aAAa,CAACE,KAA3B;AACD;;AACDZ,IAAAA,cAAc,CAACa,qBAAf,CAAqCL,IAArC,EAA2CH,kCAA3C;AACD;AACF;;AAGM,eAAeS,MAAf,CAAsBf,QAAtB,EAA+C;AACpD,QAAMC,cAAc,GAAG,IAAIC,uBAAJ,CAAmBF,QAAnB,CAAvB;AACA,QAAM;AAACG,IAAAA;AAAD,MAASF,cAAf;;AAGA,MAAIE,IAAI,CAACI,MAAT,EAAiB;AACf,UAAMH,SAAS,GAAGH,cAAc,CAACe,YAAf,CAA4BV,kCAA5B,CAAlB;AAEA,wBAAO,CAACF,SAAS,CAACG,MAAlB;AAEAH,IAAAA,SAAS,CAACG,MAAV,GAAmBJ,IAAI,CAACI,MAAxB;AAEA,WAAOJ,IAAI,CAACI,MAAZ;AACD;;AAKD,MAAIN,cAAc,CAACE,IAAf,CAAoBI,MAAxB,EAAgC;AAE9B,SAAK,MAAMM,KAAX,IAAoBZ,cAAc,CAACE,IAAf,CAAoBI,MAAxC,EAAgD;AAC9C,YAAME,IAAI,GAAGI,KAAK,CAACJ,IAAnB;AACAR,MAAAA,cAAc,CAACgB,kBAAf,CAAkCR,IAAlC,EAAwCH,kCAAxC,EAA6DO,KAA7D;AACD;;AAED,WAAOZ,cAAc,CAACE,IAAf,CAAoBI,MAA3B;AACD;AACF","sourcesContent":["// GLTF EXTENSION: KHR_lights_punctual\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\nimport type {GLTF} from '../types/gltf-types';\n\nimport {assert} from '../utils/assert';\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nimport {KHR_LIGHTS_PUNCTUAL} from '../gltf-utils/gltf-constants';\n\nexport async function decode(gltfData: {json: GLTF}): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Move the light array out of the extension and remove the extension\n  const extension = gltfScenegraph.getExtension(KHR_LIGHTS_PUNCTUAL);\n  if (extension) {\n    // @ts-ignore\n    gltfScenegraph.json.lights = extension.lights;\n    gltfScenegraph.removeExtension(KHR_LIGHTS_PUNCTUAL);\n  }\n\n  // Any nodes that have the extension, add lights field pointing to light object\n  // and remove the extension\n  for (const node of json.nodes || []) {\n    const nodeExtension = gltfScenegraph.getObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n    if (nodeExtension) {\n      // @ts-ignore\n      node.light = nodeExtension.light;\n    }\n    gltfScenegraph.removeObjectExtension(node, KHR_LIGHTS_PUNCTUAL);\n  }\n}\n\n// Move the light ar ray out of the extension and remove the extension\nexport async function encode(gltfData): Promise<void> {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // @ts-ignore\n  if (json.lights) {\n    const extension = gltfScenegraph.addExtension(KHR_LIGHTS_PUNCTUAL);\n    // @ts-ignore\n    assert(!extension.lights);\n    // @ts-ignore\n    extension.lights = json.lights;\n    // @ts-ignore\n    delete json.lights;\n  }\n\n  // Any nodes that have lights field pointing to light object\n  // add the extension\n  // @ts-ignore\n  if (gltfScenegraph.json.lights) {\n    // @ts-ignore\n    for (const light of gltfScenegraph.json.lights) {\n      const node = light.node;\n      gltfScenegraph.addObjectExtension(node, KHR_LIGHTS_PUNCTUAL, light);\n    }\n    // @ts-ignore\n    delete gltfScenegraph.json.lights;\n  }\n}\n"],"file":"KHR_lights_punctual.js"}