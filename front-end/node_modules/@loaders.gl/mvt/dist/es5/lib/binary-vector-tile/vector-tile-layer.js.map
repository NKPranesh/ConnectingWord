{"version":3,"sources":["../../../../src/lib/binary-vector-tile/vector-tile-layer.js"],"names":["VectorTileLayer","constructor","pbf","end","version","name","extent","length","_pbf","_keys","_values","_features","readFields","readLayer","feature","i","firstPassData","Error","pos","readVarint","VectorTileFeature","tag","layer","readString","push","readValueMessage","value","readFloat","readDouble","readVarint64","readSVarint","readBoolean"],"mappings":"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","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileFeature from './vector-tile-feature.js';\n\nexport default class VectorTileLayer {\n  constructor(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n  }\n\n  // return feature `i` from this layer as a `VectorTileFeature`\n  feature(i, firstPassData) {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(\n      this._pbf,\n      end,\n      this.extent,\n      this._keys,\n      this._values,\n      firstPassData\n    );\n  }\n}\n\nfunction readLayer(tag, layer, pbf) {\n  if (tag === 15) layer.version = pbf.readVarint();\n  else if (tag === 1) layer.name = pbf.readString();\n  else if (tag === 5) layer.extent = pbf.readVarint();\n  else if (tag === 2) layer._features.push(pbf.pos);\n  else if (tag === 3) layer._keys.push(pbf.readString());\n  else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n  let value = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n\n    value =\n      tag === 1\n        ? pbf.readString()\n        : tag === 2\n        ? pbf.readFloat()\n        : tag === 3\n        ? pbf.readDouble()\n        : tag === 4\n        ? pbf.readVarint64()\n        : tag === 5\n        ? pbf.readVarint()\n        : tag === 6\n        ? pbf.readSVarint()\n        : tag === 7\n        ? pbf.readBoolean()\n        : null;\n  }\n\n  return value;\n}\n"],"file":"vector-tile-layer.js"}