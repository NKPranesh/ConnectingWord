import fs from 'fs';
import { toArrayBuffer } from './buffer';
import { promisify } from './util';
export const readdir = promisify(fs.readdir);
export const stat = promisify(fs.stat);
export const readFile = promisify(fs.readFile);
export const readFileSync = fs.readFileSync;
export const writeFile = promisify(fs.writeFile);
export const writeFileSync = fs.writeFileSync;
export const open = promisify(fs.open);
export const close = promisify(fs.close);
export const read = promisify(fs.read);
export const fstat = promisify(fs.fstat);
export const isSupported = Boolean(fs);
export async function _readToArrayBuffer(fd, start, length) {
  const buffer = Buffer.alloc(length);
  const {
    bytesRead
  } = await read(fd, buffer, 0, length, start);

  if (bytesRead !== length) {
    throw new Error('fs.read failed');
  }

  return toArrayBuffer(buffer);
}
//# sourceMappingURL=fs.js.map