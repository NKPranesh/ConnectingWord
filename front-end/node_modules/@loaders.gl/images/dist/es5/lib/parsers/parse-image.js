"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseImage;

var _assert = require("../utils/assert");

var _imageType = require("../category-api/image-type");

var _parsedImageApi = require("../category-api/parsed-image-api");

var _parseToImage = _interopRequireDefault(require("./parse-to-image"));

var _parseToImageBitmap = _interopRequireDefault(require("./parse-to-image-bitmap"));

var _parseToNodeImage = _interopRequireDefault(require("./parse-to-node-image"));

async function parseImage(arrayBuffer, options, context) {
  options = options || {};
  const imageOptions = options.image || {};
  const imageType = imageOptions.type || 'auto';
  const {
    url
  } = context || {};
  const loadType = getLoadableImageType(imageType);
  let image;

  switch (loadType) {
    case 'imagebitmap':
      image = await (0, _parseToImageBitmap.default)(arrayBuffer, options, url);
      break;

    case 'image':
      image = await (0, _parseToImage.default)(arrayBuffer, options, url);
      break;

    case 'data':
      image = await (0, _parseToNodeImage.default)(arrayBuffer, options);
      break;

    default:
      (0, _assert.assert)(false);
  }

  if (imageType === 'data') {
    image = (0, _parsedImageApi.getImageData)(image);
  }

  return image;
}

function getLoadableImageType(type) {
  switch (type) {
    case 'auto':
    case 'data':
      return (0, _imageType.getDefaultImageType)();

    default:
      (0, _imageType.isImageTypeSupported)(type);
      return type;
  }
}
//# sourceMappingURL=parse-image.js.map