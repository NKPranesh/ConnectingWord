{"ast":null,"code":"import getPalette, { DEFAULT_PALETTE, NULL_COLOR, OTHERS_COLOR } from './palette';\nimport { assert, getAttrValue } from './utils';\nexport default function colorCategories(_ref) {\n  let {\n    attr,\n    domain,\n    colors = DEFAULT_PALETTE,\n    nullColor = NULL_COLOR,\n    othersColor = OTHERS_COLOR\n  } = _ref;\n  assert(Array.isArray(domain), 'Expected \"domain\" to be an array of numbers or strings');\n  const colorsByCategory = {};\n  const palette = typeof colors === 'string' ? getPalette(colors, domain.length) : colors;\n\n  for (const [i, c] of domain.entries()) {\n    colorsByCategory[c] = palette[i];\n  }\n\n  return d => {\n    const value = getAttrValue(attr, d);\n    return Number.isFinite(value) || typeof value === 'string' ? colorsByCategory[value] || othersColor : nullColor;\n  };\n}","map":{"version":3,"sources":["../../../src/style/color-categories-style.js"],"names":["colors","nullColor","othersColor","OTHERS_COLOR","assert","Array","colorsByCategory","palette","getPalette","domain","d","value","getAttrValue","Number"],"mappings":"AAAA,OAAA,UAAA,IAAA,eAAA,EAAA,UAAA,EAAA,YAAA,QAAA,WAAA;AACA,SAAA,MAAA,EAAA,YAAA,QAAA,SAAA;AAEA,eAAe,SAAA,eAAA,OAMZ;AAAA,MANqC;AAAA,IAAA,IAAA;AAAA,IAAA,MAAA;AAGtCA,IAAAA,MAAM,GAHgC,eAAA;AAItCC,IAAAA,SAAS,GAJ6B,UAAA;AAKtCC,IAAAA,WAAW,GAAGC;AALwB,GAMrC;AACDC,EAAAA,MAAM,CAACC,KAAK,CAALA,OAAAA,CAAD,MAACA,CAAD,EAAND,wDAAM,CAANA;AAEA,QAAME,gBAAgB,GAAtB,EAAA;AACA,QAAMC,OAAO,GAAG,OAAA,MAAA,KAAA,QAAA,GAA6BC,UAAU,CAAA,MAAA,EAASC,MAAM,CAAtD,MAAuC,CAAvC,GAAhB,MAAA;;AAEA,OAAK,MAAM,CAAA,CAAA,EAAX,CAAW,CAAX,IAAqBA,MAAM,CAA3B,OAAqBA,EAArB,EAAuC;AACrCH,IAAAA,gBAAgB,CAAhBA,CAAgB,CAAhBA,GAAsBC,OAAO,CAA7BD,CAA6B,CAA7BA;AACD;;AAED,SAAOI,CAAC,IAAI;AACV,UAAMC,KAAK,GAAGC,YAAY,CAAA,IAAA,EAA1B,CAA0B,CAA1B;AACA,WAAOC,MAAM,CAANA,QAAAA,CAAAA,KAAAA,KAA0B,OAAA,KAAA,KAA1BA,QAAAA,GACHP,gBAAgB,CAAhBA,KAAgB,CAAhBA,IADGO,WAAAA,GAAP,SAAA;AAFF,GAAA;AAMD","sourcesContent":["import getPalette, {DEFAULT_PALETTE, NULL_COLOR, OTHERS_COLOR} from './palette';\nimport {assert, getAttrValue} from './utils';\n\nexport default function colorCategories({\n  attr,\n  domain,\n  colors = DEFAULT_PALETTE,\n  nullColor = NULL_COLOR,\n  othersColor = OTHERS_COLOR\n}) {\n  assert(Array.isArray(domain), 'Expected \"domain\" to be an array of numbers or strings');\n\n  const colorsByCategory = {};\n  const palette = typeof colors === 'string' ? getPalette(colors, domain.length) : colors;\n\n  for (const [i, c] of domain.entries()) {\n    colorsByCategory[c] = palette[i];\n  }\n\n  return d => {\n    const value = getAttrValue(attr, d);\n    return Number.isFinite(value) || typeof value === 'string'\n      ? colorsByCategory[value] || othersColor\n      : nullColor;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}