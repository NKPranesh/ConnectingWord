{"ast":null,"code":"import * as node from '../node/buffer';\nexport function isBuffer(value) {\n  return value && typeof value === 'object' && value.isBuffer;\n}\nexport function toBuffer(data) {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\nexport function bufferToArrayBuffer(data) {\n  if (node.toArrayBuffer) {\n    return node.toArrayBuffer(data);\n  }\n\n  return data;\n}","map":{"version":3,"sources":["../../../../src/lib/binary-utils/buffer-utils.ts"],"names":["value","node"],"mappings":"AAAA,OAAO,KAAP,IAAA,MAAA,gBAAA;AAKA,OAAO,SAAA,QAAA,CAAA,KAAA,EAAuC;AAC5C,SAAOA,KAAK,IAAI,OAAA,KAAA,KAATA,QAAAA,IAAsCA,KAAK,CAAlD,QAAA;AACD;AAMD,OAAO,SAAA,QAAA,CAAA,IAAA,EAAqC;AAC1C,SAAOC,IAAI,CAAJA,QAAAA,GAAgBA,IAAI,CAAJA,QAAAA,CAAhBA,IAAgBA,CAAhBA,GAAP,IAAA;AACD;AAMD,OAAO,SAAA,mBAAA,CAAA,IAAA,EAAqD;AAC1D,MAAIA,IAAI,CAAR,aAAA,EAAwB;AAEtB,WAAOA,IAAI,CAAJA,aAAAA,CAAP,IAAOA,CAAP;AACD;;AACD,SAAA,IAAA;AACD","sourcesContent":["import * as node from '../node/buffer';\n\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value: any): boolean {\n  return value && typeof value === 'object' && value.isBuffer;\n}\n\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data: any): Buffer {\n  return node.toBuffer ? node.toBuffer(data) : data;\n}\n\n/**\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function bufferToArrayBuffer(data: any): ArrayBuffer {\n  if (node.toArrayBuffer) {\n    // TODO - per docs we should just be able to call buffer.buffer, but there are issues\n    return node.toArrayBuffer(data);\n  }\n  return data;\n}\n"]},"metadata":{},"sourceType":"module"}