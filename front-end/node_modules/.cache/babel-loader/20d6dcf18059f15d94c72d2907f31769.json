{"ast":null,"code":"var _jsxFileName = \"/Users/riteshnelakosigi/Desktop/ConnectingWord/front-end/src/components/map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { StaticMap } from \"react-map-gl\";\nimport { LineLayer, ScatterplotLayer } from \"@deck.gl/layers\";\nimport DarkMap from \"../data/map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst friendshipData = [{\n  start: [78.4867, 17.385],\n  end: [8.6875, 54.2501],\n  fromName: \"Hyderabad\",\n  toName: \"Denmark\"\n}, {\n  start: [78.4867, 17.385],\n  end: [13.4149, 46.8265],\n  fromName: \"Hyderabad\",\n  toName: \"Austria\"\n}];\nconst peopleData = [{\n  type: \"mid\",\n  name: \"Pranesh\",\n  coordinates: [78.4867, 17.385]\n}, {\n  type: \"major\",\n  name: \"Vamshi\",\n  coordinates: [8.6875, 54.2501]\n}, {\n  type: \"major\",\n  name: \"Mahesh\",\n  coordinates: [13.4149, 46.8265]\n}];\nlet INITIAL_VIEW_STATE = {\n  longitude: 78.4867,\n  latitude: 17.385,\n  zoom: 5,\n  maxZoom: 20,\n  pitch: 30,\n  bearing: 0\n};\nconst MAP_STYLE = DarkMap;\n\nconst Map = () => {\n  _s();\n\n  const [viewState, updateViewState] = useState(INITIAL_VIEW_STATE);\n\n  let getSize = radius => {\n    return (23 - radius) * 100;\n  };\n\n  const layers = [new LineLayer({\n    id: \"friendship\",\n    data: friendshipData,\n    opacity: 0.8,\n    getSourcePosition: d => d.start,\n    getTargetPosition: d => d.end,\n    getColor: [225, 0, 0, 123],\n    getWidth: 5,\n    pickable: true\n  }), new ScatterplotLayer({\n    id: \"person\",\n    data: peopleData,\n    radiusScale: 10,\n    getPosition: d => d.coordinates,\n    getFillColor: [255, 140, 0],\n    getRadius: () => {\n      return getSize(viewState.zoom);\n    },\n    pickable: true\n  })];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DeckGL, {\n      layers: layers,\n      viewState: viewState,\n      controller: true,\n      getTooltip: _ref => {\n        let {\n          object\n        } = _ref;\n        return object && `${object.fromName} to ${object.toName}`;\n      },\n      onViewStateChange: v => updateViewState(v.viewState),\n      children: /*#__PURE__*/_jsxDEV(StaticMap, {\n        reuseMaps: true,\n        mapStyle: MAP_STYLE,\n        preventStyleDiffing: true,\n        mapboxApiAccessToken: \"pk.eyJ1IjoiY29ubmVjdGluZ3dvcmxkIiwiYSI6ImNrd2l3anlzdDB3bTAycG1kYXVlYnZtaXAifQ.fsAb70tSq-vGoIwjXuqreg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"scLHWWvO/sZDM9Wjxyxpodags90=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/riteshnelakosigi/Desktop/ConnectingWord/front-end/src/components/map.js"],"names":["React","useState","DeckGL","StaticMap","LineLayer","ScatterplotLayer","DarkMap","friendshipData","start","end","fromName","toName","peopleData","type","name","coordinates","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","pitch","bearing","MAP_STYLE","Map","viewState","updateViewState","getSize","radius","layers","id","data","opacity","getSourcePosition","d","getTargetPosition","getColor","getWidth","pickable","radiusScale","getPosition","getFillColor","getRadius","object","v"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { StaticMap } from \"react-map-gl\";\nimport { LineLayer, ScatterplotLayer } from \"@deck.gl/layers\";\nimport DarkMap from \"../data/map.json\";\n\nconst friendshipData = [\n  {\n    start: [78.4867, 17.385],\n    end: [8.6875, 54.2501],\n    fromName: \"Hyderabad\",\n    toName: \"Denmark\",\n  },\n  {\n    start: [78.4867, 17.385],\n    end: [13.4149, 46.8265],\n    fromName: \"Hyderabad\",\n    toName: \"Austria\",\n  },\n];\n\nconst peopleData = [\n  {\n    type: \"mid\",\n    name: \"Pranesh\",\n    coordinates: [78.4867, 17.385],\n  },\n  {\n    type: \"major\",\n    name: \"Vamshi\",\n    coordinates: [8.6875, 54.2501],\n  },\n  {\n    type: \"major\",\n    name: \"Mahesh\",\n    coordinates: [13.4149, 46.8265],\n  },\n];\n\nlet INITIAL_VIEW_STATE = {\n  longitude: 78.4867,\n  latitude: 17.385,\n  zoom: 5,\n  maxZoom: 20,\n  pitch: 30,\n  bearing: 0,\n};\n\nconst MAP_STYLE = DarkMap;\n\nconst Map = () => {\n  const [viewState, updateViewState] = useState(INITIAL_VIEW_STATE);\n\n  let getSize = (radius) => {\n    return (23 - radius) * 100;\n  };\n\n  const layers = [\n    new LineLayer({\n      id: \"friendship\",\n      data: friendshipData,\n      opacity: 0.8,\n      getSourcePosition: (d) => d.start,\n      getTargetPosition: (d) => d.end,\n      getColor: [225, 0, 0, 123],\n      getWidth: 5,\n      pickable: true,\n    }),\n    new ScatterplotLayer({\n      id: \"person\",\n      data: peopleData,\n      radiusScale: 10,\n      getPosition: (d) => d.coordinates,\n      getFillColor: [255, 140, 0],\n      getRadius: () => {\n        return getSize(viewState.zoom);\n      },\n      pickable: true,\n    }),\n  ];\n\n  return (\n    <div>\n      <DeckGL\n        layers={layers}\n        viewState={viewState}\n        controller={true}\n        getTooltip={({ object }) =>\n          object && `${object.fromName} to ${object.toName}`\n        }\n        onViewStateChange={(v) => updateViewState(v.viewState)}\n      >\n        <StaticMap\n          reuseMaps\n          mapStyle={MAP_STYLE}\n          preventStyleDiffing={true}\n          mapboxApiAccessToken=\"pk.eyJ1IjoiY29ubmVjdGluZ3dvcmxkIiwiYSI6ImNrd2l3anlzdDB3bTAycG1kYXVlYnZtaXAifQ.fsAb70tSq-vGoIwjXuqreg\"\n        />\n      </DeckGL>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}