{"ast":null,"code":"export function* makeAttributeIterator(values, size) {\n  const ArrayType = values.constructor;\n  const element = new ArrayType(size);\n\n  for (let i = 0; i < values.length; i += size) {\n    for (let j = 0; j < size; j++) {\n      element[j] = element[i + j];\n    }\n\n    yield element;\n  }\n}","map":{"version":3,"sources":["../../../../src/geometry/iterators/attribute-iterator.ts"],"names":["ArrayType","values","element","i","j"],"mappings":"AAKA,OAAO,UAAA,qBAAA,CAAA,MAAA,EAAA,IAAA,EAA0E;AAC/E,QAAMA,SAAS,GAAGC,MAAM,CAAxB,WAAA;AACA,QAAMC,OAAO,GAAG,IAAA,SAAA,CAAhB,IAAgB,CAAhB;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,MAAM,CAA1B,MAAA,EAAmCE,CAAC,IAApC,IAAA,EAA8C;AAC5C,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,IAAA,EAA0BA,CAA1B,EAAA,EAA+B;AAC7BF,MAAAA,OAAO,CAAPA,CAAO,CAAPA,GAAaA,OAAO,CAACC,CAAC,GAAtBD,CAAoB,CAApBA;AACD;;AACD,UAAA,OAAA;AACD;AACF","sourcesContent":["/**\n * Iterates over a single attribute\n * NOTE: For performance, re-yields the same modified element\n * @param param0\n */\nexport function* makeAttributeIterator(values: any, size: number): Iterable<any> {\n  const ArrayType = values.constructor;\n  const element = new ArrayType(size);\n  for (let i = 0; i < values.length; i += size) {\n    for (let j = 0; j < size; j++) {\n      element[j] = element[i + j];\n    }\n    yield element;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}