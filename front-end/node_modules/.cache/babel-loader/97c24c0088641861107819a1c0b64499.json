{"ast":null,"code":"export function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}","map":{"version":3,"sources":["../../../src/lib/gl-matrix-extras.js"],"names":["x","a","y","w","m","out","z"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n// vec2 additions\n\nexport function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\n\n// vec3 additions\n\n// Transform as vector, only uses 3x3 minor matrix\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\n\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\n\n// vec4 additions\n\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n"]},"metadata":{},"sourceType":"module"}