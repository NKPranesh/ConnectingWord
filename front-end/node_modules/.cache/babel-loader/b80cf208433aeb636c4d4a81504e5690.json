{"ast":null,"code":"import VectorTileFeature from './vector-tile-feature.js';\nexport default class VectorTileLayer {\n  constructor(pbf, end) {\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n    pbf.readFields(readLayer, this, end);\n    this.length = this._features.length;\n  }\n\n  feature(i, firstPassData) {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values, firstPassData);\n  }\n\n}\n\nfunction readLayer(tag, layer, pbf) {\n  if (tag === 15) layer.version = pbf.readVarint();else if (tag === 1) layer.name = pbf.readString();else if (tag === 5) layer.extent = pbf.readVarint();else if (tag === 2) layer._features.push(pbf.pos);else if (tag === 3) layer._keys.push(pbf.readString());else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n  let value = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n    value = tag === 1 ? pbf.readString() : tag === 2 ? pbf.readFloat() : tag === 3 ? pbf.readDouble() : tag === 4 ? pbf.readVarint64() : tag === 5 ? pbf.readVarint() : tag === 6 ? pbf.readSVarint() : tag === 7 ? pbf.readBoolean() : null;\n  }\n\n  return value;\n}","map":{"version":3,"sources":["../../../../src/lib/binary-vector-tile/vector-tile-layer.js"],"names":["constructor","pbf","feature","i","end","tag","layer","readValueMessage","value"],"mappings":"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","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileFeature from './vector-tile-feature.js';\n\nexport default class VectorTileLayer {\n  constructor(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n  }\n\n  // return feature `i` from this layer as a `VectorTileFeature`\n  feature(i, firstPassData) {\n    if (i < 0 || i >= this._features.length) {\n      throw new Error('feature index out of bounds');\n    }\n\n    this._pbf.pos = this._features[i];\n\n    const end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(\n      this._pbf,\n      end,\n      this.extent,\n      this._keys,\n      this._values,\n      firstPassData\n    );\n  }\n}\n\nfunction readLayer(tag, layer, pbf) {\n  if (tag === 15) layer.version = pbf.readVarint();\n  else if (tag === 1) layer.name = pbf.readString();\n  else if (tag === 5) layer.extent = pbf.readVarint();\n  else if (tag === 2) layer._features.push(pbf.pos);\n  else if (tag === 3) layer._keys.push(pbf.readString());\n  else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n  let value = null;\n  const end = pbf.readVarint() + pbf.pos;\n\n  while (pbf.pos < end) {\n    const tag = pbf.readVarint() >> 3;\n\n    value =\n      tag === 1\n        ? pbf.readString()\n        : tag === 2\n        ? pbf.readFloat()\n        : tag === 3\n        ? pbf.readDouble()\n        : tag === 4\n        ? pbf.readVarint64()\n        : tag === 5\n        ? pbf.readVarint()\n        : tag === 6\n        ? pbf.readSVarint()\n        : tag === 7\n        ? pbf.readBoolean()\n        : null;\n  }\n\n  return value;\n}\n"]},"metadata":{},"sourceType":"module"}