{"ast":null,"code":"import { picking } from '@luma.gl/core';\nexport default {\n  inject: {\n    'vs:DECKGL_FILTER_COLOR': \"\\n  picking_setPickingColor(geometry.pickingColor);\\n  // for picking depth values\\n  picking_setPickingAttribute(geometry.position.z);\\n  \",\n    'fs:DECKGL_FILTER_COLOR': {\n      order: 99,\n      injection: \"\\n  // use highlight color if this fragment belongs to the selected object.\\n  color = picking_filterHighlightColor(color);\\n\\n  // use picking color if rendering to picking FBO.\\n  color = picking_filterPickingColor(color);\\n    \"\n    }\n  },\n  ...picking\n};","map":{"version":3,"sources":["../../../../src/shaderlib/picking/picking.js"],"names":["inject","order","injection","picking"],"mappings":"AAAA,SAAA,OAAA,QAAA,eAAA;AAEA,eAAe;AACbA,EAAAA,MAAM,EAAE;AACN,8BADM,6IAAA;AAMN,8BAA0B;AACxBC,MAAAA,KAAK,EADmB,EAAA;AAExBC,MAAAA,SAAS,EAAA;AAFe;AANpB,GADK;AAkBb,KAAGC;AAlBU,CAAf","sourcesContent":["import {picking} from '@luma.gl/core';\n\nexport default {\n  inject: {\n    'vs:DECKGL_FILTER_COLOR': `\n  picking_setPickingColor(geometry.pickingColor);\n  // for picking depth values\n  picking_setPickingAttribute(geometry.position.z);\n  `,\n    'fs:DECKGL_FILTER_COLOR': {\n      order: 99,\n      injection: `\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    `\n    }\n  },\n  ...picking\n};\n"]},"metadata":{},"sourceType":"module"}