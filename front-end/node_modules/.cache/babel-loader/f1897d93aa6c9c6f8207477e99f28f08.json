{"ast":null,"code":"const globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\nexport { self_ as self, window_ as window, global_ as global, document_ as document };\nexport const isBrowser = typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\nexport const isWorker = typeof importScripts === 'function';\nconst matches = typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\nexport const nodeVersion = matches && parseFloat(matches[1]) || 0;","map":{"version":3,"sources":["../../../../src/lib/utils/globals.ts"],"names":["globals","self","window","global","document","self_","window_","global_","document_","isBrowser","String","process","isWorker","matches","nodeVersion","parseFloat"],"mappings":"AAwBA,MAAMA,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,OAAA,IAAA,KAAA,WAAA,IADQ,IAAA;AAEdC,EAAAA,MAAM,EAAE,OAAA,MAAA,KAAA,WAAA,IAFM,MAAA;AAGdC,EAAAA,MAAM,EAAE,OAAA,MAAA,KAAA,WAAA,IAHM,MAAA;AAIdC,EAAAA,QAAQ,EAAE,OAAA,QAAA,KAAA,WAAA,IAAmCA;AAJ/B,CAAhB;AAOA,MAAMC,KAAK,GAAGL,OAAO,CAAPA,IAAAA,IAAgBA,OAAO,CAAvBA,MAAAA,IAAkCA,OAAO,CAAvD,MAAA;AACA,MAAMM,OAAO,GAAGN,OAAO,CAAPA,MAAAA,IAAkBA,OAAO,CAAzBA,IAAAA,IAAkCA,OAAO,CAAzD,MAAA;AACA,MAAMO,OAAO,GAAGP,OAAO,CAAPA,MAAAA,IAAkBA,OAAO,CAAzBA,IAAAA,IAAkCA,OAAO,CAAzD,MAAA;AACA,MAAMQ,SAAS,GAAGR,OAAO,CAAPA,QAAAA,IAAlB,EAAA;AAEA,SAAQK,KAAK,IAAb,IAAA,EAAuBC,OAAO,IAA9B,MAAA,EAA0CC,OAAO,IAAjD,MAAA,EAA6DC,SAAS,IAAtE,QAAA;AAEA,OAAO,MAAMC,SAAS,GAEpB,OAAA,OAAA,KAAA,QAAA,IAA+BC,MAAM,CAANA,OAAM,CAANA,KAA/B,kBAAA,IAAyEC,OAAO,CAF3E,OAAA;AAIP,OAAO,MAAMC,QAAQ,GAAG,OAAA,aAAA,KAAjB,UAAA;AAGP,MAAMC,OAAO,GACX,OAAA,OAAA,KAAA,WAAA,IAAkCF,OAAO,CAAzC,OAAA,IAAqD,YAAA,IAAA,CAAiBA,OAAO,CAD/E,OACuD,CADvD;AAEA,OAAO,MAAMG,WAAW,GAAID,OAAO,IAAIE,UAAU,CAACF,OAAO,CAA9B,CAA8B,CAAR,CAArBA,IAArB,CAAA","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n\n/* eslint-disable no-restricted-globals */\nconst globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global,\n  document: typeof document !== 'undefined' && document\n};\n\nconst self_ = globals.self || globals.window || globals.global;\nconst window_ = globals.window || globals.self || globals.global;\nconst global_ = globals.global || globals.self || globals.window;\nconst document_ = globals.document || {};\n\nexport {self_ as self, window_ as window, global_ as global, document_ as document};\n\nexport const isBrowser =\n  // @ts-ignore\n  typeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n\nexport const isWorker = typeof importScripts === 'function';\n\n// Extract node major version\nconst matches =\n  typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n"]},"metadata":{},"sourceType":"module"}