{"ast":null,"code":"import { isBrowser, assert, resolvePath } from '@loaders.gl/loader-utils';\nimport { fs, toBuffer } from '@loaders.gl/loader-utils';\nexport async function writeFile(filePath, arrayBufferOrString, options) {\n  filePath = resolvePath(filePath);\n\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {\n      flag: 'w'\n    });\n  }\n\n  assert(false);\n}\nexport function writeFileSync(filePath, arrayBufferOrString, options) {\n  filePath = resolvePath(filePath);\n\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {\n      flag: 'w'\n    });\n  }\n\n  assert(false);\n}","map":{"version":3,"sources":["../../../../src/lib/fetch/write-file.ts"],"names":["filePath","resolvePath","toBuffer","flag","assert","fs"],"mappings":"AACA,SAAA,SAAA,EAAA,MAAA,EAAA,WAAA,QAAA,0BAAA;AACA,SAAA,EAAA,EAAA,QAAA,QAAA,0BAAA;AAEA,OAAO,eAAA,SAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,OAAA,EAIU;AACfA,EAAAA,QAAQ,GAAGC,WAAW,CAAtBD,QAAsB,CAAtBA;;AACA,MAAI,CAAJ,SAAA,EAAgB;AACd,UAAM,EAAE,CAAF,SAAA,CAAA,QAAA,EAAuBE,QAAQ,CAA/B,mBAA+B,CAA/B,EAAsD;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAtD,CAAN;AACD;;AACDC,EAAAA,MAAM,CAANA,KAAM,CAANA;AACD;AAED,OAAO,SAAA,aAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,OAAA,EAIC;AACNJ,EAAAA,QAAQ,GAAGC,WAAW,CAAtBD,QAAsB,CAAtBA;;AACA,MAAI,CAAJ,SAAA,EAAgB;AACdK,IAAAA,EAAE,CAAFA,aAAAA,CAAAA,QAAAA,EAA2BH,QAAQ,CAAnCG,mBAAmC,CAAnCA,EAA0D;AAACF,MAAAA,IAAI,EAAE;AAAP,KAA1DE;AACD;;AACDD,EAAAA,MAAM,CAANA,KAAM,CAANA;AACD","sourcesContent":["// file write\nimport {isBrowser, assert, resolvePath} from '@loaders.gl/loader-utils';\nimport {fs, toBuffer} from '@loaders.gl/loader-utils';\n\nexport async function writeFile(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): Promise<void> {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n\nexport function writeFileSync(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): void {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n"]},"metadata":{},"sourceType":"module"}