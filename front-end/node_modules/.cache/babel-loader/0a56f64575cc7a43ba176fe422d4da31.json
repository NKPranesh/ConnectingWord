{"ast":null,"code":"export { assert } from './lib/env-utils/assert';\nexport { isBrowser, isWorker, nodeVersion, self, window, global, document } from './lib/env-utils/globals';\nexport { createLoaderWorker } from './lib/worker-loader-utils/create-loader-worker';\nexport { parseWithWorker, canParseWithWorker } from './lib/worker-loader-utils/parse-with-worker';\nexport { parseJSON } from './lib/parser-utils/parse-json';\nexport { toArrayBuffer, sliceArrayBuffer, concatenateArrayBuffers, concatenateTypedArrays, compareArrayBuffers } from './lib/binary-utils/array-buffer-utils';\nexport { padToNBytes, copyToArray, copyArrayBuffer } from './lib/binary-utils/memory-copy-utils';\nexport { copyPaddedArrayBufferToDataView, copyPaddedStringToDataView } from './lib/binary-utils/binary-copy-utils';\nexport { padStringToByteAlignment, copyStringToDataView, copyBinaryToDataView } from './lib/binary-utils/encode-utils';\nexport { getFirstCharacters, getMagicString } from './lib/binary-utils/get-first-characters';\nexport { makeTextEncoderIterator, makeTextDecoderIterator, makeLineIterator, makeNumberedLineIterator } from './lib/iterators/text-iterators';\nexport { forEach, concatenateArrayBuffersAsync } from './lib/iterators/async-iteration';\nexport { default as RequestScheduler } from './lib/request-utils/request-scheduler';\nexport { setPathPrefix, getPathPrefix, resolvePath } from './lib/path-utils/file-aliases';\nexport { addAliases as _addAliases } from './lib/path-utils/file-aliases';\nexport { JSONLoader } from './json-loader';\nimport * as path from './lib/path-utils/path';\nexport { path };\nexport { isBuffer, toBuffer, bufferToArrayBuffer } from './lib/binary-utils/buffer-utils';\nimport * as util from './lib/node/util';\nexport { util };\nexport { promisify } from './lib/node/util';\nimport * as fs from './lib/node/fs';\nexport { fs };\nexport { default as _NodeFileSystem } from './lib/filesystems/node-filesystem';","map":{"version":3,"sources":["../../src/index.ts"],"names":["default","addAliases"],"mappings":"AAgBA,SAAA,MAAA,QAAA,wBAAA;AACA,SAAA,SAAA,EAAA,QAAA,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,QAAA,yBAAA;AAWA,SAAA,kBAAA,QAAA,gDAAA;AACA,SAAA,eAAA,EAAA,kBAAA,QAAA,6CAAA;AAGA,SAAA,SAAA,QAAA,+BAAA;AAGA,SAAA,aAAA,EAAA,gBAAA,EAAA,uBAAA,EAAA,sBAAA,EAAA,mBAAA,QAAA,uCAAA;AAOA,SAAA,WAAA,EAAA,WAAA,EAAA,eAAA,QAAA,sCAAA;AACA,SAAA,+BAAA,EAAA,0BAAA,QAAA,sCAAA;AAIA,SAAA,wBAAA,EAAA,oBAAA,EAAA,oBAAA,QAAA,iCAAA;AAKA,SAAA,kBAAA,EAAA,cAAA,QAAA,yCAAA;AAGA,SAAA,uBAAA,EAAA,uBAAA,EAAA,gBAAA,EAAA,wBAAA,QAAA,gCAAA;AAMA,SAAA,OAAA,EAAA,4BAAA,QAAA,iCAAA;AAGA,SAAQA,OAAO,IAAf,gBAAA,QAAA,uCAAA;AAGA,SAAA,aAAA,EAAA,aAAA,EAAA,WAAA,QAAA,+BAAA;AACA,SAAQC,UAAU,IAAlB,WAAA,QAAA,+BAAA;AAGA,SAAA,UAAA,QAAA,eAAA;AAOA,OAAO,KAAP,IAAA,MAAA,uBAAA;AACA,SAAA,IAAA;AAGA,SAAA,QAAA,EAAA,QAAA,EAAA,mBAAA,QAAA,iCAAA;AAKA,OAAO,KAAP,IAAA,MAAA,iBAAA;AACA,SAAA,IAAA;AAEA,SAAA,SAAA,QAAA,iBAAA;AAGA,OAAO,KAAP,EAAA,MAAA,eAAA;AACA,SAAA,EAAA;AAGA,SAAQD,OAAO,IAAf,eAAA,QAAA,mCAAA","sourcesContent":["// TYPES\nexport type {\n  Loader,\n  LoaderWithParser,\n  LoaderContext,\n  LoaderOptions,\n  Writer,\n  WriterOptions,\n  DataType,\n  SyncDataType,\n  BatchableDataType,\n  IFileSystem,\n  IRandomAccessReadFileSystem\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {\n  isBrowser,\n  isWorker,\n  nodeVersion,\n  self,\n  window,\n  global,\n  document\n} from './lib/env-utils/globals';\n\n// LOADERS.GL-SPECIFIC WORKER UTILS\nexport {createLoaderWorker} from './lib/worker-loader-utils/create-loader-worker';\nexport {parseWithWorker, canParseWithWorker} from './lib/worker-loader-utils/parse-with-worker';\n\n// PARSER UTILS\nexport {parseJSON} from './lib/parser-utils/parse-json';\n\n// MEMORY COPY UTILS\nexport {\n  toArrayBuffer,\n  sliceArrayBuffer,\n  concatenateArrayBuffers,\n  concatenateTypedArrays,\n  compareArrayBuffers\n} from './lib/binary-utils/array-buffer-utils';\nexport {padToNBytes, copyToArray, copyArrayBuffer} from './lib/binary-utils/memory-copy-utils';\nexport {\n  copyPaddedArrayBufferToDataView,\n  copyPaddedStringToDataView\n} from './lib/binary-utils/binary-copy-utils';\nexport {\n  padStringToByteAlignment,\n  copyStringToDataView,\n  copyBinaryToDataView\n} from './lib/binary-utils/encode-utils';\nexport {getFirstCharacters, getMagicString} from './lib/binary-utils/get-first-characters';\n\n// ITERATOR UTILS\nexport {\n  makeTextEncoderIterator,\n  makeTextDecoderIterator,\n  makeLineIterator,\n  makeNumberedLineIterator\n} from './lib/iterators/text-iterators';\nexport {forEach, concatenateArrayBuffersAsync} from './lib/iterators/async-iteration';\n\n// REQUEST UTILS\nexport {default as RequestScheduler} from './lib/request-utils/request-scheduler';\n\n// PATH HELPERS\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/path-utils/file-aliases';\nexport {addAliases as _addAliases} from './lib/path-utils/file-aliases';\n\n// MICRO LOADERS\nexport {JSONLoader} from './json-loader';\n\n// NODE support\n\n// Node.js emulation (can be used in browser)\n\n// `path` replacement (avoids bundling big path polyfill)\nimport * as path from './lib/path-utils/path';\nexport {path};\n\n// Avoid direct use of `Buffer` which pulls in 50KB polyfill\nexport {isBuffer, toBuffer, bufferToArrayBuffer} from './lib/binary-utils/buffer-utils';\n\n// Note.js wrappers (can be safely imported, but not used in browser)\n\n// Use instead of importing 'util'\nimport * as util from './lib/node/util';\nexport {util};\n// TODO - remove\nexport {promisify} from './lib/node/util';\n\n// Use instead of importing 'fs';`\nimport * as fs from './lib/node/fs';\nexport {fs};\n\n// EXPERIMENTAL\nexport {default as _NodeFileSystem} from './lib/filesystems/node-filesystem';\n"]},"metadata":{},"sourceType":"module"}