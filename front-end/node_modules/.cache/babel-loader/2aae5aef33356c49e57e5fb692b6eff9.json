{"ast":null,"code":"export function inheritsFrom(Type, ParentType) {\n  while (Type) {\n    if (Type === ParentType) {\n      return true;\n    }\n\n    Type = Object.getPrototypeOf(Type);\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../../src/utils/inherits-from.js"],"names":["Type","Object"],"mappings":"AACA,OAAO,SAAA,YAAA,CAAA,IAAA,EAAA,UAAA,EAAwC;AAC7C,SAAA,IAAA,EAAa;AACX,QAAIA,IAAI,KAAR,UAAA,EAAyB;AACvB,aAAA,IAAA;AACD;;AACDA,IAAAA,IAAI,GAAGC,MAAM,CAANA,cAAAA,CAAPD,IAAOC,CAAPD;AACD;;AACD,SAAA,KAAA;AACD","sourcesContent":["// Check if one JavaScript class inherits from another\nexport function inheritsFrom(Type, ParentType) {\n  while (Type) {\n    if (Type === ParentType) {\n      return true;\n    }\n    Type = Object.getPrototypeOf(Type);\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}