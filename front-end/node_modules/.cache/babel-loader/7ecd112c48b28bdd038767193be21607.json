{"ast":null,"code":"const vs = `\nuniform vec4 textureFilter_uBoundingBox; //[xMin, yMin, xSize, ySize]\nuniform sampler2D textureFilter_uTexture;\nvec2 textureFilter_filter(vec2 position) {\n  vec2 filterValueIndex;\n  // Transfrom 'pos' to texture coordinate\n  vec2 pos = position - textureFilter_uBoundingBox.xy;\n  pos = pos / textureFilter_uBoundingBox.zw;\n  filterValueIndex.y = float(gl_VertexID);\n  if (pos.x < 0. || pos.x > 1. || pos.y < 0. || pos.y > 1.) {\n    filterValueIndex.x = -1.;\n  } else {\n    // Red channel is ID, Green channel inside/outside polygon\n    vec4 color = texture(textureFilter_uTexture, pos.xy);\n    filterValueIndex.x = color.g > 0. ? color.r : -1.;\n  }\n  return filterValueIndex;\n}\n`;\n\nfunction getUniforms() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const uniforms = {};\n\n  if (opts.boundingBox) {\n    const [xMin, yMin, xMax, yMax] = opts.boundingBox;\n    uniforms.textureFilter_uBoundingBox = [xMin, yMin, xMax - xMin, yMax - yMin];\n  }\n\n  if (opts.texture) {\n    uniforms.textureFilter_uTexture = opts.texture;\n  }\n\n  return uniforms;\n}\n\nexport default {\n  name: 'texture-filter',\n  vs,\n  getUniforms\n};","map":{"version":3,"sources":["../../../../src/gpgpu/point-in-polygon/texture-filter.js"],"names":["vs","opts","uniforms","xMax","yMax","name","getUniforms"],"mappings":"AAEA,MAAMA,EAAE,GAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA,CAAA;;AAoBA,SAAA,WAAA,GAAgC;AAAA,MAAXC,IAAW,uEAAhC,EAAgC;AAC9B,QAAMC,QAAQ,GAAd,EAAA;;AACA,MAAID,IAAI,CAAR,WAAA,EAAsB;AACpB,UAAM,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAA2BA,IAAI,CAArC,WAAA;AACAC,IAAAA,QAAQ,CAARA,0BAAAA,GAAsC,CAAA,IAAA,EAAA,IAAA,EAAaC,IAAI,GAAjB,IAAA,EAA0BC,IAAI,GAApEF,IAAsC,CAAtCA;AACD;;AACD,MAAID,IAAI,CAAR,OAAA,EAAkB;AAChBC,IAAAA,QAAQ,CAARA,sBAAAA,GAAkCD,IAAI,CAAtCC,OAAAA;AACD;;AACD,SAAA,QAAA;AACD;;AAED,eAAe;AACbG,EAAAA,IAAI,EADS,gBAAA;AAAA,EAAA,EAAA;AAGbC,EAAAA;AAHa,CAAf","sourcesContent":["// shader module to perform texture filtering\n\nconst vs = `\nuniform vec4 textureFilter_uBoundingBox; //[xMin, yMin, xSize, ySize]\nuniform sampler2D textureFilter_uTexture;\nvec2 textureFilter_filter(vec2 position) {\n  vec2 filterValueIndex;\n  // Transfrom 'pos' to texture coordinate\n  vec2 pos = position - textureFilter_uBoundingBox.xy;\n  pos = pos / textureFilter_uBoundingBox.zw;\n  filterValueIndex.y = float(gl_VertexID);\n  if (pos.x < 0. || pos.x > 1. || pos.y < 0. || pos.y > 1.) {\n    filterValueIndex.x = -1.;\n  } else {\n    // Red channel is ID, Green channel inside/outside polygon\n    vec4 color = texture(textureFilter_uTexture, pos.xy);\n    filterValueIndex.x = color.g > 0. ? color.r : -1.;\n  }\n  return filterValueIndex;\n}\n`;\n\nfunction getUniforms(opts = {}) {\n  const uniforms = {};\n  if (opts.boundingBox) {\n    const [xMin, yMin, xMax, yMax] = opts.boundingBox;\n    uniforms.textureFilter_uBoundingBox = [xMin, yMin, xMax - xMin, yMax - yMin];\n  }\n  if (opts.texture) {\n    uniforms.textureFilter_uTexture = opts.texture;\n  }\n  return uniforms;\n}\n\nexport default {\n  name: 'texture-filter',\n  vs,\n  getUniforms\n};\n"]},"metadata":{},"sourceType":"module"}