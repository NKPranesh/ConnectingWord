{"ast":null,"code":"import Geometry from '../geometry/geometry';\nimport { uid } from '@luma.gl/webgl';\nconst CUBE_INDICES = new Uint16Array([0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]);\nconst CUBE_POSITIONS = new Float32Array([-1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1]);\nconst CUBE_NORMALS = new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0]);\nconst CUBE_TEX_COORDS = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1]);\nconst ATTRIBUTES = {\n  POSITION: {\n    size: 3,\n    value: new Float32Array(CUBE_POSITIONS)\n  },\n  NORMAL: {\n    size: 3,\n    value: new Float32Array(CUBE_NORMALS)\n  },\n  TEXCOORD_0: {\n    size: 2,\n    value: new Float32Array(CUBE_TEX_COORDS)\n  }\n};\nexport default class CubeGeometry extends Geometry {\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      id = uid('cube-geometry')\n    } = props;\n    super({ ...props,\n      id,\n      indices: {\n        size: 1,\n        value: new Uint16Array(CUBE_INDICES)\n      },\n      attributes: { ...ATTRIBUTES,\n        ...props.attributes\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["../../../src/geometries/cube-geometry.js"],"names":["CUBE_INDICES","CUBE_POSITIONS","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","size","value","NORMAL","TEXCOORD_0","constructor","props","id","uid","indices","attributes"],"mappings":"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","sourcesContent":["import Geometry from '../geometry/geometry';\nimport {uid} from '@luma.gl/webgl';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}