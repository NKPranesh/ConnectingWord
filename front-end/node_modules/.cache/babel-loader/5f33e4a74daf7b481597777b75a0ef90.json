{"ast":null,"code":"const VERSION = typeof \"3.0.13\" !== 'undefined' ? \"3.0.13\" : 'latest';\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async arrayBuffer => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader = JSONLoader;","map":{"version":3,"sources":["../../src/json-loader.ts"],"names":["VERSION","JSONLoader","name","id","module","version","extensions","mimeTypes","category","text","parse","parseTextSync","options","JSON","_typecheckJSONLoader"],"mappings":"AAIA,MAAMA,OAAO,GAAG,OAAA,QAAA,KAAA,WAAA,GAAA,QAAA,GAAhB,QAAA;AAMA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EADoB,MAAA;AAExBC,EAAAA,EAAE,EAFsB,MAAA;AAGxBC,EAAAA,MAAM,EAHkB,MAAA;AAIxBC,EAAAA,OAAO,EAJiB,OAAA;AAKxBC,EAAAA,UAAU,EAAE,CAAA,MAAA,EALY,SAKZ,CALY;AAMxBC,EAAAA,SAAS,EAAE,CANa,kBAMb,CANa;AAOxBC,EAAAA,QAAQ,EAPgB,MAAA;AAQxBC,EAAAA,IAAI,EARoB,IAAA;AAAA,EAAA,aAAA;AAUxBC,EAAAA,KAAK,EAAE,MAAA,WAAA,IAAuBC,aAAa,CAAC,IAAA,WAAA,GAAA,MAAA,CAVpB,WAUoB,CAAD,CAVnB;AAWxBC,EAAAA,OAAO,EAAE;AAXe,CAAnB;;AAeP,SAAA,aAAA,CAAA,IAAA,EAA6B;AAC3B,SAAOC,IAAI,CAAJA,KAAAA,CAAP,IAAOA,CAAP;AACD;;AAED,OAAO,MAAMC,oBAAsC,GAA5C,UAAA","sourcesContent":["import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n"]},"metadata":{},"sourceType":"module"}