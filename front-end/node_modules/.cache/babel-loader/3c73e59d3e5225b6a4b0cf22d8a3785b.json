{"ast":null,"code":"const CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\nexport default function extractStyles(_ref) {\n  let {\n    width,\n    height,\n    style\n  } = _ref;\n  const containerStyle = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n  const canvasStyle = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        canvasStyle[key] = style[key];\n      } else {\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {\n    containerStyle,\n    canvasStyle\n  };\n}","map":{"version":3,"sources":["../../../src/utils/extract-styles.js"],"names":["CANVAS_ONLY_STYLES","mixBlendMode","style","containerStyle","position","zIndex","left","top","height","canvasStyle","key"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG;AACzBC,EAAAA,YAAY,EAAE;AADW,CAA3B;AAIA,eAAe,SAAA,aAAA,OAA+C;AAAA,MAAxB;AAAA,IAAA,KAAA;AAAA,IAAA,MAAA;AAAgBC,IAAAA;AAAhB,GAAwB;AAE5D,QAAMC,cAAc,GAAG;AACrBC,IAAAA,QAAQ,EADa,UAAA;AAErBC,IAAAA,MAAM,EAFe,CAAA;AAGrBC,IAAAA,IAAI,EAHiB,CAAA;AAIrBC,IAAAA,GAAG,EAJkB,CAAA;AAAA,IAAA,KAAA;AAMrBC,IAAAA;AANqB,GAAvB;AAUA,QAAMC,WAAW,GAAG;AAClBH,IAAAA,IAAI,EADc,CAAA;AAElBC,IAAAA,GAAG,EAAE;AAFa,GAApB;;AAKA,MAAA,KAAA,EAAW;AACT,SAAK,MAAL,GAAA,IAAA,KAAA,EAAyB;AACvB,UAAIG,GAAG,IAAP,kBAAA,EAA+B;AAE7BD,QAAAA,WAAW,CAAXA,GAAW,CAAXA,GAAmBP,KAAK,CAAxBO,GAAwB,CAAxBA;AAFF,OAAA,MAGO;AAELN,QAAAA,cAAc,CAAdA,GAAc,CAAdA,GAAsBD,KAAK,CAA3BC,GAA2B,CAA3BA;AACD;AACF;AACF;;AAED,SAAO;AAAA,IAAA,cAAA;AAAiBM,IAAAA;AAAjB,GAAP;AACD","sourcesContent":["const CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({width, height, style}) {\n  // This styling is enforced for correct positioning with children\n  const containerStyle = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n"]},"metadata":{},"sourceType":"module"}