{"ast":null,"code":"function isJSON(text) {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return firstChar === '{' && lastChar === '}' || firstChar === '[' && lastChar === ']';\n}\n\nexport default {\n  name: 'JSON',\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n};","map":{"version":3,"sources":["../../../src/utils/json-loader.js"],"names":["firstChar","text","lastChar","name","extensions","mimeTypes","testText","parseTextSync","JSON","parse"],"mappings":"AAAA,SAAA,MAAA,CAAA,IAAA,EAAsB;AACpB,QAAMA,SAAS,GAAGC,IAAI,CAAtB,CAAsB,CAAtB;AACA,QAAMC,QAAQ,GAAGD,IAAI,CAACA,IAAI,CAAJA,MAAAA,GAAtB,CAAqB,CAArB;AACA,SAAQD,SAAS,KAATA,GAAAA,IAAqBE,QAAQ,KAA9B,GAACF,IAA2CA,SAAS,KAATA,GAAAA,IAAqBE,QAAQ,KAAhF,GAAA;AACD;;AAGD,eAAe;AACbC,EAAAA,IAAI,EADS,MAAA;AAGbC,EAAAA,UAAU,EAAE,CAAA,MAAA,EAHC,SAGD,CAHC;AAIbC,EAAAA,SAAS,EAAE,CAAA,kBAAA,EAJE,sBAIF,CAJE;AAKbC,EAAAA,QAAQ,EALK,MAAA;AAMbC,EAAAA,aAAa,EAAEC,IAAI,CAACC;AANP,CAAf","sourcesContent":["function isJSON(text) {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return (firstChar === '{' && lastChar === '}') || (firstChar === '[' && lastChar === ']');\n}\n\n// TODO - replace with the version in loaders.gl\nexport default {\n  name: 'JSON',\n  // TODO - can we stream process geojson?\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n};\n"]},"metadata":{},"sourceType":"module"}