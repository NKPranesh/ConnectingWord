{"ast":null,"code":"const isBoolean = x => typeof x === 'boolean';\n\nconst isFunction = x => typeof x === 'function';\n\nexport const isObject = x => x !== null && typeof x === 'object';\nexport const isPureObject = x => isObject(x) && x.constructor === {}.constructor;\nexport const isPromise = x => isObject(x) && isFunction(x.then);\nexport const isIterable = x => x && typeof x[Symbol.iterator] === 'function';\nexport const isAsyncIterable = x => x && typeof x[Symbol.asyncIterator] === 'function';\nexport const isIterator = x => x && isFunction(x.next);\nexport const isResponse = x => typeof Response !== 'undefined' && x instanceof Response || x && x.arrayBuffer && x.text && x.json;\nexport const isFile = x => typeof File !== 'undefined' && x instanceof File;\nexport const isBlob = x => typeof Blob !== 'undefined' && x instanceof Blob;\nexport const isWritableDOMStream = x => isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\nexport const isReadableDOMStream = x => typeof ReadableStream !== 'undefined' && x instanceof ReadableStream || isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.getReader);\nexport const isBuffer = x => x && typeof x === 'object' && x.isBuffer;\nexport const isWritableNodeStream = x => isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\nexport const isReadableNodeStream = x => isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\nexport const isReadableStream = x => isReadableDOMStream(x) || isReadableNodeStream(x);\nexport const isWritableStream = x => isWritableDOMStream(x) || isWritableNodeStream(x);","map":{"version":3,"sources":["../../../src/javascript-utils/is-type.ts"],"names":["isBoolean","x","isFunction","isObject","isPureObject","isPromise","isIterable","Symbol","isAsyncIterable","isIterator","isResponse","isFile","isBlob","isWritableDOMStream","isReadableDOMStream","isBuffer","isWritableNodeStream","isReadableNodeStream","isReadableStream","isWritableStream"],"mappings":"AAKA,MAAMA,SAA8B,GAAIC,CAAD,IAAO,OAAA,CAAA,KAA9C,SAAA;;AACA,MAAMC,UAA+B,GAAID,CAAD,IAAO,OAAA,CAAA,KAA/C,UAAA;;AAEA,OAAO,MAAME,QAA6B,GAAIF,CAAD,IAAOA,CAAC,KAADA,IAAAA,IAAc,OAAA,CAAA,KAA3D,QAAA;AACP,OAAO,MAAMG,YAAiC,GAAIH,CAAD,IAC/CE,QAAQ,CAARA,CAAQ,CAARA,IAAeF,CAAC,CAADA,WAAAA,KAAkB,GAD5B,WAAA;AAEP,OAAO,MAAMI,SAA8B,GAAIJ,CAAD,IAAOE,QAAQ,CAARA,CAAQ,CAARA,IAAeD,UAAU,CAACD,CAAC,CAAzE,IAAuE,CAAvE;AAEP,OAAO,MAAMK,UAA+B,GAAIL,CAAD,IAAOA,CAAC,IAAI,OAAOA,CAAC,CAACM,MAAM,CAAf,QAAQ,CAAR,KAApD,UAAA;AACP,OAAO,MAAMC,eAAoC,GAAIP,CAAD,IAClDA,CAAC,IAAI,OAAOA,CAAC,CAACM,MAAM,CAAf,aAAQ,CAAR,KADA,UAAA;AAEP,OAAO,MAAME,UAA+B,GAAIR,CAAD,IAAOA,CAAC,IAAIC,UAAU,CAACD,CAAC,CAAhE,IAA8D,CAA9D;AAEP,OAAO,MAAMS,UAA+B,GAAIT,CAAD,IAC5C,OAAA,QAAA,KAAA,WAAA,IAAmCA,CAAC,YAArC,QAAC,IACAA,CAAC,IAAIA,CAAC,CAANA,WAAAA,IAAsBA,CAAC,CAAvBA,IAAAA,IAAgCA,CAAC,CAF7B,IAAA;AAIP,OAAO,MAAMU,MAA2B,GAAIV,CAAD,IAAO,OAAA,IAAA,KAAA,WAAA,IAA+BA,CAAC,YAA3E,IAAA;AACP,OAAO,MAAMW,MAA2B,GAAIX,CAAD,IAAO,OAAA,IAAA,KAAA,WAAA,IAA+BA,CAAC,YAA3E,IAAA;AAEP,OAAO,MAAMY,mBAAwC,GAAIZ,CAAD,IACtDE,QAAQ,CAARA,CAAQ,CAARA,IAAeD,UAAU,CAACD,CAAC,CAA3BE,KAAyB,CAAzBA,IAAsCD,UAAU,CAACD,CAAC,CAD7C,SAC2C,CAD3C;AAGP,OAAO,MAAMa,mBAAwC,GAAIb,CAAD,IACrD,OAAA,cAAA,KAAA,WAAA,IAAyCA,CAAC,YAA3C,cAAC,IACAE,QAAQ,CAARA,CAAQ,CAARA,IAAeD,UAAU,CAACD,CAAC,CAA3BE,GAAyB,CAAzBA,IAAoCD,UAAU,CAACD,CAAC,CAAhDE,MAA8C,CAA9CA,IAA4DD,UAAU,CAACD,CAAC,CAFpE,SAEkE,CAFlE;AAMP,OAAO,MAAMc,QAA6B,GAAId,CAAD,IAAOA,CAAC,IAAI,OAAA,CAAA,KAALA,QAAAA,IAA8BA,CAAC,CAA5E,QAAA;AAEP,OAAO,MAAMe,oBAAyC,GAAIf,CAAD,IACvDE,QAAQ,CAARA,CAAQ,CAARA,IAAeD,UAAU,CAACD,CAAC,CAA3BE,GAAyB,CAAzBA,IAAoCD,UAAU,CAACD,CAAC,CAAhDE,KAA8C,CAA9CA,IAA2DH,SAAS,CAACC,CAAC,CADjE,QAC+D,CAD/D;AAEP,OAAO,MAAMgB,oBAAyC,GAAIhB,CAAD,IACvDE,QAAQ,CAARA,CAAQ,CAARA,IAAeD,UAAU,CAACD,CAAC,CAA3BE,IAAyB,CAAzBA,IAAqCD,UAAU,CAACD,CAAC,CAAjDE,IAA+C,CAA/CA,IAA2DH,SAAS,CAACC,CAAC,CADjE,QAC+D,CAD/D;AAEP,OAAO,MAAMiB,gBAAqC,GAAIjB,CAAD,IACnDa,mBAAmB,CAAnBA,CAAmB,CAAnBA,IAA0BG,oBAAoB,CADzC,CACyC,CADzC;AAEP,OAAO,MAAME,gBAAqC,GAAIlB,CAAD,IACnDY,mBAAmB,CAAnBA,CAAmB,CAAnBA,IAA0BG,oBAAoB,CADzC,CACyC,CADzC","sourcesContent":["import type {Readable} from 'stream';\n\n/** A DOM or Node readable stream */\nexport type ReadableStreamType = ReadableStream | Readable;\n\nconst isBoolean: (x: any) => boolean = (x) => typeof x === 'boolean';\nconst isFunction: (x: any) => boolean = (x) => typeof x === 'function';\n\nexport const isObject: (x: any) => boolean = (x) => x !== null && typeof x === 'object';\nexport const isPureObject: (x: any) => boolean = (x) =>\n  isObject(x) && x.constructor === {}.constructor;\nexport const isPromise: (x: any) => boolean = (x) => isObject(x) && isFunction(x.then);\n\nexport const isIterable: (x: any) => boolean = (x) => x && typeof x[Symbol.iterator] === 'function';\nexport const isAsyncIterable: (x: any) => boolean = (x) =>\n  x && typeof x[Symbol.asyncIterator] === 'function';\nexport const isIterator: (x: any) => boolean = (x) => x && isFunction(x.next);\n\nexport const isResponse: (x: any) => boolean = (x) =>\n  (typeof Response !== 'undefined' && x instanceof Response) ||\n  (x && x.arrayBuffer && x.text && x.json);\n\nexport const isFile: (x: any) => boolean = (x) => typeof File !== 'undefined' && x instanceof File;\nexport const isBlob: (x: any) => boolean = (x) => typeof Blob !== 'undefined' && x instanceof Blob;\n\nexport const isWritableDOMStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\n\nexport const isReadableDOMStream: (x: any) => boolean = (x) =>\n  (typeof ReadableStream !== 'undefined' && x instanceof ReadableStream) ||\n  (isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.getReader));\n// Not implemented in Firefox: && isFunction(x.pipeTo)\n\n/** Check for Node.js `Buffer` without triggering bundler to include buffer polyfill */\nexport const isBuffer: (x: any) => boolean = (x) => x && typeof x === 'object' && x.isBuffer;\n\nexport const isWritableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\nexport const isReadableNodeStream: (x: any) => boolean = (x) =>\n  isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\nexport const isReadableStream: (x: any) => boolean = (x) =>\n  isReadableDOMStream(x) || isReadableNodeStream(x);\nexport const isWritableStream: (x: any) => boolean = (x) =>\n  isWritableDOMStream(x) || isWritableNodeStream(x);\n"]},"metadata":{},"sourceType":"module"}