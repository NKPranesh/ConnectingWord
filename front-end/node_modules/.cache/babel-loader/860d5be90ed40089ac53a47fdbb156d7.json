{"ast":null,"code":"import encodeGLBSync from './encode-glb';\nexport function encodeGLTFSync(gltf, arrayBuffer, byteOffset, options) {\n  convertBuffersToBase64(gltf);\n  return encodeGLBSync(gltf, arrayBuffer, byteOffset, options);\n}\n\nfunction convertBuffersToBase64(gltf) {\n  let {\n    firstBuffer = 0\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (gltf.buffers && gltf.buffers.length > firstBuffer) {\n    throw new Error('encodeGLTF: multiple buffers not yet implemented');\n  }\n}","map":{"version":3,"sources":["../../../../src/lib/encoders/encode-gltf.js"],"names":["convertBuffersToBase64","encodeGLBSync","firstBuffer","gltf"],"mappings":"AAAA,OAAA,aAAA,MAAA,cAAA;AAYA,OAAO,SAAA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA,UAAA,EAAA,OAAA,EAAgE;AACrEA,EAAAA,sBAAsB,CAAtBA,IAAsB,CAAtBA;AAIA,SAAOC,aAAa,CAAA,IAAA,EAAA,WAAA,EAAA,UAAA,EAApB,OAAoB,CAApB;AACD;;AAED,SAAA,sBAAA,CAAA,IAAA,EAA8D;AAAA,MAAxB;AAACC,IAAAA,WAAW,GAAG;AAAf,GAAwB,uEAA9D,EAA8D;;AAC5D,MAAIC,IAAI,CAAJA,OAAAA,IAAgBA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,GAApB,WAAA,EAAuD;AACrD,UAAM,IAAA,KAAA,CAAN,kDAAM,CAAN;AACD;AACF","sourcesContent":["import encodeGLBSync from './encode-glb';\n\n// Encode the full glTF file as a binary GLB file\n// Returns an ArrayBuffer that represents the complete GLB image that can be saved to file\n//\n// TODO - Does not support encoding to non-GLB versions of glTF format\n// - Encode as a textual JSON file with binary data in base64 data URLs.\n// - Encode as a JSON with all images (and buffers?) in separate binary files\n//\n// glb-file-format-specification\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#\n\nexport function encodeGLTFSync(gltf, arrayBuffer, byteOffset, options) {\n  convertBuffersToBase64(gltf);\n\n  // TODO: Copy buffers to binary\n\n  return encodeGLBSync(gltf, arrayBuffer, byteOffset, options);\n}\n\nfunction convertBuffersToBase64(gltf, {firstBuffer = 0} = {}) {\n  if (gltf.buffers && gltf.buffers.length > firstBuffer) {\n    throw new Error('encodeGLTF: multiple buffers not yet implemented');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}