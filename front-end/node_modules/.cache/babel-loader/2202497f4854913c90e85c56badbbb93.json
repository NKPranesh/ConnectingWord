{"ast":null,"code":"import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0));\n  }\n\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    super(-0, -0, -0);\n\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 3;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX(_ref) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref;\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY(_ref2) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref2;\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ(_ref3) {\n    let {\n      radians,\n      origin = ORIGIN\n    } = _ref3;\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n}","map":{"version":3,"sources":["../../../src/classes/vector3.js"],"names":["ORIGIN","constants","ZERO","Object","constructor","x","y","z","arguments","isArray","config","checkNumber","set","copy","array","fromObject","object","toObject","ELEMENTS","angle","vec3","cross","rotateX","origin","rotateY","rotateZ","transform","transformAsPoint","transformAsVector","vec3_transformMat4AsVector","transformByMatrix3","transformByMatrix2","vec3_transformMat2","transformByQuaternion"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n// eslint-disable-next-line camelcase\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\n\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return (constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0)));\n  }\n\n  /**\n   * @class\n   * @param {Number | [Number, Number, Number]} x\n   * @param {Number} y - rotation around X (latitude)\n   * @param {Number} z - rotation around X (latitude)\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      // @ts-ignore TS2412: Property '0' of type 'number | [number, number, number]' is not assignable to numeric index type 'number'\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 3;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}