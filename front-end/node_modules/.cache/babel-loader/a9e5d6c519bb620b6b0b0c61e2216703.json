{"ast":null,"code":"export function concatTypedArrays() {\n  let arrays = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let byteLength = 0;\n\n  for (let i = 0; i < arrays.length; ++i) {\n    byteLength += arrays[i].byteLength;\n  }\n\n  const buffer = new Uint8Array(byteLength);\n  let byteOffset = 0;\n\n  for (let i = 0; i < arrays.length; ++i) {\n    const data = new Uint8Array(arrays[i].buffer);\n    byteLength = data.length;\n\n    for (let j = 0; j < byteLength; ++j) {\n      buffer[byteOffset++] = data[j];\n    }\n  }\n\n  return buffer;\n}","map":{"version":3,"sources":["../../../../src/geometry/typed-arrays/typed-array-utils.ts"],"names":["arrays","byteLength","i","buffer","byteOffset","data","j"],"mappings":"AAKA,OAAO,SAAA,iBAAA,GAAyD;AAAA,MAA9BA,MAA8B,uEAAzD,EAAyD;AAC9D,MAAIC,UAAU,GAAd,CAAA;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,MAAM,CAA1B,MAAA,EAAmC,EAAnC,CAAA,EAAwC;AACtCC,IAAAA,UAAU,IAAID,MAAM,CAANA,CAAM,CAANA,CAAdC,UAAAA;AACD;;AACD,QAAME,MAAM,GAAG,IAAA,UAAA,CAAf,UAAe,CAAf;AAEA,MAAIC,UAAU,GAAd,CAAA;;AACA,OAAK,IAAIF,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,MAAM,CAA1B,MAAA,EAAmC,EAAnC,CAAA,EAAwC;AACtC,UAAMK,IAAI,GAAG,IAAA,UAAA,CAAeL,MAAM,CAANA,CAAM,CAANA,CAA5B,MAAa,CAAb;AACAC,IAAAA,UAAU,GAAGI,IAAI,CAAjBJ,MAAAA;;AACA,SAAK,IAAIK,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,UAAA,EAAgC,EAAhC,CAAA,EAAqC;AACnCH,MAAAA,MAAM,CAACC,UAAPD,EAAM,CAANA,GAAuBE,IAAI,CAA3BF,CAA2B,CAA3BA;AACD;AACF;;AACD,SAAA,MAAA;AACD","sourcesContent":["/**\n * Concats typed arrays\n * @param arrays\n * @returns new Uint8Array\n */\nexport function concatTypedArrays(arrays: any = []): Uint8Array {\n  let byteLength = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    byteLength += arrays[i].byteLength;\n  }\n  const buffer = new Uint8Array(byteLength);\n\n  let byteOffset = 0;\n  for (let i = 0; i < arrays.length; ++i) {\n    const data = new Uint8Array(arrays[i].buffer);\n    byteLength = data.length;\n    for (let j = 0; j < byteLength; ++j) {\n      buffer[byteOffset++] = data[j];\n    }\n  }\n  return buffer;\n}\n"]},"metadata":{},"sourceType":"module"}