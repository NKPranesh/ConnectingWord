{"ast":null,"code":"import { global } from 'probe.gl/env';\nconst glErrorShadow = {};\n\nfunction error(msg) {\n  if (global.console && global.console.error) {\n    global.console.error(msg);\n  }\n}\n\nfunction log(msg) {\n  if (global.console && global.console.log) {\n    global.console.log(msg);\n  }\n}\n\nfunction synthesizeGLError(err, opt_msg) {\n  glErrorShadow[err] = true;\n\n  if (opt_msg !== undefined) {\n    error(opt_msg);\n  }\n}\n\nfunction wrapGLError(gl) {\n  const f = gl.getError;\n\n  gl.getError = function getError() {\n    let err;\n\n    do {\n      err = f.apply(gl);\n\n      if (err !== 0) {\n        glErrorShadow[err] = true;\n      }\n    } while (err !== 0);\n\n    for (err in glErrorShadow) {\n      if (glErrorShadow[err]) {\n        delete glErrorShadow[err];\n        return parseInt(err, 10);\n      }\n    }\n\n    return 0;\n  };\n}\n\nconst WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\n  const gl = ext.gl;\n  this.ext = ext;\n  this.isAlive = true;\n  this.hasBeenBound = false;\n  this.elementArrayBuffer = null;\n  this.attribs = new Array(ext.maxVertexAttribs);\n\n  for (let n = 0; n < this.attribs.length; n++) {\n    const attrib = new WebGLVertexArrayObjectOES.VertexAttrib(gl);\n    this.attribs[n] = attrib;\n  }\n\n  this.maxAttrib = 0;\n};\n\nWebGLVertexArrayObjectOES.VertexAttrib = function VertexAttrib(gl) {\n  this.enabled = false;\n  this.buffer = null;\n  this.size = 4;\n  this.type = 5126;\n  this.normalized = false;\n  this.stride = 16;\n  this.offset = 0;\n  this.cached = '';\n  this.recache();\n};\n\nWebGLVertexArrayObjectOES.VertexAttrib.prototype.recache = function recache() {\n  this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(':');\n};\n\nconst OESVertexArrayObject = function OESVertexArrayObject(gl) {\n  const self = this;\n  this.gl = gl;\n  wrapGLError(gl);\n  const original = this.original = {\n    getParameter: gl.getParameter,\n    enableVertexAttribArray: gl.enableVertexAttribArray,\n    disableVertexAttribArray: gl.disableVertexAttribArray,\n    bindBuffer: gl.bindBuffer,\n    getVertexAttrib: gl.getVertexAttrib,\n    vertexAttribPointer: gl.vertexAttribPointer\n  };\n\n  gl.getParameter = function getParameter(pname) {\n    if (pname === self.VERTEX_ARRAY_BINDING_OES) {\n      if (self.currentVertexArrayObject === self.defaultVertexArrayObject) {\n        return null;\n      }\n\n      return self.currentVertexArrayObject;\n    }\n\n    return original.getParameter.apply(this, arguments);\n  };\n\n  gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\n    const vao = self.currentVertexArrayObject;\n    vao.maxAttrib = Math.max(vao.maxAttrib, index);\n    const attrib = vao.attribs[index];\n    attrib.enabled = true;\n    return original.enableVertexAttribArray.apply(this, arguments);\n  };\n\n  gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\n    const vao = self.currentVertexArrayObject;\n    vao.maxAttrib = Math.max(vao.maxAttrib, index);\n    const attrib = vao.attribs[index];\n    attrib.enabled = false;\n    return original.disableVertexAttribArray.apply(this, arguments);\n  };\n\n  gl.bindBuffer = function bindBuffer(target, buffer) {\n    switch (target) {\n      case 34962:\n        self.currentArrayBuffer = buffer;\n        break;\n\n      case 34963:\n        self.currentVertexArrayObject.elementArrayBuffer = buffer;\n        break;\n\n      default:\n    }\n\n    return original.bindBuffer.apply(this, arguments);\n  };\n\n  gl.getVertexAttrib = function getVertexAttrib(index, pname) {\n    const vao = self.currentVertexArrayObject;\n    const attrib = vao.attribs[index];\n\n    switch (pname) {\n      case 34975:\n        return attrib.buffer;\n\n      case 34338:\n        return attrib.enabled;\n\n      case 34339:\n        return attrib.size;\n\n      case 34340:\n        return attrib.stride;\n\n      case 34341:\n        return attrib.type;\n\n      case 34922:\n        return attrib.normalized;\n\n      default:\n        return original.getVertexAttrib.apply(this, arguments);\n    }\n  };\n\n  gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\n    const vao = self.currentVertexArrayObject;\n    vao.maxAttrib = Math.max(vao.maxAttrib, indx);\n    const attrib = vao.attribs[indx];\n    attrib.buffer = self.currentArrayBuffer;\n    attrib.size = size;\n    attrib.type = type;\n    attrib.normalized = normalized;\n    attrib.stride = stride;\n    attrib.offset = offset;\n    attrib.recache();\n    return original.vertexAttribPointer.apply(this, arguments);\n  };\n\n  if (gl.instrumentExtension) {\n    gl.instrumentExtension(this, 'OES_vertex_array_object');\n  }\n\n  if (gl.canvas) {\n    gl.canvas.addEventListener('webglcontextrestored', () => {\n      log('OESVertexArrayObject emulation library context restored');\n      self.reset_();\n    }, true);\n  }\n\n  this.reset_();\n};\n\nOESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85b5;\n\nOESVertexArrayObject.prototype.reset_ = function reset_() {\n  const contextWasLost = this.vertexArrayObjects !== undefined;\n\n  if (contextWasLost) {\n    for (let ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\n      this.vertexArrayObjects.isAlive = false;\n    }\n  }\n\n  const gl = this.gl;\n  this.maxVertexAttribs = gl.getParameter(34921);\n  this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\n  this.currentVertexArrayObject = null;\n  this.currentArrayBuffer = null;\n  this.vertexArrayObjects = [this.defaultVertexArrayObject];\n  this.bindVertexArrayOES(null);\n};\n\nOESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\n  const arrayObject = new WebGLVertexArrayObjectOES(this);\n  this.vertexArrayObjects.push(arrayObject);\n  return arrayObject;\n};\n\nOESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\n  arrayObject.isAlive = false;\n  this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\n\n  if (this.currentVertexArrayObject === arrayObject) {\n    this.bindVertexArrayOES(null);\n  }\n};\n\nOESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\n  if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\n    if (arrayObject.hasBeenBound && arrayObject.ext === this) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nOESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\n  const gl = this.gl;\n\n  if (arrayObject && !arrayObject.isAlive) {\n    synthesizeGLError(1282, 'bindVertexArrayOES: attempt to bind deleted arrayObject');\n    return;\n  }\n\n  const original = this.original;\n  const oldVAO = this.currentVertexArrayObject;\n  this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\n  this.currentVertexArrayObject.hasBeenBound = true;\n  const newVAO = this.currentVertexArrayObject;\n\n  if (oldVAO === newVAO) {\n    return;\n  }\n\n  if (!oldVAO || newVAO.elementArrayBuffer !== oldVAO.elementArrayBuffer) {\n    original.bindBuffer.call(gl, 34963, newVAO.elementArrayBuffer);\n  }\n\n  let currentBinding = this.currentArrayBuffer;\n  const maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\n\n  for (let n = 0; n <= maxAttrib; n++) {\n    const attrib = newVAO.attribs[n];\n    const oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\n\n    if (!oldVAO || attrib.enabled !== oldAttrib.enabled) {\n      if (attrib.enabled) {\n        original.enableVertexAttribArray.call(gl, n);\n      } else {\n        original.disableVertexAttribArray.call(gl, n);\n      }\n    }\n\n    if (attrib.enabled) {\n      let bufferChanged = false;\n\n      if (!oldVAO || attrib.buffer !== oldAttrib.buffer) {\n        if (currentBinding !== attrib.buffer) {\n          original.bindBuffer.call(gl, 34962, attrib.buffer);\n          currentBinding = attrib.buffer;\n        }\n\n        bufferChanged = true;\n      }\n\n      if (bufferChanged || attrib.cached !== oldAttrib.cached) {\n        original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\n      }\n    }\n  }\n\n  if (this.currentArrayBuffer !== currentBinding) {\n    original.bindBuffer.call(gl, 34962, this.currentArrayBuffer);\n  }\n};\n\nexport function polyfillVertexArrayObject(gl) {\n  if (typeof gl.createVertexArray === 'function') {\n    return;\n  }\n\n  const original_getSupportedExtensions = gl.getSupportedExtensions;\n\n  gl.getSupportedExtensions = function getSupportedExtensions() {\n    const list = original_getSupportedExtensions.call(this) || [];\n\n    if (list.indexOf('OES_vertex_array_object') < 0) {\n      list.push('OES_vertex_array_object');\n    }\n\n    return list;\n  };\n\n  const original_getExtension = gl.getExtension;\n\n  gl.getExtension = function getExtension(name) {\n    const ext = original_getExtension.call(this, name);\n\n    if (ext) {\n      return ext;\n    }\n\n    if (name !== 'OES_vertex_array_object') {\n      return null;\n    }\n\n    if (!gl.__OESVertexArrayObject) {\n      this.__OESVertexArrayObject = new OESVertexArrayObject(this);\n    }\n\n    return this.__OESVertexArrayObject;\n  };\n}","map":{"version":3,"sources":["../../../src/polyfill/polyfill-vertex-array-object.js"],"names":["glErrorShadow","global","opt_msg","error","f","gl","err","parseInt","WebGLVertexArrayObjectOES","ext","n","attrib","OESVertexArrayObject","self","wrapGLError","original","getParameter","enableVertexAttribArray","disableVertexAttribArray","bindBuffer","getVertexAttrib","vertexAttribPointer","pname","vao","Math","log","contextWasLost","ii","arrayObject","synthesizeGLError","oldVAO","newVAO","currentBinding","maxAttrib","oldAttrib","bufferChanged","original_getSupportedExtensions","list","original_getExtension","name"],"mappings":"AA4BA,SAAA,MAAA,QAAA,cAAA;AAEA,MAAMA,aAAa,GAAnB,EAAA;;AAEA,SAAA,KAAA,CAAA,GAAA,EAAoB;AAClB,MAAIC,MAAM,CAANA,OAAAA,IAAkBA,MAAM,CAANA,OAAAA,CAAtB,KAAA,EAA4C;AAC1CA,IAAAA,MAAM,CAANA,OAAAA,CAAAA,KAAAA,CAAAA,GAAAA;AACD;AACF;;AAED,SAAA,GAAA,CAAA,GAAA,EAAkB;AAChB,MAAIA,MAAM,CAANA,OAAAA,IAAkBA,MAAM,CAANA,OAAAA,CAAtB,GAAA,EAA0C;AACxCA,IAAAA,MAAM,CAANA,OAAAA,CAAAA,GAAAA,CAAAA,GAAAA;AACD;AACF;;AAED,SAAA,iBAAA,CAAA,GAAA,EAAA,OAAA,EAAyC;AACvCD,EAAAA,aAAa,CAAbA,GAAa,CAAbA,GAAAA,IAAAA;;AACA,MAAIE,OAAO,KAAX,SAAA,EAA2B;AACzBC,IAAAA,KAAK,CAALA,OAAK,CAALA;AACD;AACF;;AAED,SAAA,WAAA,CAAA,EAAA,EAAyB;AACvB,QAAMC,CAAC,GAAGC,EAAE,CAAZ,QAAA;;AACAA,EAAAA,EAAE,CAAFA,QAAAA,GAAc,SAAA,QAAA,GAAoB;AAChC,QAAA,GAAA;;AACA,OAAG;AACDC,MAAAA,GAAG,GAAGF,CAAC,CAADA,KAAAA,CAANE,EAAMF,CAANE;;AACA,UAAIA,GAAG,KAAP,CAAA,EAAyB;AACvBN,QAAAA,aAAa,CAAbA,GAAa,CAAbA,GAAAA,IAAAA;AACD;AAJH,KAAA,QAKSM,GAAG,KALZ,CAAA;;AAOA,SAAA,GAAA,IAAA,aAAA,EAA2B;AACzB,UAAIN,aAAa,CAAjB,GAAiB,CAAjB,EAAwB;AACtB,eAAOA,aAAa,CAApB,GAAoB,CAApB;AACA,eAAOO,QAAQ,CAAA,GAAA,EAAf,EAAe,CAAf;AACD;AACF;;AAED,WAAA,CAAA;AAhBFF,GAAAA;AAkBD;;AAED,MAAMG,yBAAyB,GAAG,SAAA,yBAAA,CAAA,GAAA,EAAwC;AACxE,QAAMH,EAAE,GAAGI,GAAG,CAAd,EAAA;AAEA,OAAA,GAAA,GAAA,GAAA;AACA,OAAA,OAAA,GAAA,IAAA;AACA,OAAA,YAAA,GAAA,KAAA;AAEA,OAAA,kBAAA,GAAA,IAAA;AACA,OAAA,OAAA,GAAe,IAAA,KAAA,CAAUA,GAAG,CAA5B,gBAAe,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG,KAAA,OAAA,CAApB,MAAA,EAAyCA,CAAzC,EAAA,EAA8C;AAC5C,UAAMC,MAAM,GAAG,IAAIH,yBAAyB,CAA7B,YAAA,CAAf,EAAe,CAAf;AACA,SAAA,OAAA,CAAA,CAAA,IAAA,MAAA;AACD;;AAED,OAAA,SAAA,GAAA,CAAA;AAdF,CAAA;;AAiBAA,yBAAyB,CAAzBA,YAAAA,GAAyC,SAAA,YAAA,CAAA,EAAA,EAA0B;AACjE,OAAA,OAAA,GAAA,KAAA;AACA,OAAA,MAAA,GAAA,IAAA;AACA,OAAA,IAAA,GAAA,CAAA;AACA,OAAA,IAAA,GAAA,IAAA;AACA,OAAA,UAAA,GAAA,KAAA;AACA,OAAA,MAAA,GAAA,EAAA;AACA,OAAA,MAAA,GAAA,CAAA;AAEA,OAAA,MAAA,GAAA,EAAA;AACA,OAAA,OAAA;AAVFA,CAAAA;;AAYAA,yBAAyB,CAAzBA,YAAAA,CAAAA,SAAAA,CAAAA,OAAAA,GAA2D,SAAA,OAAA,GAAmB;AAC5E,OAAA,MAAA,GAAc,CAAC,KAAD,IAAA,EAAY,KAAZ,IAAA,EAAuB,KAAvB,UAAA,EAAwC,KAAxC,MAAA,EAAqD,KAArD,MAAA,EAAA,IAAA,CAAd,GAAc,CAAd;AADFA,CAAAA;;AAIA,MAAMI,oBAAoB,GAAG,SAAA,oBAAA,CAAA,EAAA,EAAkC;AAC7D,QAAMC,IAAI,GAAV,IAAA;AACA,OAAA,EAAA,GAAA,EAAA;AAEAC,EAAAA,WAAW,CAAXA,EAAW,CAAXA;AAEA,QAAMC,QAAQ,GAAI,KAAA,QAAA,GAAgB;AAChCC,IAAAA,YAAY,EAAEX,EAAE,CADgB,YAAA;AAEhCY,IAAAA,uBAAuB,EAAEZ,EAAE,CAFK,uBAAA;AAGhCa,IAAAA,wBAAwB,EAAEb,EAAE,CAHI,wBAAA;AAIhCc,IAAAA,UAAU,EAAEd,EAAE,CAJkB,UAAA;AAKhCe,IAAAA,eAAe,EAAEf,EAAE,CALa,eAAA;AAMhCgB,IAAAA,mBAAmB,EAAEhB,EAAE,CAACgB;AANQ,GAAlC;;AASAhB,EAAAA,EAAE,CAAFA,YAAAA,GAAkB,SAAA,YAAA,CAAA,KAAA,EAA6B;AAC7C,QAAIiB,KAAK,KAAKT,IAAI,CAAlB,wBAAA,EAA6C;AAC3C,UAAIA,IAAI,CAAJA,wBAAAA,KAAkCA,IAAI,CAA1C,wBAAA,EAAqE;AACnE,eAAA,IAAA;AACD;;AACD,aAAOA,IAAI,CAAX,wBAAA;AACD;;AACD,WAAOE,QAAQ,CAARA,YAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAPFV,GAAAA;;AAUAA,EAAAA,EAAE,CAAFA,uBAAAA,GAA6B,SAAA,uBAAA,CAAA,KAAA,EAAwC;AACnE,UAAMkB,GAAG,GAAGV,IAAI,CAAhB,wBAAA;AACAU,IAAAA,GAAG,CAAHA,SAAAA,GAAgBC,IAAI,CAAJA,GAAAA,CAASD,GAAG,CAAZC,SAAAA,EAAhBD,KAAgBC,CAAhBD;AACA,UAAMZ,MAAM,GAAGY,GAAG,CAAHA,OAAAA,CAAf,KAAeA,CAAf;AACAZ,IAAAA,MAAM,CAANA,OAAAA,GAAAA,IAAAA;AACA,WAAOI,QAAQ,CAARA,uBAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AALFV,GAAAA;;AAOAA,EAAAA,EAAE,CAAFA,wBAAAA,GAA8B,SAAA,wBAAA,CAAA,KAAA,EAAyC;AACrE,UAAMkB,GAAG,GAAGV,IAAI,CAAhB,wBAAA;AACAU,IAAAA,GAAG,CAAHA,SAAAA,GAAgBC,IAAI,CAAJA,GAAAA,CAASD,GAAG,CAAZC,SAAAA,EAAhBD,KAAgBC,CAAhBD;AACA,UAAMZ,MAAM,GAAGY,GAAG,CAAHA,OAAAA,CAAf,KAAeA,CAAf;AACAZ,IAAAA,MAAM,CAANA,OAAAA,GAAAA,KAAAA;AACA,WAAOI,QAAQ,CAARA,wBAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AALFV,GAAAA;;AAQAA,EAAAA,EAAE,CAAFA,UAAAA,GAAgB,SAAA,UAAA,CAAA,MAAA,EAAA,MAAA,EAAoC;AAClD,YAAA,MAAA;AACE,WAAA,KAAA;AACEQ,QAAAA,IAAI,CAAJA,kBAAAA,GAAAA,MAAAA;AACA;;AACF,WAAA,KAAA;AACEA,QAAAA,IAAI,CAAJA,wBAAAA,CAAAA,kBAAAA,GAAAA,MAAAA;AACA;;AACF;AAPF;;AASA,WAAOE,QAAQ,CAARA,UAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAVFV,GAAAA;;AAaAA,EAAAA,EAAE,CAAFA,eAAAA,GAAqB,SAAA,eAAA,CAAA,KAAA,EAAA,KAAA,EAAuC;AAC1D,UAAMkB,GAAG,GAAGV,IAAI,CAAhB,wBAAA;AACA,UAAMF,MAAM,GAAGY,GAAG,CAAHA,OAAAA,CAAf,KAAeA,CAAf;;AACA,YAAA,KAAA;AACE,WAAA,KAAA;AACE,eAAOZ,MAAM,CAAb,MAAA;;AACF,WAAA,KAAA;AACE,eAAOA,MAAM,CAAb,OAAA;;AACF,WAAA,KAAA;AACE,eAAOA,MAAM,CAAb,IAAA;;AACF,WAAA,KAAA;AACE,eAAOA,MAAM,CAAb,MAAA;;AACF,WAAA,KAAA;AACE,eAAOA,MAAM,CAAb,IAAA;;AACF,WAAA,KAAA;AACE,eAAOA,MAAM,CAAb,UAAA;;AACF;AACE,eAAOI,QAAQ,CAARA,eAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAdJ;AAHFV,GAAAA;;AAqBAA,EAAAA,EAAE,CAAFA,mBAAAA,GAAyB,SAAA,mBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAOvB;AACA,UAAMkB,GAAG,GAAGV,IAAI,CAAhB,wBAAA;AACAU,IAAAA,GAAG,CAAHA,SAAAA,GAAgBC,IAAI,CAAJA,GAAAA,CAASD,GAAG,CAAZC,SAAAA,EAAhBD,IAAgBC,CAAhBD;AACA,UAAMZ,MAAM,GAAGY,GAAG,CAAHA,OAAAA,CAAf,IAAeA,CAAf;AACAZ,IAAAA,MAAM,CAANA,MAAAA,GAAgBE,IAAI,CAApBF,kBAAAA;AACAA,IAAAA,MAAM,CAANA,IAAAA,GAAAA,IAAAA;AACAA,IAAAA,MAAM,CAANA,IAAAA,GAAAA,IAAAA;AACAA,IAAAA,MAAM,CAANA,UAAAA,GAAAA,UAAAA;AACAA,IAAAA,MAAM,CAANA,MAAAA,GAAAA,MAAAA;AACAA,IAAAA,MAAM,CAANA,MAAAA,GAAAA,MAAAA;AACAA,IAAAA,MAAM,CAANA,OAAAA;AACA,WAAOI,QAAQ,CAARA,mBAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAlBFV,GAAAA;;AAqBA,MAAIA,EAAE,CAAN,mBAAA,EAA4B;AAC1BA,IAAAA,EAAE,CAAFA,mBAAAA,CAAAA,IAAAA,EAAAA,yBAAAA;AACD;;AAGD,MAAIA,EAAE,CAAN,MAAA,EAAe;AACbA,IAAAA,EAAE,CAAFA,MAAAA,CAAAA,gBAAAA,CAAAA,sBAAAA,EAEE,MAAM;AACJoB,MAAAA,GAAG,CAAHA,yDAAG,CAAHA;AACAZ,MAAAA,IAAI,CAAJA,MAAAA;AAJJR,KAAAA,EAAAA,IAAAA;AAQD;;AAED,OAAA,MAAA;AA/GF,CAAA;;AAkHAO,oBAAoB,CAApBA,SAAAA,CAAAA,wBAAAA,GAAAA,MAAAA;;AAEAA,oBAAoB,CAApBA,SAAAA,CAAAA,MAAAA,GAAwC,SAAA,MAAA,GAAkB;AACxD,QAAMc,cAAc,GAAG,KAAA,kBAAA,KAAvB,SAAA;;AACA,MAAA,cAAA,EAAoB;AAClB,SAAK,IAAIC,EAAE,GAAX,CAAA,EAAiBA,EAAE,GAAG,KAAA,kBAAA,CAAtB,MAAA,EAAsD,EAAtD,EAAA,EAA4D;AAC1D,WAAA,kBAAA,CAAA,OAAA,GAAA,KAAA;AACD;AACF;;AACD,QAAMtB,EAAE,GAAG,KAAX,EAAA;AACA,OAAA,gBAAA,GAAwBA,EAAE,CAAFA,YAAAA,CAAxB,KAAwBA,CAAxB;AAEA,OAAA,wBAAA,GAAgC,IAAA,yBAAA,CAAhC,IAAgC,CAAhC;AACA,OAAA,wBAAA,GAAA,IAAA;AACA,OAAA,kBAAA,GAAA,IAAA;AACA,OAAA,kBAAA,GAA0B,CAAC,KAA3B,wBAA0B,CAA1B;AAEA,OAAA,kBAAA,CAAA,IAAA;AAfFO,CAAAA;;AAkBAA,oBAAoB,CAApBA,SAAAA,CAAAA,oBAAAA,GAAsD,SAAA,oBAAA,GAAgC;AACpF,QAAMgB,WAAW,GAAG,IAAA,yBAAA,CAApB,IAAoB,CAApB;AACA,OAAA,kBAAA,CAAA,IAAA,CAAA,WAAA;AACA,SAAA,WAAA;AAHFhB,CAAAA;;AAMAA,oBAAoB,CAApBA,SAAAA,CAAAA,oBAAAA,GAAsD,SAAA,oBAAA,CAAA,WAAA,EAA2C;AAC/FgB,EAAAA,WAAW,CAAXA,OAAAA,GAAAA,KAAAA;AACA,OAAA,kBAAA,CAAA,MAAA,CAA+B,KAAA,kBAAA,CAAA,OAAA,CAA/B,WAA+B,CAA/B,EAAA,CAAA;;AACA,MAAI,KAAA,wBAAA,KAAJ,WAAA,EAAmD;AACjD,SAAA,kBAAA,CAAA,IAAA;AACD;AALHhB,CAAAA;;AAQAA,oBAAoB,CAApBA,SAAAA,CAAAA,gBAAAA,GAAkD,SAAA,gBAAA,CAAA,WAAA,EAAuC;AACvF,MAAIgB,WAAW,IAAIA,WAAW,YAA9B,yBAAA,EAAqE;AACnE,QAAIA,WAAW,CAAXA,YAAAA,IAA4BA,WAAW,CAAXA,GAAAA,KAAhC,IAAA,EAA0D;AACxD,aAAA,IAAA;AACD;AACF;;AACD,SAAA,KAAA;AANFhB,CAAAA;;AASAA,oBAAoB,CAApBA,SAAAA,CAAAA,kBAAAA,GAAoD,SAAA,kBAAA,CAAA,WAAA,EAAyC;AAC3F,QAAMP,EAAE,GAAG,KAAX,EAAA;;AACA,MAAIuB,WAAW,IAAI,CAACA,WAAW,CAA/B,OAAA,EAAyC;AACvCC,IAAAA,iBAAiB,CAAA,IAAA,EAAjBA,yDAAiB,CAAjBA;AAIA;AACD;;AACD,QAAMd,QAAQ,GAAG,KAAjB,QAAA;AAEA,QAAMe,MAAM,GAAG,KAAf,wBAAA;AACA,OAAA,wBAAA,GAAgCF,WAAW,IAAI,KAA/C,wBAAA;AACA,OAAA,wBAAA,CAAA,YAAA,GAAA,IAAA;AACA,QAAMG,MAAM,GAAG,KAAf,wBAAA;;AAEA,MAAID,MAAM,KAAV,MAAA,EAAuB;AACrB;AACD;;AAED,MAAI,CAAA,MAAA,IAAWC,MAAM,CAANA,kBAAAA,KAA8BD,MAAM,CAAnD,kBAAA,EAAwE;AACtEf,IAAAA,QAAQ,CAARA,UAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAsDgB,MAAM,CAA5DhB,kBAAAA;AACD;;AAED,MAAIiB,cAAc,GAAG,KAArB,kBAAA;AACA,QAAMC,SAAS,GAAGT,IAAI,CAAJA,GAAAA,CAASM,MAAM,GAAGA,MAAM,CAAT,SAAA,GAAfN,CAAAA,EAAwCO,MAAM,CAAhE,SAAkBP,CAAlB;;AACA,OAAK,IAAId,CAAC,GAAV,CAAA,EAAgBA,CAAC,IAAjB,SAAA,EAAgCA,CAAhC,EAAA,EAAqC;AACnC,UAAMC,MAAM,GAAGoB,MAAM,CAANA,OAAAA,CAAf,CAAeA,CAAf;AACA,UAAMG,SAAS,GAAGJ,MAAM,GAAGA,MAAM,CAANA,OAAAA,CAAH,CAAGA,CAAH,GAAxB,IAAA;;AAEA,QAAI,CAAA,MAAA,IAAWnB,MAAM,CAANA,OAAAA,KAAmBuB,SAAS,CAA3C,OAAA,EAAqD;AACnD,UAAIvB,MAAM,CAAV,OAAA,EAAoB;AAClBI,QAAAA,QAAQ,CAARA,uBAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,CAAAA;AADF,OAAA,MAEO;AACLA,QAAAA,QAAQ,CAARA,wBAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,CAAAA;AACD;AACF;;AAED,QAAIJ,MAAM,CAAV,OAAA,EAAoB;AAClB,UAAIwB,aAAa,GAAjB,KAAA;;AACA,UAAI,CAAA,MAAA,IAAWxB,MAAM,CAANA,MAAAA,KAAkBuB,SAAS,CAA1C,MAAA,EAAmD;AACjD,YAAIF,cAAc,KAAKrB,MAAM,CAA7B,MAAA,EAAsC;AACpCI,UAAAA,QAAQ,CAARA,UAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAA8CJ,MAAM,CAApDI,MAAAA;AACAiB,UAAAA,cAAc,GAAGrB,MAAM,CAAvBqB,MAAAA;AACD;;AACDG,QAAAA,aAAa,GAAbA,IAAAA;AACD;;AAED,UAAIA,aAAa,IAAIxB,MAAM,CAANA,MAAAA,KAAkBuB,SAAS,CAAhD,MAAA,EAAyD;AACvDnB,QAAAA,QAAQ,CAARA,mBAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAGEJ,MAAM,CAHRI,IAAAA,EAIEJ,MAAM,CAJRI,IAAAA,EAKEJ,MAAM,CALRI,UAAAA,EAMEJ,MAAM,CANRI,MAAAA,EAOEJ,MAAM,CAPRI,MAAAA;AASD;AACF;AACF;;AAED,MAAI,KAAA,kBAAA,KAAJ,cAAA,EAAgD;AAC9CA,IAAAA,QAAQ,CAARA,UAAAA,CAAAA,IAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAA8C,KAA9CA,kBAAAA;AACD;AAhEHH,CAAAA;;AAmEA,OAAO,SAAA,yBAAA,CAAA,EAAA,EAAuC;AAC5C,MAAI,OAAOP,EAAE,CAAT,iBAAA,KAAJ,UAAA,EAAgD;AAE9C;AACD;;AAED,QAAM+B,+BAA+B,GAAG/B,EAAE,CAA1C,sBAAA;;AACAA,EAAAA,EAAE,CAAFA,sBAAAA,GAA4B,SAAA,sBAAA,GAAkC;AAC5D,UAAMgC,IAAI,GAAGD,+BAA+B,CAA/BA,IAAAA,CAAAA,IAAAA,KAAb,EAAA;;AACA,QAAIC,IAAI,CAAJA,OAAAA,CAAAA,yBAAAA,IAAJ,CAAA,EAAiD;AAC/CA,MAAAA,IAAI,CAAJA,IAAAA,CAAAA,yBAAAA;AACD;;AACD,WAAA,IAAA;AALFhC,GAAAA;;AAQA,QAAMiC,qBAAqB,GAAGjC,EAAE,CAAhC,YAAA;;AACAA,EAAAA,EAAE,CAAFA,YAAAA,GAAkB,SAAA,YAAA,CAAA,IAAA,EAA4B;AAC5C,UAAMI,GAAG,GAAG6B,qBAAqB,CAArBA,IAAAA,CAAAA,IAAAA,EAAZ,IAAYA,CAAZ;;AACA,QAAA,GAAA,EAAS;AACP,aAAA,GAAA;AACD;;AACD,QAAIC,IAAI,KAAR,yBAAA,EAAwC;AACtC,aAAA,IAAA;AACD;;AAED,QAAI,CAAClC,EAAE,CAAP,sBAAA,EAAgC;AAC9B,WAAA,sBAAA,GAA8B,IAAA,oBAAA,CAA9B,IAA8B,CAA9B;AACD;;AACD,WAAO,KAAP,sBAAA;AAZFA,GAAAA;AAcD","sourcesContent":["/*\n** Copyright (c) 2015 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n// Modified to use ES6 and polyfill a provided context rather than\n// the global class.\n\n// @ts-nocheck external code\n\nimport {global} from 'probe.gl/env';\n\nconst glErrorShadow = {};\n\nfunction error(msg) {\n  if (global.console && global.console.error) {\n    global.console.error(msg);\n  }\n}\n\nfunction log(msg) {\n  if (global.console && global.console.log) {\n    global.console.log(msg);\n  }\n}\n\nfunction synthesizeGLError(err, opt_msg) {\n  glErrorShadow[err] = true;\n  if (opt_msg !== undefined) {\n    error(opt_msg);\n  }\n}\n\nfunction wrapGLError(gl) {\n  const f = gl.getError;\n  gl.getError = function getError() {\n    let err;\n    do {\n      err = f.apply(gl);\n      if (err !== gl.NO_ERROR) {\n        glErrorShadow[err] = true;\n      }\n    } while (err !== gl.NO_ERROR);\n\n    for (err in glErrorShadow) {\n      if (glErrorShadow[err]) {\n        delete glErrorShadow[err];\n        return parseInt(err, 10);\n      }\n    }\n\n    return gl.NO_ERROR;\n  };\n}\n\nconst WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\n  const gl = ext.gl;\n\n  this.ext = ext;\n  this.isAlive = true;\n  this.hasBeenBound = false;\n\n  this.elementArrayBuffer = null;\n  this.attribs = new Array(ext.maxVertexAttribs);\n  for (let n = 0; n < this.attribs.length; n++) {\n    const attrib = new WebGLVertexArrayObjectOES.VertexAttrib(gl);\n    this.attribs[n] = attrib;\n  }\n\n  this.maxAttrib = 0;\n};\n\nWebGLVertexArrayObjectOES.VertexAttrib = function VertexAttrib(gl) {\n  this.enabled = false;\n  this.buffer = null;\n  this.size = 4;\n  this.type = gl.FLOAT;\n  this.normalized = false;\n  this.stride = 16;\n  this.offset = 0;\n\n  this.cached = '';\n  this.recache();\n};\nWebGLVertexArrayObjectOES.VertexAttrib.prototype.recache = function recache() {\n  this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(':');\n};\n\nconst OESVertexArrayObject = function OESVertexArrayObject(gl) {\n  const self = this;\n  this.gl = gl;\n\n  wrapGLError(gl);\n\n  const original = (this.original = {\n    getParameter: gl.getParameter,\n    enableVertexAttribArray: gl.enableVertexAttribArray,\n    disableVertexAttribArray: gl.disableVertexAttribArray,\n    bindBuffer: gl.bindBuffer,\n    getVertexAttrib: gl.getVertexAttrib,\n    vertexAttribPointer: gl.vertexAttribPointer\n  });\n\n  gl.getParameter = function getParameter(pname) {\n    if (pname === self.VERTEX_ARRAY_BINDING_OES) {\n      if (self.currentVertexArrayObject === self.defaultVertexArrayObject) {\n        return null;\n      }\n      return self.currentVertexArrayObject;\n    }\n    return original.getParameter.apply(this, arguments);\n  };\n\n  gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\n    const vao = self.currentVertexArrayObject;\n    vao.maxAttrib = Math.max(vao.maxAttrib, index);\n    const attrib = vao.attribs[index];\n    attrib.enabled = true;\n    return original.enableVertexAttribArray.apply(this, arguments);\n  };\n  gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\n    const vao = self.currentVertexArrayObject;\n    vao.maxAttrib = Math.max(vao.maxAttrib, index);\n    const attrib = vao.attribs[index];\n    attrib.enabled = false;\n    return original.disableVertexAttribArray.apply(this, arguments);\n  };\n\n  gl.bindBuffer = function bindBuffer(target, buffer) {\n    switch (target) {\n      case gl.ARRAY_BUFFER:\n        self.currentArrayBuffer = buffer;\n        break;\n      case gl.ELEMENT_ARRAY_BUFFER:\n        self.currentVertexArrayObject.elementArrayBuffer = buffer;\n        break;\n      default:\n    }\n    return original.bindBuffer.apply(this, arguments);\n  };\n\n  gl.getVertexAttrib = function getVertexAttrib(index, pname) {\n    const vao = self.currentVertexArrayObject;\n    const attrib = vao.attribs[index];\n    switch (pname) {\n      case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\n        return attrib.buffer;\n      case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\n        return attrib.enabled;\n      case gl.VERTEX_ATTRIB_ARRAY_SIZE:\n        return attrib.size;\n      case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\n        return attrib.stride;\n      case gl.VERTEX_ATTRIB_ARRAY_TYPE:\n        return attrib.type;\n      case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\n        return attrib.normalized;\n      default:\n        return original.getVertexAttrib.apply(this, arguments);\n    }\n  };\n\n  gl.vertexAttribPointer = function vertexAttribPointer(\n    indx,\n    size,\n    type,\n    normalized,\n    stride,\n    offset\n  ) {\n    const vao = self.currentVertexArrayObject;\n    vao.maxAttrib = Math.max(vao.maxAttrib, indx);\n    const attrib = vao.attribs[indx];\n    attrib.buffer = self.currentArrayBuffer;\n    attrib.size = size;\n    attrib.type = type;\n    attrib.normalized = normalized;\n    attrib.stride = stride;\n    attrib.offset = offset;\n    attrib.recache();\n    return original.vertexAttribPointer.apply(this, arguments);\n  };\n\n  if (gl.instrumentExtension) {\n    gl.instrumentExtension(this, 'OES_vertex_array_object');\n  }\n\n  // undefined for headless gl\n  if (gl.canvas) {\n    gl.canvas.addEventListener(\n      'webglcontextrestored',\n      () => {\n        log('OESVertexArrayObject emulation library context restored');\n        self.reset_();\n      },\n      true\n    );\n  }\n\n  this.reset_();\n};\n\nOESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85b5;\n\nOESVertexArrayObject.prototype.reset_ = function reset_() {\n  const contextWasLost = this.vertexArrayObjects !== undefined;\n  if (contextWasLost) {\n    for (let ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\n      this.vertexArrayObjects.isAlive = false;\n    }\n  }\n  const gl = this.gl;\n  this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n  this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\n  this.currentVertexArrayObject = null;\n  this.currentArrayBuffer = null;\n  this.vertexArrayObjects = [this.defaultVertexArrayObject];\n\n  this.bindVertexArrayOES(null);\n};\n\nOESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\n  const arrayObject = new WebGLVertexArrayObjectOES(this);\n  this.vertexArrayObjects.push(arrayObject);\n  return arrayObject;\n};\n\nOESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\n  arrayObject.isAlive = false;\n  this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\n  if (this.currentVertexArrayObject === arrayObject) {\n    this.bindVertexArrayOES(null);\n  }\n};\n\nOESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\n  if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\n    if (arrayObject.hasBeenBound && arrayObject.ext === this) {\n      return true;\n    }\n  }\n  return false;\n};\n\nOESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\n  const gl = this.gl;\n  if (arrayObject && !arrayObject.isAlive) {\n    synthesizeGLError(\n      gl.INVALID_OPERATION,\n      'bindVertexArrayOES: attempt to bind deleted arrayObject'\n    );\n    return;\n  }\n  const original = this.original;\n\n  const oldVAO = this.currentVertexArrayObject;\n  this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\n  this.currentVertexArrayObject.hasBeenBound = true;\n  const newVAO = this.currentVertexArrayObject;\n\n  if (oldVAO === newVAO) {\n    return;\n  }\n\n  if (!oldVAO || newVAO.elementArrayBuffer !== oldVAO.elementArrayBuffer) {\n    original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\n  }\n\n  let currentBinding = this.currentArrayBuffer;\n  const maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\n  for (let n = 0; n <= maxAttrib; n++) {\n    const attrib = newVAO.attribs[n];\n    const oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\n\n    if (!oldVAO || attrib.enabled !== oldAttrib.enabled) {\n      if (attrib.enabled) {\n        original.enableVertexAttribArray.call(gl, n);\n      } else {\n        original.disableVertexAttribArray.call(gl, n);\n      }\n    }\n\n    if (attrib.enabled) {\n      let bufferChanged = false;\n      if (!oldVAO || attrib.buffer !== oldAttrib.buffer) {\n        if (currentBinding !== attrib.buffer) {\n          original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\n          currentBinding = attrib.buffer;\n        }\n        bufferChanged = true;\n      }\n\n      if (bufferChanged || attrib.cached !== oldAttrib.cached) {\n        original.vertexAttribPointer.call(\n          gl,\n          n,\n          attrib.size,\n          attrib.type,\n          attrib.normalized,\n          attrib.stride,\n          attrib.offset\n        );\n      }\n    }\n  }\n\n  if (this.currentArrayBuffer !== currentBinding) {\n    original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\n  }\n};\n\nexport function polyfillVertexArrayObject(gl) {\n  if (typeof gl.createVertexArray === 'function') {\n    // VAOs directly supported on object (i.e. WebGL 2 context)\n    return;\n  }\n\n  const original_getSupportedExtensions = gl.getSupportedExtensions;\n  gl.getSupportedExtensions = function getSupportedExtensions() {\n    const list = original_getSupportedExtensions.call(this) || [];\n    if (list.indexOf('OES_vertex_array_object') < 0) {\n      list.push('OES_vertex_array_object');\n    }\n    return list;\n  };\n\n  const original_getExtension = gl.getExtension;\n  gl.getExtension = function getExtension(name) {\n    const ext = original_getExtension.call(this, name);\n    if (ext) {\n      return ext;\n    }\n    if (name !== 'OES_vertex_array_object') {\n      return null;\n    }\n\n    if (!gl.__OESVertexArrayObject) {\n      this.__OESVertexArrayObject = new OESVertexArrayObject(this);\n    }\n    return this.__OESVertexArrayObject;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}