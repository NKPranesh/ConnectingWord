{"ast":null,"code":"export { KHR_DRACO_MESH_COMPRESSION } from './lib/gltf-utils/gltf-constants';\nexport { GLTFLoader } from './gltf-loader';\nexport { GLTFWriter } from './gltf-writer';\nexport { GLBLoader } from './glb-loader';\nexport { GLBWriter } from './glb-writer';\nexport { default as GLTFScenegraph } from './lib/api/gltf-scenegraph';\nexport { postProcessGLTF } from './lib/api/post-process-gltf';","map":{"version":3,"sources":["../../src/index.ts"],"names":["default"],"mappings":"AAkBA,SAAA,0BAAA,QAAA,iCAAA;AAGA,SAAA,UAAA,QAAA,eAAA;AACA,SAAA,UAAA,QAAA,eAAA;AAGA,SAAA,SAAA,QAAA,cAAA;AACA,SAAA,SAAA,QAAA,cAAA;AAGA,SAAQA,OAAO,IAAf,cAAA,QAAA,2BAAA;AACA,SAAA,eAAA,QAAA,6BAAA","sourcesContent":["export type {GLB} from './lib/types/glb-types';\nexport type {\n  GLTF,\n  GLTFAccessor,\n  GLTFBuffer,\n  GLTFBufferView,\n  GLTFMeshPrimitive,\n  GLTFMesh,\n  GLTFNode,\n  GLTFMaterial,\n  GLTFSampler,\n  GLTFScene,\n  GLTFSkin,\n  GLTFTexture,\n  GLTFImage\n} from './lib/types/gltf-types';\n\n// Constants\nexport {KHR_DRACO_MESH_COMPRESSION} from './lib/gltf-utils/gltf-constants';\n\n// glTF loader/writer definition objects\nexport {GLTFLoader} from './gltf-loader';\nexport {GLTFWriter} from './gltf-writer';\n\n// GLB Loader & Writer (for custom formats that want to leverage the GLB binary \"envelope\")\nexport {GLBLoader} from './glb-loader';\nexport {GLBWriter} from './glb-writer';\n\n// glTF Data Access Helper Class\nexport {default as GLTFScenegraph} from './lib/api/gltf-scenegraph';\nexport {postProcessGLTF} from './lib/api/post-process-gltf';\nexport type {Mesh} from './lib/types/gltf-json-schema';\nexport type {GLTFObject} from './lib/types/gltf-types';\n"]},"metadata":{},"sourceType":"module"}