{"ast":null,"code":"export function convertToObjectRow(arrayRow, headers) {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n\n  if (!headers) {\n    throw new Error('no headers');\n  }\n\n  const objectRow = {};\n\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n\n  return objectRow;\n}\nexport function convertToArrayRow(objectRow, headers) {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n\n  if (!headers) {\n    throw new Error('no headers');\n  }\n\n  const arrayRow = new Array(headers.length);\n\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n\n  return arrayRow;\n}","map":{"version":3,"sources":["../../../../src/lib/utils/row-utils.ts"],"names":["objectRow","i","headers","arrayRow"],"mappings":"AACA,OAAO,SAAA,kBAAA,CAAA,QAAA,EAAA,OAAA,EAGwB;AAC7B,MAAI,CAAJ,QAAA,EAAe;AACb,UAAM,IAAA,KAAA,CAAN,UAAM,CAAN;AACD;;AACD,MAAI,CAAJ,OAAA,EAAc;AACZ,UAAM,IAAA,KAAA,CAAN,YAAM,CAAN;AACD;;AACD,QAAMA,SAAS,GAAf,EAAA;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,OAAO,CAA3B,MAAA,EAAoCD,CAApC,EAAA,EAAyC;AACvCD,IAAAA,SAAS,CAACE,OAAO,CAAjBF,CAAiB,CAAR,CAATA,GAAwBG,QAAQ,CAAhCH,CAAgC,CAAhCA;AACD;;AACD,SAAA,SAAA;AACD;AAGD,OAAO,SAAA,iBAAA,CAAA,SAAA,EAAA,OAAA,EAGE;AACP,MAAI,CAAJ,SAAA,EAAgB;AACd,UAAM,IAAA,KAAA,CAAN,UAAM,CAAN;AACD;;AACD,MAAI,CAAJ,OAAA,EAAc;AACZ,UAAM,IAAA,KAAA,CAAN,YAAM,CAAN;AACD;;AACD,QAAMG,QAAQ,GAAG,IAAA,KAAA,CAAUD,OAAO,CAAlC,MAAiB,CAAjB;;AACA,OAAK,IAAID,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,OAAO,CAA3B,MAAA,EAAoCD,CAApC,EAAA,EAAyC;AACvCE,IAAAA,QAAQ,CAARA,CAAQ,CAARA,GAAcH,SAAS,CAACE,OAAO,CAA/BC,CAA+B,CAAR,CAAvBA;AACD;;AACD,SAAA,QAAA;AACD","sourcesContent":["/** Convert an object row to an array row */\nexport function convertToObjectRow(\n  arrayRow: any[],\n  headers: string[]\n): {[columnName: string]: any} {\n  if (!arrayRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const objectRow = {};\n  for (let i = 0; i < headers.length; i++) {\n    objectRow[headers[i]] = arrayRow[i];\n  }\n  return objectRow;\n}\n\n/** Convert an object row to an array row */\nexport function convertToArrayRow(\n  objectRow: {[columnName: string]: any},\n  headers: string[]\n): any[] {\n  if (!objectRow) {\n    throw new Error('null row');\n  }\n  if (!headers) {\n    throw new Error('no headers');\n  }\n  const arrayRow = new Array(headers.length);\n  for (let i = 0; i < headers.length; i++) {\n    arrayRow[i] = objectRow[headers[i]];\n  }\n  return arrayRow;\n}\n"]},"metadata":{},"sourceType":"module"}