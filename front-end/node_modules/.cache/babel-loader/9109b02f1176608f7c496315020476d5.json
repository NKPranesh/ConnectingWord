{"ast":null,"code":"import { VERSION } from './lib/env-utils/version';\nexport { assert } from './lib/env-utils/assert';\nexport { isBrowser, isWorker } from './lib/env-utils/globals';\nexport { default as WorkerJob } from './lib/worker-farm/worker-job';\nexport { default as WorkerThread } from './lib/worker-farm/worker-thread';\nexport { default as WorkerFarm } from './lib/worker-farm/worker-farm';\nexport { default as WorkerPool } from './lib/worker-farm/worker-pool';\nexport { default as WorkerBody } from './lib/worker-farm/worker-body';\nexport { processOnWorker, canProcessOnWorker } from './lib/worker-api/process-on-worker';\nexport { createWorker } from './lib/worker-api/create-worker';\nexport { getWorkerURL } from './lib/worker-api/get-worker-url';\nexport { validateWorkerVersion } from './lib/worker-api/validate-worker-version';\nexport { getTransferList } from './lib/worker-utils/get-transfer-list';\nexport { getLibraryUrl, loadLibrary } from './lib/library-utils/library-utils';\nexport { default as AsyncQueue } from './lib/async-queue/async-queue';\nexport { default as ChildProcessProxy } from './lib/process-utils/child-process-proxy';\nexport const NullWorker = {\n  id: 'null',\n  name: 'null',\n  module: 'worker-utils',\n  version: VERSION,\n  options: {\n    null: {}\n  }\n};","map":{"version":3,"sources":["../../src/index.ts"],"names":["default","NullWorker","id","name","module","version","options","null"],"mappings":"AACA,SAAA,OAAA,QAAA,yBAAA;AAcA,SAAA,MAAA,QAAA,wBAAA;AACA,SAAA,SAAA,EAAA,QAAA,QAAA,yBAAA;AAGA,SAAQA,OAAO,IAAf,SAAA,QAAA,8BAAA;AACA,SAAQA,OAAO,IAAf,YAAA,QAAA,iCAAA;AAGA,SAAQA,OAAO,IAAf,UAAA,QAAA,+BAAA;AACA,SAAQA,OAAO,IAAf,UAAA,QAAA,+BAAA;AACA,SAAQA,OAAO,IAAf,UAAA,QAAA,+BAAA;AAEA,SAAA,eAAA,EAAA,kBAAA,QAAA,oCAAA;AACA,SAAA,YAAA,QAAA,gCAAA;AAGA,SAAA,YAAA,QAAA,iCAAA;AACA,SAAA,qBAAA,QAAA,0CAAA;AACA,SAAA,eAAA,QAAA,sCAAA;AAGA,SAAA,aAAA,EAAA,WAAA,QAAA,mCAAA;AAGA,SAAQA,OAAO,IAAf,UAAA,QAAA,+BAAA;AAGA,SAAQA,OAAO,IAAf,iBAAA,QAAA,yCAAA;AAKA,OAAO,MAAMC,UAAwB,GAAG;AACtCC,EAAAA,EAAE,EADoC,MAAA;AAEtCC,EAAAA,IAAI,EAFkC,MAAA;AAGtCC,EAAAA,MAAM,EAHgC,cAAA;AAItCC,EAAAA,OAAO,EAJ+B,OAAA;AAKtCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC;AAL6B,CAAjC","sourcesContent":["import type {WorkerObject} from './types';\nimport {VERSION} from './lib/env-utils/version';\n\n// TYPES\nexport type {\n  WorkerObject,\n  WorkerOptions,\n  // Protocol\n  WorkerMessage,\n  WorkerMessageType,\n  WorkerMessageData,\n  WorkerMessagePayload\n} from './types';\n\n// GENERAL UTILS\nexport {assert} from './lib/env-utils/assert';\nexport {isBrowser, isWorker} from './lib/env-utils/globals';\n\n// WORKER UTILS - TYPES\nexport {default as WorkerJob} from './lib/worker-farm/worker-job';\nexport {default as WorkerThread} from './lib/worker-farm/worker-thread';\n\n// WORKER FARMS\nexport {default as WorkerFarm} from './lib/worker-farm/worker-farm';\nexport {default as WorkerPool} from './lib/worker-farm/worker-pool';\nexport {default as WorkerBody} from './lib/worker-farm/worker-body';\n\nexport {processOnWorker, canProcessOnWorker} from './lib/worker-api/process-on-worker';\nexport {createWorker} from './lib/worker-api/create-worker';\n\n// WORKER UTILS - EXPORTS\nexport {getWorkerURL} from './lib/worker-api/get-worker-url';\nexport {validateWorkerVersion} from './lib/worker-api/validate-worker-version';\nexport {getTransferList} from './lib/worker-utils/get-transfer-list';\n\n// LIBRARY UTILS\nexport {getLibraryUrl, loadLibrary} from './lib/library-utils/library-utils';\n\n// PARSER UTILS\nexport {default as AsyncQueue} from './lib/async-queue/async-queue';\n\n// PROCESS UTILS\nexport {default as ChildProcessProxy} from './lib/process-utils/child-process-proxy';\n\n// WORKER OBJECTS\n\n/** A null worker to test that worker processing is functional */\nexport const NullWorker: WorkerObject = {\n  id: 'null',\n  name: 'null',\n  module: 'worker-utils',\n  version: VERSION,\n  options: {\n    null: {}\n  }\n};\n"]},"metadata":{},"sourceType":"module"}