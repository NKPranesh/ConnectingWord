{"ast":null,"code":"import { lights } from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {\n    ambient = 0.35,\n    diffuse = 0.6,\n    shininess = 32,\n    specularColor = [30, 30, 30]\n  } = material;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {\n    material\n  } = opts;\n\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};","map":{"version":3,"sources":["../../../../src/modules/phong-lighting/phong-lighting.js"],"names":["INITIAL_MODULE_OPTIONS","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","x","opts","material","lighting_uEnabled","getMaterialUniforms","gouraudLighting","name","dependencies","vs","defines","LIGHTING_VERTEX","getUniforms","phongLighting","fs","LIGHTING_FRAGMENT"],"mappings":"AAEA,SAAA,MAAA,QAAA,kBAAA;AACA,OAAA,cAAA,MAAA,uBAAA;AAEA,MAAMA,sBAAsB,GAA5B,EAAA;;AAEA,SAAA,mBAAA,CAAA,QAAA,EAAuC;AACrC,QAAM;AAACC,IAAAA,OAAO,GAAR,IAAA;AAAiBC,IAAAA,OAAO,GAAxB,GAAA;AAAgCC,IAAAA,SAAS,GAAzC,EAAA;AAAgDC,IAAAA,aAAa,GAAG,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAAhE,MAAN,QAAA;AAEA,SAAO;AACLC,IAAAA,iBAAiB,EADZ,OAAA;AAELC,IAAAA,iBAAiB,EAFZ,OAAA;AAGLC,IAAAA,mBAAmB,EAHd,SAAA;AAILC,IAAAA,uBAAuB,EAAEJ,aAAa,CAAbA,GAAAA,CAAkBK,CAAC,IAAIA,CAAC,GAAxBL,GAAAA;AAJpB,GAAP;AAMD;;AAED,SAAA,WAAA,GAAoD;AAAA,MAA/BM,IAA+B,uEAApD,sBAAoD;;AAClD,MAAI,EAAE,cAAN,IAAI,CAAJ,EAA2B;AACzB,WAAA,EAAA;AACD;;AAED,QAAM;AAACC,IAAAA;AAAD,MAAN,IAAA;;AAEA,MAAI,CAAJ,QAAA,EAAe;AACb,WAAO;AAACC,MAAAA,iBAAiB,EAAE;AAApB,KAAP;AACD;;AAED,SAAOC,mBAAmB,CAA1B,QAA0B,CAA1B;AACD;;AAGD,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,IAAI,EADyB,kBAAA;AAE7BC,EAAAA,YAAY,EAAE,CAFe,MAEf,CAFe;AAG7BC,EAAAA,EAAE,EAH2B,cAAA;AAI7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE;AADV,GAJoB;AAO7BC,EAAAA;AAP6B,CAAxB;AAWP,OAAO,MAAMC,aAAa,GAAG;AAC3BN,EAAAA,IAAI,EADuB,gBAAA;AAE3BC,EAAAA,YAAY,EAAE,CAFa,MAEb,CAFa;AAG3BM,EAAAA,EAAE,EAHyB,cAAA;AAI3BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,iBAAiB,EAAE;AADZ,GAJkB;AAO3BH,EAAAA;AAP2B,CAAtB","sourcesContent":["/** @typedef {import('../../types').ShaderModule} ShaderModule */\n\nimport {lights} from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [30, 30, 30]} = material;\n\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {material} = opts;\n\n  if (!material) {\n    return {lighting_uEnabled: false};\n  }\n\n  return getMaterialUniforms(material);\n}\n\n/** @type {ShaderModule} */\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\n\n/** @type {ShaderModule} */\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n"]},"metadata":{},"sourceType":"module"}