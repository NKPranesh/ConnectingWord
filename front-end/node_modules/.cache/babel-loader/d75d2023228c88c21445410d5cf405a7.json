{"ast":null,"code":"import { worldToLngLat } from './web-mercator-utils';\nimport { mod, log2 } from './math-utils';\nconst TILE_SIZE = 512;\nexport default function normalizeViewportProps(_ref) {\n  let {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch = 0,\n    bearing = 0\n  } = _ref;\n\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  const minZoom = log2(height / TILE_SIZE);\n\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch,\n    bearing\n  };\n}","map":{"version":3,"sources":["../../src/normalize-viewport-props.js"],"names":["TILE_SIZE","pitch","bearing","longitude","mod","minZoom","log2","height","zoom","latitude","halfHeightPixels","Math","minLatitude","worldToLngLat","maxLatitude"],"mappings":"AAAA,SAAA,aAAA,QAAA,sBAAA;AACA,SAAA,GAAA,EAAA,IAAA,QAAA,cAAA;AAGA,MAAMA,SAAS,GAAf,GAAA;AAIA,eAAe,SAAA,sBAAA,OAQZ;AAAA,MAR4C;AAAA,IAAA,KAAA;AAAA,IAAA,MAAA;AAAA,IAAA,SAAA;AAAA,IAAA,QAAA;AAAA,IAAA,IAAA;AAM7CC,IAAAA,KAAK,GANwC,CAAA;AAO7CC,IAAAA,OAAO,GAAG;AAPmC,GAQ5C;;AAED,MAAIC,SAAS,GAAG,CAAZA,GAAAA,IAAoBA,SAAS,GAAjC,GAAA,EAAyC;AACvCA,IAAAA,SAAS,GAAGC,GAAG,CAACD,SAAS,GAAV,GAAA,EAAHC,GAAG,CAAHA,GAAZD,GAAAA;AACD;;AACD,MAAID,OAAO,GAAG,CAAVA,GAAAA,IAAkBA,OAAO,GAA7B,GAAA,EAAqC;AACnCA,IAAAA,OAAO,GAAGE,GAAG,CAACF,OAAO,GAAR,GAAA,EAAHE,GAAG,CAAHA,GAAVF,GAAAA;AACD;;AAGD,QAAMG,OAAO,GAAGC,IAAI,CAACC,MAAM,GAA3B,SAAoB,CAApB;;AACA,MAAIC,IAAI,IAAR,OAAA,EAAqB;AACnBA,IAAAA,IAAI,GAAJA,OAAAA;AACAC,IAAAA,QAAQ,GAARA,CAAAA;AAFF,GAAA,MAGO;AAEL,UAAMC,gBAAgB,GAAGH,MAAM,GAANA,CAAAA,GAAaI,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAtC,IAAsCA,CAAtC;AACA,UAAMC,WAAW,GAAGC,aAAa,CAAC,CAAA,CAAA,EAAdA,gBAAc,CAAD,CAAbA,CAApB,CAAoBA,CAApB;;AACA,QAAIJ,QAAQ,GAAZ,WAAA,EAA4B;AAC1BA,MAAAA,QAAQ,GAARA,WAAAA;AADF,KAAA,MAEO;AACL,YAAMK,WAAW,GAAGD,aAAa,CAAC,CAAA,CAAA,EAAIb,SAAS,GAA3Ba,gBAAc,CAAD,CAAbA,CAApB,CAAoBA,CAApB;;AACA,UAAIJ,QAAQ,GAAZ,WAAA,EAA4B;AAC1BA,QAAAA,QAAQ,GAARA,WAAAA;AACD;AACF;AACF;;AAED,SAAO;AAAA,IAAA,KAAA;AAAA,IAAA,MAAA;AAAA,IAAA,SAAA;AAAA,IAAA,QAAA;AAAA,IAAA,IAAA;AAAA,IAAA,KAAA;AAAkDP,IAAAA;AAAlD,GAAP;AACD","sourcesContent":["import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n// Apply mathematical constraints to viewport props\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n"]},"metadata":{},"sourceType":"module"}