{"ast":null,"code":"import { config } from './common';\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(\"Invalid number \".concat(value));\n  }\n\n  return value;\n}\nexport function checkVector(v, length) {\n  let callerName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(\"math.gl: \".concat(callerName, \" some fields set to invalid numbers'\"));\n  }\n\n  return v;\n}\nconst map = {};\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    console.warn(\"\".concat(method, \" has been removed in version \").concat(version, \", see upgrade guide for more information\"));\n  }\n}","map":{"version":3,"sources":["../../../src/lib/validators.js"],"names":["v","i","Number","callerName","config","validateVector","map","console"],"mappings":"AAoBA,SAAA,MAAA,QAAA,UAAA;AAEA,OAAO,SAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAmC;AACxC,MAAIA,CAAC,CAADA,MAAAA,KAAJ,MAAA,EAAyB;AACvB,WAAA,KAAA;AACD;;AAED,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGD,CAAC,CAArB,MAAA,EAA8B,EAA9B,CAAA,EAAmC;AACjC,QAAI,CAACE,MAAM,CAANA,QAAAA,CAAgBF,CAAC,CAAtB,CAAsB,CAAjBE,CAAL,EAA4B;AAC1B,aAAA,KAAA;AACD;AACF;;AACD,SAAA,IAAA;AACD;AAED,OAAO,SAAA,WAAA,CAAA,KAAA,EAA4B;AACjC,MAAI,CAACA,MAAM,CAANA,QAAAA,CAAL,KAAKA,CAAL,EAA6B;AAC3B,UAAM,IAAA,KAAA,CAAA,kBAAA,MAAA,CAAN,KAAM,CAAA,CAAN;AACD;;AACD,SAAA,KAAA;AACD;AAED,OAAO,SAAA,WAAA,CAAA,CAAA,EAAA,MAAA,EAAiD;AAAA,MAAjBC,UAAiB,uEAAjD,EAAiD;;AACtD,MAAIC,MAAM,CAANA,KAAAA,IAAgB,CAACC,cAAc,CAAA,CAAA,EAAnC,MAAmC,CAAnC,EAAgD;AAC9C,UAAM,IAAA,KAAA,CAAA,YAAA,MAAA,CAAA,UAAA,EAAN,sCAAM,CAAA,CAAN;AACD;;AACD,SAAA,CAAA;AACD;AAED,MAAMC,GAAG,GAAT,EAAA;AAEA,OAAO,SAAA,UAAA,CAAA,MAAA,EAAA,OAAA,EAAqC;AAC1C,MAAI,CAACA,GAAG,CAAR,MAAQ,CAAR,EAAkB;AAChBA,IAAAA,GAAG,CAAHA,MAAG,CAAHA,GAAAA,IAAAA;AAEAC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,GAAAA,MAAAA,CAAAA,MAAAA,EAAAA,+BAAAA,EAAAA,MAAAA,CAAAA,OAAAA,EAAAA,0CAAAA,CAAAA;AAGD;AACF","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config} from './common';\n\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value;\n}\n\nexport function checkVector(v, length, callerName = '') {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map = {};\n\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}