{"ast":null,"code":"import isGeometry from '../is-geometry';\nimport { assert } from '../utils/assert';\nexport function getPositions(geometry) {\n  if (isGeometry(geometry)) {\n    const {\n      attributes\n    } = geometry;\n    const position = attributes.POSITION || attributes.positions;\n    assert(position);\n    return position;\n  }\n\n  if (ArrayBuffer.isView(geometry)) {\n    return {\n      values: geometry,\n      size: 3\n    };\n  }\n\n  if (geometry) {\n    assert(geometry.values);\n    return geometry;\n  }\n\n  return assert(false);\n}","map":{"version":3,"sources":["../../../../src/geometry/attributes/get-attribute-from-geometry.ts"],"names":["isGeometry","attributes","position","assert","ArrayBuffer","values","size","geometry"],"mappings":"AAAA,OAAA,UAAA,MAAA,gBAAA;AACA,SAAA,MAAA,QAAA,iBAAA;AASA,OAAO,SAAA,YAAA,CAAA,QAAA,EAAqC;AAE1C,MAAIA,UAAU,CAAd,QAAc,CAAd,EAA0B;AACxB,UAAM;AAACC,MAAAA;AAAD,QAAN,QAAA;AACA,UAAMC,QAAQ,GAAGD,UAAU,CAAVA,QAAAA,IAAuBA,UAAU,CAAlD,SAAA;AACAE,IAAAA,MAAM,CAANA,QAAM,CAANA;AACA,WAAA,QAAA;AACD;;AAGD,MAAIC,WAAW,CAAXA,MAAAA,CAAJ,QAAIA,CAAJ,EAAkC;AAChC,WAAO;AAACC,MAAAA,MAAM,EAAP,QAAA;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAP;AACD;;AAGD,MAAA,QAAA,EAAc;AACZH,IAAAA,MAAM,CAACI,QAAQ,CAAfJ,MAAM,CAANA;AACA,WAAA,QAAA;AACD;;AAED,SAAOA,MAAM,CAAb,KAAa,CAAb;AACD","sourcesContent":["import isGeometry from '../is-geometry';\nimport {assert} from '../utils/assert';\n\n/**\n * analyze positions of geometry\n *\n * @param geometry\n * @returns Position| New geometry |assert\n */\n\nexport function getPositions(geometry: any) {\n  // If geometry, extract positions\n  if (isGeometry(geometry)) {\n    const {attributes} = geometry;\n    const position = attributes.POSITION || attributes.positions;\n    assert(position);\n    return position;\n  }\n\n  // If arraybuffer, assume 3 components\n  if (ArrayBuffer.isView(geometry)) {\n    return {values: geometry, size: 3};\n  }\n\n  // Else assume accessor object\n  if (geometry) {\n    assert(geometry.values);\n    return geometry;\n  }\n\n  return assert(false);\n}\n"]},"metadata":{},"sourceType":"module"}