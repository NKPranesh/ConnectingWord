{"ast":null,"code":"var _jsxFileName = \"/Users/riteshnelakosigi/Desktop/ConnectingWord/front-end/src/components/map2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { render } from \"react-dom\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { LinearInterpolator } from \"@deck.gl/core\";\nimport { CartoLayer, setDefaultCredentials, API_VERSIONS, MAP_TYPES } from \"@deck.gl/carto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VIEW_STATE = {\n  latitude: 40.7368521,\n  longitude: -73.9936065,\n  zoom: 11,\n  pitch: 60,\n  //y-axis angle\n  bearing: 0 //z-axis angle\n\n}; // Colors for the breaks of the polygon layer\n\nconst POLYGON_COLORS = {\n  COLOR_1: [225, 225, 225],\n  COLOR_2: [241, 109, 122],\n  COLOR_3: [250, 138, 118],\n  COLOR_4: [255, 166, 121],\n  COLOR_5: [255, 194, 133],\n  COLOR_6: [255, 221, 154],\n  OTHER: [254, 246, 181]\n};\nsetDefaultCredentials({\n  apiVersion: API_VERSIONS.V2,\n  username: \"public\",\n  apiKey: \"SdBjYyF8NhILWw7kU0n2NQ\"\n});\nconst transitionInterpolator = new LinearInterpolator();\nexport default function App(_ref) {\n  _s();\n\n  let {\n    mrliIndex = \"txn_amt\",\n    industry = \"ret\",\n    week = [\"2020-01-01\", \"2020-01-05\"],\n    mapStyle = \"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"\n  } = _ref;\n  const [viewState, updateViewState] = useState(INITIAL_VIEW_STATE);\n  const rotateCamera = useCallback(() => {\n    updateViewState(v => ({ ...v,\n      bearing: v.bearing + 0.5,\n      transitionDuration: 1000,\n      transitionInterpolator,\n      onTransitionEnd: rotateCamera\n    }));\n  }, []);\n  const SQL = `SELECT the_geom_webmercator, avg(${mrliIndex}) as index\n            FROM mrli_ny_jan WHERE industry ='${industry}' AND timeinstant BETWEEN '${week[0]}' AND '${week[1]}'\n            GROUP BY the_geom_webmercator`;\n  const layers = [new CartoLayer({\n    id: \"carto-layer\",\n    type: MAP_TYPES.QUERY,\n    data: SQL,\n    getFillColor: object => {\n      if (object.properties.index > 1000) {\n        return POLYGON_COLORS.COLOR_1;\n      } else if (object.properties.index > 500) {\n        return POLYGON_COLORS.COLOR_2;\n      } else if (object.properties.index > 300) {\n        return POLYGON_COLORS.COLOR_3;\n      } else if (object.properties.index > 100) {\n        return POLYGON_COLORS.COLOR_4;\n      } else if (object.properties.index > 50) {\n        return POLYGON_COLORS.COLOR_5;\n      } else if (object.properties.index > 25) {\n        return POLYGON_COLORS.COLOR_6;\n      }\n\n      return POLYGON_COLORS.OTHER;\n    },\n    getLineColor: [0, 0, 0, 0],\n    lineWidthMinPixels: 0,\n    pickable: true,\n    filled: true,\n    extruded: true,\n    wireframe: true,\n    getElevation: f => {\n      return f.properties.index ? f.properties.index : 0;\n    },\n    transitions: {\n      getElevation: {\n        duration: 1000,\n        enter: () => [0]\n      }\n    }\n  })];\n\n  const getTooltip = _ref2 => {\n    let {\n      object\n    } = _ref2;\n    if (!object) return false;\n    const {\n      index\n    } = object.properties;\n    return `Index: ${index.toFixed(2)}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(DeckGL, {\n    controller: true,\n    viewState: viewState,\n    layers: layers,\n    getTooltip: getTooltip,\n    onLoad: rotateCamera,\n    onViewStateChange: v => updateViewState(v.viewState),\n    children: /*#__PURE__*/_jsxDEV(StaticMap, {\n      reuseMaps: true,\n      mapStyle: mapStyle,\n      preventStyleDiffing: true,\n      mapboxApiAccessToken: \"pk.eyJ1IjoiY29ubmVjdGluZ3dvcmxkIiwiYSI6ImNrd2l3anlzdDB3bTAycG1kYXVlYnZtaXAifQ.fsAb70tSq-vGoIwjXuqreg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fiL2fdXiUDMLZcNwwbUbXU7HLWE=\");\n\n_c = App;\nexport function renderToDOM(container) {\n  render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this), container);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/riteshnelakosigi/Desktop/ConnectingWord/front-end/src/components/map2.js"],"names":["React","useState","useCallback","render","StaticMap","DeckGL","LinearInterpolator","CartoLayer","setDefaultCredentials","API_VERSIONS","MAP_TYPES","INITIAL_VIEW_STATE","latitude","longitude","zoom","pitch","bearing","POLYGON_COLORS","COLOR_1","COLOR_2","COLOR_3","COLOR_4","COLOR_5","COLOR_6","OTHER","apiVersion","V2","username","apiKey","transitionInterpolator","App","mrliIndex","industry","week","mapStyle","viewState","updateViewState","rotateCamera","v","transitionDuration","onTransitionEnd","SQL","layers","id","type","QUERY","data","getFillColor","object","properties","index","getLineColor","lineWidthMinPixels","pickable","filled","extruded","wireframe","getElevation","f","transitions","duration","enter","getTooltip","toFixed","renderToDOM","container"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { render } from \"react-dom\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { LinearInterpolator } from \"@deck.gl/core\";\nimport {\n  CartoLayer,\n  setDefaultCredentials,\n  API_VERSIONS,\n  MAP_TYPES,\n} from \"@deck.gl/carto\";\n\nconst INITIAL_VIEW_STATE = {\n  latitude: 40.7368521,\n  longitude: -73.9936065,\n  zoom: 11,\n  pitch: 60, //y-axis angle\n  bearing: 0, //z-axis angle\n};\n\n// Colors for the breaks of the polygon layer\nconst POLYGON_COLORS = {\n  COLOR_1: [225, 225, 225],\n  COLOR_2: [241, 109, 122],\n  COLOR_3: [250, 138, 118],\n  COLOR_4: [255, 166, 121],\n  COLOR_5: [255, 194, 133],\n  COLOR_6: [255, 221, 154],\n  OTHER: [254, 246, 181],\n};\n\nsetDefaultCredentials({\n  apiVersion: API_VERSIONS.V2,\n  username: \"public\",\n  apiKey: \"SdBjYyF8NhILWw7kU0n2NQ\",\n});\n\nconst transitionInterpolator = new LinearInterpolator();\n\nexport default function App({\n  mrliIndex = \"txn_amt\",\n  industry = \"ret\",\n  week = [\"2020-01-01\", \"2020-01-05\"],\n  mapStyle = \"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\",\n}) {\n  const [viewState, updateViewState] = useState(INITIAL_VIEW_STATE);\n\n  const rotateCamera = useCallback(() => {\n    updateViewState((v) => ({\n      ...v,\n      bearing: v.bearing + 0.5,\n      transitionDuration: 1000,\n      transitionInterpolator,\n      onTransitionEnd: rotateCamera,\n    }));\n  }, []);\n\n  const SQL = `SELECT the_geom_webmercator, avg(${mrliIndex}) as index\n            FROM mrli_ny_jan WHERE industry ='${industry}' AND timeinstant BETWEEN '${week[0]}' AND '${week[1]}'\n            GROUP BY the_geom_webmercator`;\n\n  const layers = [\n    new CartoLayer({\n      id: \"carto-layer\",\n      type: MAP_TYPES.QUERY,\n      data: SQL,\n      getFillColor: (object) => {\n        if (object.properties.index > 1000) {\n          return POLYGON_COLORS.COLOR_1;\n        } else if (object.properties.index > 500) {\n          return POLYGON_COLORS.COLOR_2;\n        } else if (object.properties.index > 300) {\n          return POLYGON_COLORS.COLOR_3;\n        } else if (object.properties.index > 100) {\n          return POLYGON_COLORS.COLOR_4;\n        } else if (object.properties.index > 50) {\n          return POLYGON_COLORS.COLOR_5;\n        } else if (object.properties.index > 25) {\n          return POLYGON_COLORS.COLOR_6;\n        }\n        return POLYGON_COLORS.OTHER;\n      },\n      getLineColor: [0, 0, 0, 0],\n      lineWidthMinPixels: 0,\n      pickable: true,\n      filled: true,\n      extruded: true,\n      wireframe: true,\n      getElevation: (f) => {\n        return f.properties.index ? f.properties.index : 0;\n      },\n      transitions: {\n        getElevation: {\n          duration: 1000,\n          enter: () => [0],\n        },\n      },\n    }),\n  ];\n\n  const getTooltip = ({ object }) => {\n    if (!object) return false;\n    const { index } = object.properties;\n\n    return `Index: ${index.toFixed(2)}`;\n  };\n\n  return (\n    <DeckGL\n      controller={true}\n      viewState={viewState}\n      layers={layers}\n      getTooltip={getTooltip}\n      onLoad={rotateCamera}\n      onViewStateChange={(v) => updateViewState(v.viewState)}\n    >\n      <StaticMap\n        reuseMaps\n        mapStyle={mapStyle}\n        preventStyleDiffing={true}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiY29ubmVjdGluZ3dvcmxkIiwiYSI6ImNrd2l3anlzdDB3bTAycG1kYXVlYnZtaXAifQ.fsAb70tSq-vGoIwjXuqreg\"\n      />\n    </DeckGL>\n  );\n}\n\nexport function renderToDOM(container) {\n  render(<App />, container);\n}\n"]},"metadata":{},"sourceType":"module"}