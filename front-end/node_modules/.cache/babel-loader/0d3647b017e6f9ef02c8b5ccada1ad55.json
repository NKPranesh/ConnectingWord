{"ast":null,"code":"const SIZEOF_UINT32 = 4;\nexport function parse3DTileHeaderSync(tile, arrayBuffer) {\n  let byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const view = new DataView(arrayBuffer);\n  tile.magic = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.version = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.byteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  if (tile.version !== 1) {\n    throw new Error(\"3D Tile Version \".concat(tile.version, \" not supported\"));\n  }\n\n  return byteOffset;\n}","map":{"version":3,"sources":["../../../../../src/lib/parsers/helpers/parse-3d-tile-header.js"],"names":["SIZEOF_UINT32","byteOffset","view","tile"],"mappings":"AAGA,MAAMA,aAAa,GAAnB,CAAA;AASA,OAAO,SAAA,qBAAA,CAAA,IAAA,EAAA,WAAA,EAAkE;AAAA,MAAhBC,UAAgB,uEAAlE,CAAkE;AACvE,QAAMC,IAAI,GAAG,IAAA,QAAA,CAAb,WAAa,CAAb;AAEAC,EAAAA,IAAI,CAAJA,KAAAA,GAAaD,IAAI,CAAJA,SAAAA,CAAAA,UAAAA,EAAbC,IAAaD,CAAbC;AACAF,EAAAA,UAAU,IAAVA,aAAAA;AAEAE,EAAAA,IAAI,CAAJA,OAAAA,GAAeD,IAAI,CAAJA,SAAAA,CAAAA,UAAAA,EAAfC,IAAeD,CAAfC;AACAF,EAAAA,UAAU,IAAVA,aAAAA;AAEAE,EAAAA,IAAI,CAAJA,UAAAA,GAAkBD,IAAI,CAAJA,SAAAA,CAAAA,UAAAA,EAAlBC,IAAkBD,CAAlBC;AACAF,EAAAA,UAAU,IAAVA,aAAAA;;AAGA,MAAIE,IAAI,CAAJA,OAAAA,KAAJ,CAAA,EAAwB;AACtB,UAAM,IAAA,KAAA,CAAA,mBAAA,MAAA,CAA6BA,IAAI,CAAjC,OAAA,EAAN,gBAAM,CAAA,CAAN;AACD;;AAED,SAAA,UAAA;AACD","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nconst SIZEOF_UINT32 = 4;\n\n/* PARSE FIXED HEADER:\nPopulates\n  magic, // identifies type of tile\n  type, // String version of magic\n  version,\n  byteLength\n */\nexport function parse3DTileHeaderSync(tile, arrayBuffer, byteOffset = 0) {\n  const view = new DataView(arrayBuffer);\n\n  tile.magic = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  tile.version = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  tile.byteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n\n  // TODO - move version check into each tile parser?\n  if (tile.version !== 1) {\n    throw new Error(`3D Tile Version ${tile.version} not supported`);\n  }\n\n  return byteOffset; // Indicates where the parsing ended\n}\n"]},"metadata":{},"sourceType":"module"}