{"ast":null,"code":"import isElectron from './is-electron';\nexport default function isBrowser() {\n  const isNode = typeof process === 'object' && String(process) === '[object process]' && !process.browser;\n  return !isNode || isElectron();\n}\nexport function isBrowserMainThread() {\n  return isBrowser() && typeof document !== 'undefined';\n}","map":{"version":3,"sources":["../../../src/env/is-browser.js"],"names":["isNode","String","process","isElectron","isBrowser"],"mappings":"AAGA,OAAA,UAAA,MAAA,eAAA;AAEA,eAAe,SAAA,SAAA,GAAqB;AAElC,QAAMA,MAAM,GAEV,OAAA,OAAA,KAAA,QAAA,IAA+BC,MAAM,CAANA,OAAM,CAANA,KAA/B,kBAAA,IAAyE,CAACC,OAAO,CAFnF,OAAA;AAIA,SAAO,CAAA,MAAA,IAAWC,UAAlB,EAAA;AACD;AAGD,OAAO,SAAA,mBAAA,GAA+B;AACpC,SAAOC,SAAS,MAAM,OAAA,QAAA,KAAtB,WAAA;AACD","sourcesContent":["// This function is needed in initialization stages,\n// make sure it can be imported in isolation\n\nimport isElectron from './is-electron';\n\nexport default function isBrowser() {\n  // Check if in browser by duck-typing Node context\n  const isNode =\n    // @ts-ignore\n    typeof process === 'object' && String(process) === '[object process]' && !process.browser;\n\n  return !isNode || isElectron();\n}\n\n// document does not exist on worker thread\nexport function isBrowserMainThread() {\n  return isBrowser() && typeof document !== 'undefined';\n}\n"]},"metadata":{},"sourceType":"module"}