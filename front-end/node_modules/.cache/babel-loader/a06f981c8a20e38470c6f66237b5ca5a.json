{"ast":null,"code":"import { isBrowser, resolvePath, fs, toArrayBuffer } from '@loaders.gl/loader-utils';\nimport { assert } from '@loaders.gl/loader-utils';\nexport function readFileSync(url) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  url = resolvePath(url);\n\n  if (!isBrowser) {\n    const buffer = fs.readFileSync(url, options);\n    return typeof buffer !== 'string' ? toArrayBuffer(buffer) : buffer;\n  }\n\n  if (!options.nothrow) {\n    assert(false);\n  }\n\n  return null;\n}","map":{"version":3,"sources":["../../../../src/lib/fetch/read-file.ts"],"names":["options","url","resolvePath","buffer","fs","toArrayBuffer","assert"],"mappings":"AACA,SAAA,SAAA,EAAA,WAAA,EAAA,EAAA,EAAA,aAAA,QAAA,0BAAA;AACA,SAAA,MAAA,QAAA,0BAAA;AAQA,OAAO,SAAA,YAAA,CAAA,GAAA,EAAyD;AAAA,MAAtBA,OAAsB,uEAAzD,EAAyD;AAC9DC,EAAAA,GAAG,GAAGC,WAAW,CAAjBD,GAAiB,CAAjBA;;AAOA,MAAI,CAAJ,SAAA,EAAgB;AACd,UAAME,MAAM,GAAGC,EAAE,CAAFA,YAAAA,CAAAA,GAAAA,EAAf,OAAeA,CAAf;AACA,WAAO,OAAA,MAAA,KAAA,QAAA,GAA6BC,aAAa,CAA1C,MAA0C,CAA1C,GAAP,MAAA;AACD;;AAGD,MAAI,CAACL,OAAO,CAAZ,OAAA,EAAsB;AAEpBM,IAAAA,MAAM,CAANA,KAAM,CAANA;AACD;;AAED,SAAA,IAAA;AACD","sourcesContent":["// File read\nimport {isBrowser, resolvePath, fs, toArrayBuffer} from '@loaders.gl/loader-utils';\nimport {assert} from '@loaders.gl/loader-utils';\n\n// TODO - this is not tested\n// const isDataURL = (url) => url.startsWith('data:');\n\n/**\n * In a few cases (data URIs, node.js) \"files\" can be read synchronously\n */\nexport function readFileSync(url: string, options: object = {}) {\n  url = resolvePath(url);\n\n  // Only support this if we can also support sync data URL decoding in browser\n  // if (isDataURL(url)) {\n  //   return decodeDataUri(url);\n  // }\n\n  if (!isBrowser) {\n    const buffer = fs.readFileSync(url, options);\n    return typeof buffer !== 'string' ? toArrayBuffer(buffer) : buffer;\n  }\n\n  // @ts-ignore\n  if (!options.nothrow) {\n    // throw new Error('Cant load URI synchronously');\n    assert(false);\n  }\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}