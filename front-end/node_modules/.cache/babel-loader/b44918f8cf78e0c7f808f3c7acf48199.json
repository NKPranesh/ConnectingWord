{"ast":null,"code":"const DEFAULT_CHUNK_SIZE = 1024 * 1024;\nexport async function* makeBlobIterator(blob, options) {\n  const chunkSize = (options === null || options === void 0 ? void 0 : options.chunkSize) || DEFAULT_CHUNK_SIZE;\n  let offset = 0;\n\n  while (offset < blob.size) {\n    const end = offset + chunkSize;\n    const chunk = await blob.slice(offset, end).arrayBuffer();\n    offset = end;\n    yield chunk;\n  }\n}","map":{"version":3,"sources":["../../../../src/iterators/make-iterator/make-blob-iterator.ts"],"names":["DEFAULT_CHUNK_SIZE","chunkSize","offset","blob","end","chunk"],"mappings":"AAEA,MAAMA,kBAAkB,GAAG,OAA3B,IAAA;AAQA,OAAO,gBAAA,gBAAA,CAAA,IAAA,EAAA,OAAA,EAGuB;AAC5B,QAAMC,SAAS,GAAG,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAA,KAAP,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAP,SAAA,KAAlB,kBAAA;AAEA,MAAIC,MAAM,GAAV,CAAA;;AACA,SAAOA,MAAM,GAAGC,IAAI,CAApB,IAAA,EAA2B;AACzB,UAAMC,GAAG,GAAGF,MAAM,GAAlB,SAAA;AAEA,UAAMG,KAAK,GAAG,MAAMF,IAAI,CAAJA,KAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAApB,WAAoBA,EAApB;AAEAD,IAAAA,MAAM,GAANA,GAAAA;AACA,UAAA,KAAA;AACD;AACF","sourcesContent":["import type {IteratorOptions} from './make-iterator';\n\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024; // 1MB â€” biggest value that keeps UI responsive\n\n/**\n * Returns an iterator that breaks a big Blob into chunks and yields them one-by-one\n * @param blob Blob or File object\n * @param options\n * @param options.chunkSize\n */\nexport async function* makeBlobIterator(\n  blob: Blob,\n  options?: IteratorOptions\n): AsyncIterable<ArrayBuffer> {\n  const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n\n  let offset = 0;\n  while (offset < blob.size) {\n    const end = offset + chunkSize;\n\n    const chunk = await blob.slice(offset, end).arrayBuffer();\n\n    offset = end;\n    yield chunk;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}