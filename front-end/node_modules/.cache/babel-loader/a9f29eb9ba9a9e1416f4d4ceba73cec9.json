{"ast":null,"code":"import isOldIE from './check-old-ie';\nimport WEBGL_FEATURES from './webgl-features-table';\nimport { assert } from '../utils/assert';\nconst compiledGlslExtensions = {};\nexport default function canCompileGLGSExtension(gl, cap) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n\n  if (!isOldIE(options)) {\n    return true;\n  }\n\n  if (cap in compiledGlslExtensions) {\n    return compiledGlslExtensions[cap];\n  }\n\n  const extensionName = feature[0];\n  const source = `#extension GL_${extensionName} : enable\\nvoid main(void) {}`;\n  const shader = gl.createShader(35633);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const canCompile = gl.getShaderParameter(shader, 35713);\n  gl.deleteShader(shader);\n  compiledGlslExtensions[cap] = canCompile;\n  return canCompile;\n}","map":{"version":3,"sources":["../../../src/features/check-glsl-extension.js"],"names":["compiledGlslExtensions","options","feature","WEBGL_FEATURES","assert","isOldIE","cap","extensionName","source","shader","gl","canCompile"],"mappings":"AAAA,OAAA,OAAA,MAAA,gBAAA;AACA,OAAA,cAAA,MAAA,wBAAA;AACA,SAAA,MAAA,QAAA,iBAAA;AAMA,MAAMA,sBAAsB,GAA5B,EAAA;AAGA,eAAe,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAwD;AAAA,MAAdC,OAAc,uEAAxD,EAAwD;AACrE,QAAMC,OAAO,GAAGC,cAAc,CAA9B,GAA8B,CAA9B;AACAC,EAAAA,MAAM,CAAA,OAAA,EAANA,GAAM,CAANA;;AAEA,MAAI,CAACC,OAAO,CAAZ,OAAY,CAAZ,EAAuB;AACrB,WAAA,IAAA;AACD;;AAED,MAAIC,GAAG,IAAP,sBAAA,EAAmC;AACjC,WAAON,sBAAsB,CAA7B,GAA6B,CAA7B;AACD;;AAED,QAAMO,aAAa,GAAGL,OAAO,CAA7B,CAA6B,CAA7B;AACA,QAAMM,MAAM,GAAI,iBAAgBD,aAAhC,+BAAA;AAEA,QAAME,MAAM,GAAGC,EAAE,CAAFA,YAAAA,CAAf,KAAeA,CAAf;AACAA,EAAAA,EAAE,CAAFA,YAAAA,CAAAA,MAAAA,EAAAA,MAAAA;AACAA,EAAAA,EAAE,CAAFA,aAAAA,CAAAA,MAAAA;AACA,QAAMC,UAAU,GAAGD,EAAE,CAAFA,kBAAAA,CAAAA,MAAAA,EAAnB,KAAmBA,CAAnB;AACAA,EAAAA,EAAE,CAAFA,YAAAA,CAAAA,MAAAA;AACAV,EAAAA,sBAAsB,CAAtBA,GAAsB,CAAtBA,GAAAA,UAAAA;AACA,SAAA,UAAA;AACD","sourcesContent":["import isOldIE from './check-old-ie';\nimport WEBGL_FEATURES from './webgl-features-table';\nimport {assert} from '../utils/assert';\n\n// Enables feature detection in IE11 due to a bug where gl.getExtension may return true\n// but fail to compile when the extension is enabled in the shader. Specifically,\n// the OES_standard_derivatives extension fails to compile in IE11 even though its included\n// in the list of supported extensions.\nconst compiledGlslExtensions = {};\n\n// options allows user agent to be overridden for testing\nexport default function canCompileGLGSExtension(gl, cap, options = {}) {\n  const feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n\n  if (!isOldIE(options)) {\n    return true;\n  }\n\n  if (cap in compiledGlslExtensions) {\n    return compiledGlslExtensions[cap];\n  }\n\n  const extensionName = feature[0];\n  const source = `#extension GL_${extensionName} : enable\\nvoid main(void) {}`;\n\n  const shader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const canCompile = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  gl.deleteShader(shader);\n  compiledGlslExtensions[cap] = canCompile;\n  return canCompile;\n}\n"]},"metadata":{},"sourceType":"module"}