{"ast":null,"code":"export { lumaStats } from './init';\nexport { requestAnimationFrame, cancelAnimationFrame } from './webgl-utils/request-animation-frame';\nexport { cloneTextureFrom } from './webgl-utils/texture-utils';\nexport { getKeyValue, getKey } from './webgl-utils/constants-to-keys';\nexport { getContextInfo, getGLContextInfo, getContextLimits } from './features/limits';\nexport { FEATURES } from './features/webgl-features-table';\nexport { hasFeature, hasFeatures, getFeatures } from './features/features';\nexport { default as canCompileGLGSExtension } from './features/check-glsl-extension';\nexport { default as Accessor } from './classes/accessor';\nexport { default as Buffer } from './classes/buffer';\nexport { Shader, VertexShader, FragmentShader } from './classes/shader';\nexport { default as Program } from './classes/program';\nexport { default as Framebuffer } from './classes/framebuffer';\nexport { default as Renderbuffer } from './classes/renderbuffer';\nexport { default as Texture2D } from './classes/texture-2d';\nexport { default as TextureCube } from './classes/texture-cube';\nexport { clear, clearBuffer } from './classes/clear';\nexport { readPixelsToArray, readPixelsToBuffer, copyToDataUrl, copyToImage, copyToTexture, blit } from './classes/copy-and-blit';\nexport { default as Query } from './classes/query';\nexport { default as Texture3D } from './classes/texture-3d';\nexport { default as TransformFeedback } from './classes/transform-feedback';\nexport { default as VertexArrayObject } from './classes/vertex-array-object';\nexport { default as VertexArray } from './classes/vertex-array';\nexport { default as UniformBufferLayout } from './classes/uniform-buffer-layout';\nexport { setPathPrefix, loadFile, loadImage } from './utils/load-file';\nexport { default as getShaderName } from './glsl-utils/get-shader-name';\nexport { default as getShaderVersion } from './glsl-utils/get-shader-version';\nexport { log } from '@luma.gl/gltools';\nexport { assert } from './utils/assert';\nexport { uid, isObjectEmpty } from './utils/utils';\nexport { parseUniformName, getUniformSetter } from './classes/uniforms';\nexport { getDebugTableForUniforms } from './debug/debug-uniforms';\nexport { getDebugTableForVertexArray } from './debug/debug-vertex-array';\nexport { getDebugTableForProgramConfiguration } from './debug/debug-program-configuration';","map":{"version":3,"sources":["../../src/index.js"],"names":["default"],"mappings":"AAOA,SAAA,SAAA,QAAA,QAAA;AAGA,SAAA,qBAAA,EAAA,oBAAA,QAAA,uCAAA;AAGA,SAAA,gBAAA,QAAA,6BAAA;AACA,SAAA,WAAA,EAAA,MAAA,QAAA,iCAAA;AACA,SAAA,cAAA,EAAA,gBAAA,EAAA,gBAAA,QAAA,mBAAA;AACA,SAAA,QAAA,QAAA,iCAAA;AACA,SAAA,UAAA,EAAA,WAAA,EAAA,WAAA,QAAA,qBAAA;AACA,SAAQA,OAAO,IAAf,uBAAA,QAAA,iCAAA;AAGA,SAAQA,OAAO,IAAf,QAAA,QAAA,oBAAA;AAGA,SAAQA,OAAO,IAAf,MAAA,QAAA,kBAAA;AACA,SAAA,MAAA,EAAA,YAAA,EAAA,cAAA,QAAA,kBAAA;AACA,SAAQA,OAAO,IAAf,OAAA,QAAA,mBAAA;AACA,SAAQA,OAAO,IAAf,WAAA,QAAA,uBAAA;AACA,SAAQA,OAAO,IAAf,YAAA,QAAA,wBAAA;AACA,SAAQA,OAAO,IAAf,SAAA,QAAA,sBAAA;AACA,SAAQA,OAAO,IAAf,WAAA,QAAA,wBAAA;AAEA,SAAA,KAAA,EAAA,WAAA,QAAA,iBAAA;AAGA,SAAA,iBAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,IAAA,QAAA,yBAAA;AAUA,SAAQA,OAAO,IAAf,KAAA,QAAA,iBAAA;AACA,SAAQA,OAAO,IAAf,SAAA,QAAA,sBAAA;AACA,SAAQA,OAAO,IAAf,iBAAA,QAAA,8BAAA;AACA,SAAQA,OAAO,IAAf,iBAAA,QAAA,+BAAA;AACA,SAAQA,OAAO,IAAf,WAAA,QAAA,wBAAA;AACA,SAAQA,OAAO,IAAf,mBAAA,QAAA,iCAAA;AAIA,SAAA,aAAA,EAAA,QAAA,EAAA,SAAA,QAAA,mBAAA;AAGA,SAAQA,OAAO,IAAf,aAAA,QAAA,8BAAA;AACA,SAAQA,OAAO,IAAf,gBAAA,QAAA,iCAAA;AAGA,SAAA,GAAA,QAAA,kBAAA;AACA,SAAA,MAAA,QAAA,gBAAA;AACA,SAAA,GAAA,EAAA,aAAA,QAAA,eAAA;AAGA,SAAA,gBAAA,EAAA,gBAAA,QAAA,oBAAA;AACA,SAAA,wBAAA,QAAA,wBAAA;AACA,SAAA,2BAAA,QAAA,4BAAA;AACA,SAAA,oCAAA,QAAA,qCAAA","sourcesContent":["// luma.gl Base WebGL wrapper library\n// Provides simple class/function wrappers around the low level webgl objects\n// These classes are intentionally close to the WebGL API\n// but make it easier to use.\n// Higher level abstractions can be built on these classes\n\n// Initialize any global state\nexport {lumaStats} from './init';\n\n// UTILS\nexport {requestAnimationFrame, cancelAnimationFrame} from './webgl-utils/request-animation-frame';\n\n// WebGL Functions\nexport {cloneTextureFrom} from './webgl-utils/texture-utils';\nexport {getKeyValue, getKey} from './webgl-utils/constants-to-keys';\nexport {getContextInfo, getGLContextInfo, getContextLimits} from './features/limits';\nexport {FEATURES} from './features/webgl-features-table';\nexport {hasFeature, hasFeatures, getFeatures} from './features/features';\nexport {default as canCompileGLGSExtension} from './features/check-glsl-extension';\n\n// WebGL Helper Classes\nexport {default as Accessor} from './classes/accessor';\n\n// WebGL1 classes\nexport {default as Buffer} from './classes/buffer';\nexport {Shader, VertexShader, FragmentShader} from './classes/shader';\nexport {default as Program} from './classes/program';\nexport {default as Framebuffer} from './classes/framebuffer';\nexport {default as Renderbuffer} from './classes/renderbuffer';\nexport {default as Texture2D} from './classes/texture-2d';\nexport {default as TextureCube} from './classes/texture-cube';\n\nexport {clear, clearBuffer} from './classes/clear';\n\n// Copy and Blit\nexport {\n  readPixelsToArray,\n  readPixelsToBuffer,\n  copyToDataUrl,\n  copyToImage,\n  copyToTexture,\n  blit\n} from './classes/copy-and-blit';\n\n// WebGL2 classes & Extensions\nexport {default as Query} from './classes/query';\nexport {default as Texture3D} from './classes/texture-3d';\nexport {default as TransformFeedback} from './classes/transform-feedback';\nexport {default as VertexArrayObject} from './classes/vertex-array-object';\nexport {default as VertexArray} from './classes/vertex-array';\nexport {default as UniformBufferLayout} from './classes/uniform-buffer-layout';\n\n// experimental WebGL exports\n\nexport {setPathPrefix, loadFile, loadImage} from './utils/load-file';\n\n// PARSE SHADER SOURCE\nexport {default as getShaderName} from './glsl-utils/get-shader-name';\nexport {default as getShaderVersion} from './glsl-utils/get-shader-version';\n\n// UTILS\nexport {log} from '@luma.gl/gltools';\nexport {assert} from './utils/assert';\nexport {uid, isObjectEmpty} from './utils/utils';\n\n// INTERNAL\nexport {parseUniformName, getUniformSetter} from './classes/uniforms';\nexport {getDebugTableForUniforms} from './debug/debug-uniforms';\nexport {getDebugTableForVertexArray} from './debug/debug-vertex-array';\nexport {getDebugTableForProgramConfiguration} from './debug/debug-program-configuration';\n"]},"metadata":{},"sourceType":"module"}