{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nconst STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\nexport default class I3STileManager {\n  constructor() {\n    _defineProperty(this, \"_statusMap\", void 0);\n\n    this._statusMap = {};\n  }\n\n  add(request, key, callback, frameState) {\n    if (!this._statusMap[key]) {\n      this._statusMap[key] = {\n        request,\n        callback,\n        key,\n        frameState,\n        status: STATUS.REQUESTED\n      };\n      request().then(data => {\n        this._statusMap[key].status = STATUS.COMPLETED;\n\n        this._statusMap[key].callback(data, frameState);\n      }).catch(error => {\n        this._statusMap[key].status = STATUS.ERROR;\n        callback(error);\n      });\n    }\n  }\n\n  update(key, frameState) {\n    if (this._statusMap[key]) {\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  find(key) {\n    return this._statusMap[key];\n  }\n\n}","map":{"version":3,"sources":["../../../../src/tileset/traversers/i3s-tile-manager.ts"],"names":["STATUS","REQUESTED","COMPLETED","ERROR","constructor","add","status","request","data","error","callback","update","find"],"mappings":";AAAA,MAAMA,MAAM,GAAG;AACbC,EAAAA,SAAS,EADI,WAAA;AAEbC,EAAAA,SAAS,EAFI,WAAA;AAGbC,EAAAA,KAAK,EAAE;AAHM,CAAf;AAOA,eAAe,MAAA,cAAA,CAAqB;AAGlCC,EAAAA,WAAW,GAAG;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AACZ,SAAA,UAAA,GAAA,EAAA;AACD;;AAEDC,EAAAA,GAAG,CAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,UAAA,EAAqC;AACtC,QAAI,CAAC,KAAA,UAAA,CAAL,GAAK,CAAL,EAA2B;AACzB,WAAA,UAAA,CAAA,GAAA,IAAuB;AAAA,QAAA,OAAA;AAAA,QAAA,QAAA;AAAA,QAAA,GAAA;AAAA,QAAA,UAAA;AAAqCC,QAAAA,MAAM,EAAEN,MAAM,CAACC;AAApD,OAAvB;AACAM,MAAAA,OAAO,GAAPA,IAAAA,CACSC,IAAD,IAAU;AACd,aAAA,UAAA,CAAA,GAAA,EAAA,MAAA,GAA8BR,MAAM,CAApC,SAAA;;AACA,aAAA,UAAA,CAAA,GAAA,EAAA,QAAA,CAAA,IAAA,EAAA,UAAA;AAHJO,OAAAA,EAAAA,KAAAA,CAKUE,KAAD,IAAW;AAChB,aAAA,UAAA,CAAA,GAAA,EAAA,MAAA,GAA8BT,MAAM,CAApC,KAAA;AACAU,QAAAA,QAAQ,CAARA,KAAQ,CAARA;AAPJH,OAAAA;AASD;AACF;;AAEDI,EAAAA,MAAM,CAAA,GAAA,EAAA,UAAA,EAAkB;AACtB,QAAI,KAAA,UAAA,CAAJ,GAAI,CAAJ,EAA0B;AACxB,WAAA,UAAA,CAAA,GAAA,EAAA,UAAA,GAAA,UAAA;AACD;AACF;;AAEDC,EAAAA,IAAI,CAAA,GAAA,EAAM;AACR,WAAO,KAAA,UAAA,CAAP,GAAO,CAAP;AACD;;AA9BiC","sourcesContent":["const STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\n// A helper class to manage tile metadata fetching\nexport default class I3STileManager {\n  private _statusMap: object;\n\n  constructor() {\n    this._statusMap = {};\n  }\n\n  add(request, key, callback, frameState) {\n    if (!this._statusMap[key]) {\n      this._statusMap[key] = {request, callback, key, frameState, status: STATUS.REQUESTED};\n      request()\n        .then((data) => {\n          this._statusMap[key].status = STATUS.COMPLETED;\n          this._statusMap[key].callback(data, frameState);\n        })\n        .catch((error) => {\n          this._statusMap[key].status = STATUS.ERROR;\n          callback(error);\n        });\n    }\n  }\n\n  update(key, frameState) {\n    if (this._statusMap[key]) {\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  find(key) {\n    return this._statusMap[key];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}