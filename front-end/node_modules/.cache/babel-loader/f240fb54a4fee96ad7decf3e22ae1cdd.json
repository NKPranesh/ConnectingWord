{"ast":null,"code":"import { Matrix4 } from '@math.gl/core';\nimport { log } from '@luma.gl/webgl';\nimport ScenegraphNode from './scenegraph-node';\nexport default class GroupNode extends ScenegraphNode {\n  constructor() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    props = Array.isArray(props) ? {\n      children: props\n    } : props;\n    const {\n      children = []\n    } = props;\n    log.assert(children.every(child => child instanceof ScenegraphNode), 'every child must an instance of ScenegraphNode');\n    super(props);\n    this.children = children;\n  }\n\n  add() {\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    for (const child of children) {\n      if (Array.isArray(child)) {\n        this.add(...child);\n      } else {\n        this.children.push(child);\n      }\n    }\n\n    return this;\n  }\n\n  remove(child) {\n    const children = this.children;\n    const indexOf = children.indexOf(child);\n\n    if (indexOf > -1) {\n      children.splice(indexOf, 1);\n    }\n\n    return this;\n  }\n\n  removeAll() {\n    this.children = [];\n    return this;\n  }\n\n  delete() {\n    this.children.forEach(child => child.delete());\n    this.removeAll();\n    super.delete();\n  }\n\n  traverse(visitor) {\n    let {\n      worldMatrix = new Matrix4()\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const modelMatrix = new Matrix4(worldMatrix).multiplyRight(this.matrix);\n\n    for (const child of this.children) {\n      if (child instanceof GroupNode) {\n        child.traverse(visitor, {\n          worldMatrix: modelMatrix\n        });\n      } else {\n        visitor(child, {\n          worldMatrix: modelMatrix\n        });\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/scenegraph/group-node.js"],"names":["constructor","props","children","log","child","add","Array","remove","indexOf","removeAll","delete","traverse","worldMatrix","modelMatrix","visitor"],"mappings":"AAAA,SAAA,OAAA,QAAA,eAAA;AACA,SAAA,GAAA,QAAA,gBAAA;AACA,OAAA,cAAA,MAAA,mBAAA;AAEA,eAAe,MAAA,SAAA,SAAA,cAAA,CAAuC;AACpDA,EAAAA,WAAW,GAAa;AAAA,QAAZC,KAAY,uEAAb,EAAa;AACtBA,IAAAA,KAAK,GAAG,KAAK,CAAL,OAAA,CAAA,KAAA,IAAuB;AAACC,MAAAA,QAAQ,EAAED;AAAX,KAAvB,GAARA,KAAAA;AACA,UAAM;AAACC,MAAAA,QAAQ,GAAG;AAAZ,QAAN,KAAA;AACAC,IAAAA,GAAG,CAAHA,MAAAA,CACED,QAAQ,CAARA,KAAAA,CAAeE,KAAK,IAAIA,KAAK,YAD/BD,cACED,CADFC,EAAAA,gDAAAA;AAIA,UAAA,KAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACD;;AAGDE,EAAAA,GAAG,GAAc;AAAA,sCAAd,QAAc;AAAd,MAAA,QAAc;AAAA;;AACf,SAAK,MAAL,KAAA,IAAA,QAAA,EAA8B;AAC5B,UAAIC,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;AACxB,aAAA,GAAA,CAAS,GAAT,KAAA;AADF,OAAA,MAEO;AACL,aAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACD;AACF;;AACD,WAAA,IAAA;AACD;;AAEDC,EAAAA,MAAM,CAAA,KAAA,EAAQ;AACZ,UAAML,QAAQ,GAAG,KAAjB,QAAA;AACA,UAAMM,OAAO,GAAGN,QAAQ,CAARA,OAAAA,CAAhB,KAAgBA,CAAhB;;AACA,QAAIM,OAAO,GAAG,CAAd,CAAA,EAAkB;AAChBN,MAAAA,QAAQ,CAARA,MAAAA,CAAAA,OAAAA,EAAAA,CAAAA;AACD;;AACD,WAAA,IAAA;AACD;;AAEDO,EAAAA,SAAS,GAAG;AACV,SAAA,QAAA,GAAA,EAAA;AACA,WAAA,IAAA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,SAAA,QAAA,CAAA,OAAA,CAAsBN,KAAK,IAAIA,KAAK,CAApC,MAA+BA,EAA/B;AACA,SAAA,SAAA;AACA,UAAA,MAAA;AACD;;AAEDO,EAAAA,QAAQ,CAAA,OAAA,EAA8C;AAAA,QAApC;AAACC,MAAAA,WAAW,GAAG,IAAA,OAAA;AAAf,KAAoC,uEAA9C,EAA8C;AACpD,UAAMC,WAAW,GAAG,IAAA,OAAA,CAAA,WAAA,EAAA,aAAA,CAAuC,KAA3D,MAAoB,CAApB;;AAEA,SAAK,MAAL,KAAA,IAAoB,KAApB,QAAA,EAAmC;AACjC,UAAIT,KAAK,YAAT,SAAA,EAAgC;AAC9BA,QAAAA,KAAK,CAALA,QAAAA,CAAAA,OAAAA,EAAwB;AAACQ,UAAAA,WAAW,EAAEC;AAAd,SAAxBT;AADF,OAAA,MAEO;AACLU,QAAAA,OAAO,CAAA,KAAA,EAAQ;AAACF,UAAAA,WAAW,EAAEC;AAAd,SAAR,CAAPC;AACD;AACF;AACF;;AAtDmD","sourcesContent":["import {Matrix4} from '@math.gl/core';\nimport {log} from '@luma.gl/webgl';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class GroupNode extends ScenegraphNode {\n  constructor(props = {}) {\n    props = Array.isArray(props) ? {children: props} : props;\n    const {children = []} = props;\n    log.assert(\n      children.every(child => child instanceof ScenegraphNode),\n      'every child must an instance of ScenegraphNode'\n    );\n    super(props);\n    this.children = children;\n  }\n\n  // Unpacks arrays and nested arrays of children\n  add(...children) {\n    for (const child of children) {\n      if (Array.isArray(child)) {\n        this.add(...child);\n      } else {\n        this.children.push(child);\n      }\n    }\n    return this;\n  }\n\n  remove(child) {\n    const children = this.children;\n    const indexOf = children.indexOf(child);\n    if (indexOf > -1) {\n      children.splice(indexOf, 1);\n    }\n    return this;\n  }\n\n  removeAll() {\n    this.children = [];\n    return this;\n  }\n\n  delete() {\n    this.children.forEach(child => child.delete());\n    this.removeAll();\n    super.delete();\n  }\n\n  traverse(visitor, {worldMatrix = new Matrix4()} = {}) {\n    const modelMatrix = new Matrix4(worldMatrix).multiplyRight(this.matrix);\n\n    for (const child of this.children) {\n      if (child instanceof GroupNode) {\n        child.traverse(visitor, {worldMatrix: modelMatrix});\n      } else {\n        visitor(child, {worldMatrix: modelMatrix});\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}