{"ast":null,"code":"import { PathLayer } from '@deck.gl/layers';\nconst defaultProps = {\n  fadeTrail: true,\n  trailLength: {\n    type: 'number',\n    value: 120,\n    min: 0\n  },\n  currentTime: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  getTimestamps: {\n    type: 'accessor',\n    value: null\n  }\n};\nexport default class TripsLayer extends PathLayer {\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.inject = {\n      'vs:#decl': \"uniform float trailLength;\\nattribute float instanceTimestamps;\\nattribute float instanceNextTimestamps;\\nvarying float vTime;\\n\",\n      'vs:#main-end': \"vTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\\n\",\n      'fs:#decl': \"uniform bool fadeTrail;\\nuniform float trailLength;\\nuniform float currentTime;\\nvarying float vTime;\\n\",\n      'fs:#main-start': \"if(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\\n  discard;\\n}\\n\",\n      'fs:DECKGL_FILTER_COLOR': \"if(fadeTrail) {\\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\\n}\\n\"\n    };\n    return shaders;\n  }\n\n  initializeState(params) {\n    super.initializeState(params);\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      timestamps: {\n        size: 1,\n        accessor: 'getTimestamps',\n        shaderAttributes: {\n          instanceTimestamps: {\n            vertexOffset: 0\n          },\n          instanceNextTimestamps: {\n            vertexOffset: 1\n          }\n        }\n      }\n    });\n  }\n\n  draw(params) {\n    const {\n      fadeTrail,\n      trailLength,\n      currentTime\n    } = this.props;\n    params.uniforms = { ...params.uniforms,\n      fadeTrail,\n      trailLength,\n      currentTime\n    };\n    super.draw(params);\n  }\n\n}\nTripsLayer.layerName = 'TripsLayer';\nTripsLayer.defaultProps = defaultProps;","map":{"version":3,"sources":["../../../src/trips-layer/trips-layer.js"],"names":["defaultProps","fadeTrail","trailLength","type","value","min","currentTime","getTimestamps","getShaders","shaders","initializeState","attributeManager","timestamps","size","accessor","shaderAttributes","instanceTimestamps","vertexOffset","instanceNextTimestamps","draw","params","TripsLayer"],"mappings":"AAoBA,SAAA,SAAA,QAAA,iBAAA;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EADU,IAAA;AAEnBC,EAAAA,WAAW,EAAE;AAACC,IAAAA,IAAI,EAAL,QAAA;AAAiBC,IAAAA,KAAK,EAAtB,GAAA;AAA6BC,IAAAA,GAAG,EAAE;AAAlC,GAFM;AAGnBC,EAAAA,WAAW,EAAE;AAACH,IAAAA,IAAI,EAAL,QAAA;AAAiBC,IAAAA,KAAK,EAAtB,CAAA;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GAHM;AAInBE,EAAAA,aAAa,EAAE;AAACJ,IAAAA,IAAI,EAAL,UAAA;AAAmBC,IAAAA,KAAK,EAAE;AAA1B;AAJI,CAArB;AAOA,eAAe,MAAA,UAAA,SAAA,SAAA,CAAmC;AAChDI,EAAAA,UAAU,GAAG;AACX,UAAMC,OAAO,GAAG,MAAhB,UAAgB,EAAhB;AACAA,IAAAA,OAAO,CAAPA,MAAAA,GAAiB;AACf,kBADe,kIAAA;AAQf,sBARe,+GAAA;AAWf,kBAXe,yGAAA;AAkBf,wBAlBe,kGAAA;AAwBf,gCAAA;AAxBe,KAAjBA;AA8BA,WAAA,OAAA;AACD;;AAEDC,EAAAA,eAAe,CAAA,MAAA,EAAS;AACtB,UAAA,eAAA,CAAA,MAAA;AAEA,UAAMC,gBAAgB,GAAG,KAAzB,mBAAyB,EAAzB;AACAA,IAAAA,gBAAgB,CAAhBA,YAAAA,CAA8B;AAC5BC,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EADM,CAAA;AAEVC,QAAAA,QAAQ,EAFE,eAAA;AAGVC,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,YAAY,EAAE;AADI,WADJ;AAIhBC,UAAAA,sBAAsB,EAAE;AACtBD,YAAAA,YAAY,EAAE;AADQ;AAJR;AAHR;AADgB,KAA9BN;AAcD;;AAEDQ,EAAAA,IAAI,CAAA,MAAA,EAAS;AACX,UAAM;AAAA,MAAA,SAAA;AAAA,MAAA,WAAA;AAAyBb,MAAAA;AAAzB,QAAwC,KAA9C,KAAA;AAEAc,IAAAA,MAAM,CAANA,QAAAA,GAAkB,EAChB,GAAGA,MAAM,CADO,QAAA;AAAA,MAAA,SAAA;AAAA,MAAA,WAAA;AAIhBd,MAAAA;AAJgB,KAAlBc;AAOA,UAAA,IAAA,CAAA,MAAA;AACD;;AAnE+C;AAsElDC,UAAU,CAAVA,SAAAA,GAAAA,YAAAA;AACAA,UAAU,CAAVA,YAAAA,GAAAA,YAAAA","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {PathLayer} from '@deck.gl/layers';\n\nconst defaultProps = {\n  fadeTrail: true,\n  trailLength: {type: 'number', value: 120, min: 0},\n  currentTime: {type: 'number', value: 0, min: 0},\n  getTimestamps: {type: 'accessor', value: null}\n};\n\nexport default class TripsLayer extends PathLayer {\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.inject = {\n      'vs:#decl': `\\\nuniform float trailLength;\nattribute float instanceTimestamps;\nattribute float instanceNextTimestamps;\nvarying float vTime;\n`,\n      // Timestamp of the vertex\n      'vs:#main-end': `\\\nvTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n`,\n      'fs:#decl': `\\\nuniform bool fadeTrail;\nuniform float trailLength;\nuniform float currentTime;\nvarying float vTime;\n`,\n      // Drop the segments outside of the time window\n      'fs:#main-start': `\\\nif(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\n  discard;\n}\n`,\n      // Fade the color (currentTime - 100%, end of trail - 0%)\n      'fs:DECKGL_FILTER_COLOR': `\\\nif(fadeTrail) {\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\n}\n`\n    };\n    return shaders;\n  }\n\n  initializeState(params) {\n    super.initializeState(params);\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      timestamps: {\n        size: 1,\n        accessor: 'getTimestamps',\n        shaderAttributes: {\n          instanceTimestamps: {\n            vertexOffset: 0\n          },\n          instanceNextTimestamps: {\n            vertexOffset: 1\n          }\n        }\n      }\n    });\n  }\n\n  draw(params) {\n    const {fadeTrail, trailLength, currentTime} = this.props;\n\n    params.uniforms = {\n      ...params.uniforms,\n      fadeTrail,\n      trailLength,\n      currentTime\n    };\n\n    super.draw(params);\n  }\n}\n\nTripsLayer.layerName = 'TripsLayer';\nTripsLayer.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}