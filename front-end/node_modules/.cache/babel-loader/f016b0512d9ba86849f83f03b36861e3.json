{"ast":null,"code":"export default function getShaderVersion(source) {\n  let version = 100;\n  const words = source.match(/[^\\s]+/g);\n\n  if (words.length >= 2 && words[0] === '#version') {\n    const v = parseInt(words[1], 10);\n\n    if (Number.isFinite(v)) {\n      version = v;\n    }\n  }\n\n  return version;\n}","map":{"version":3,"sources":["../../../src/glsl-utils/get-shader-version.js"],"names":["version","words","source","v","parseInt","Number"],"mappings":"AACA,eAAe,SAAA,gBAAA,CAAA,MAAA,EAAkC;AAC/C,MAAIA,OAAO,GAAX,GAAA;AACA,QAAMC,KAAK,GAAGC,MAAM,CAANA,KAAAA,CAAd,SAAcA,CAAd;;AACA,MAAID,KAAK,CAALA,MAAAA,IAAAA,CAAAA,IAAqBA,KAAK,CAALA,CAAK,CAALA,KAAzB,UAAA,EAAkD;AAChD,UAAME,CAAC,GAAGC,QAAQ,CAACH,KAAK,CAAN,CAAM,CAAN,EAAlB,EAAkB,CAAlB;;AACA,QAAII,MAAM,CAANA,QAAAA,CAAJ,CAAIA,CAAJ,EAAwB;AACtBL,MAAAA,OAAO,GAAPA,CAAAA;AACD;AACF;;AACD,SAAA,OAAA;AACD","sourcesContent":["// returns GLSL shader version of given shader string\nexport default function getShaderVersion(source) {\n  let version = 100;\n  const words = source.match(/[^\\s]+/g);\n  if (words.length >= 2 && words[0] === '#version') {\n    const v = parseInt(words[1], 10);\n    if (Number.isFinite(v)) {\n      version = v;\n    }\n  }\n  return version;\n}\n"]},"metadata":{},"sourceType":"module"}