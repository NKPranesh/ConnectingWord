{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMobile = isMobile;\nexports.default = getBrowser;\n\nvar _globals = require(\"./globals\");\n\nvar _isBrowser = _interopRequireDefault(require(\"./is-browser\"));\n\nvar _isElectron = _interopRequireDefault(require(\"./is-electron\"));\n\nfunction isMobile() {\n  return typeof _globals.window.orientation !== 'undefined';\n}\n\nfunction getBrowser(mockUserAgent) {\n  if (!mockUserAgent && !(0, _isBrowser.default)()) {\n    return 'Node';\n  }\n\n  if ((0, _isElectron.default)(mockUserAgent)) {\n    return 'Electron';\n  }\n\n  var navigator_ = typeof navigator !== 'undefined' ? navigator : {};\n  var userAgent = mockUserAgent || navigator_.userAgent || '';\n\n  if (userAgent.indexOf('Edge') > -1) {\n    return 'Edge';\n  }\n\n  var isMSIE = userAgent.indexOf('MSIE ') !== -1;\n  var isTrident = userAgent.indexOf('Trident/') !== -1;\n\n  if (isMSIE || isTrident) {\n    return 'IE';\n  }\n\n  if (_globals.window.chrome) {\n    return 'Chrome';\n  }\n\n  if (_globals.window.safari) {\n    return 'Safari';\n  }\n\n  if (_globals.window.mozInnerScreenX) {\n    return 'Firefox';\n  }\n\n  return 'Unknown';\n}","map":{"version":3,"sources":["../../../src/env/get-browser.js"],"names":["window","navigator_","userAgent","mockUserAgent","isMSIE","isTrident"],"mappings":";;;;;;;;;;AAuBA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AAEO,SAAA,QAAA,GAAoB;AAEzB,SAAO,OAAOA,QAAAA,CAAAA,MAAAA,CAAP,WAAA,KAAP,WAAA;AACD;;AAKc,SAAA,UAAA,CAAA,aAAA,EAAmC;AAChD,MAAI,CAAA,aAAA,IAAkB,CAAC,CAAA,GAAA,UAAA,CAAvB,OAAuB,GAAvB,EAAoC;AAClC,WAAA,MAAA;AACD;;AAED,MAAI,CAAA,GAAA,WAAA,CAAA,OAAA,EAAJ,aAAI,CAAJ,EAA+B;AAC7B,WAAA,UAAA;AACD;;AAED,MAAMC,UAAU,GAAG,OAAA,SAAA,KAAA,WAAA,GAAA,SAAA,GAAnB,EAAA;AACA,MAAMC,SAAS,GAAGC,aAAa,IAAIF,UAAU,CAA3BE,SAAAA,IAAlB,EAAA;;AAIA,MAAID,SAAS,CAATA,OAAAA,CAAAA,MAAAA,IAA4B,CAAhC,CAAA,EAAoC;AAClC,WAAA,MAAA;AACD;;AACD,MAAME,MAAM,GAAGF,SAAS,CAATA,OAAAA,CAAAA,OAAAA,MAA+B,CAA9C,CAAA;AACA,MAAMG,SAAS,GAAGH,SAAS,CAATA,OAAAA,CAAAA,UAAAA,MAAkC,CAApD,CAAA;;AACA,MAAIE,MAAM,IAAV,SAAA,EAAyB;AACvB,WAAA,IAAA;AACD;;AAED,MAAIJ,QAAAA,CAAAA,MAAAA,CAAJ,MAAA,EAAmB;AACjB,WAAA,QAAA;AACD;;AAED,MAAIA,QAAAA,CAAAA,MAAAA,CAAJ,MAAA,EAAmB;AACjB,WAAA,QAAA;AACD;;AAED,MAAIA,QAAAA,CAAAA,MAAAA,CAAJ,eAAA,EAA4B;AAC1B,WAAA,SAAA;AACD;;AACD,SAAA,SAAA;AACD","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// This function is needed in initialization stages,\n// make sure it can be imported in isolation\n\nimport {window} from './globals';\nimport isBrowser from './is-browser';\nimport isElectron from './is-electron';\n\nexport function isMobile() {\n  // @ts-ignore\n  return typeof window.orientation !== 'undefined';\n}\n\n// Simple browser detection\n// `mockUserAgent` parameter allows user agent to be overridden for testing\n/* eslint-disable complexity */\nexport default function getBrowser(mockUserAgent) {\n  if (!mockUserAgent && !isBrowser()) {\n    return 'Node';\n  }\n\n  if (isElectron(mockUserAgent)) {\n    return 'Electron';\n  }\n\n  const navigator_ = typeof navigator !== 'undefined' ? navigator : {};\n  const userAgent = mockUserAgent || navigator_.userAgent || '';\n  // const appVersion = navigator_.appVersion || '';\n\n  // NOTE: Order of tests matter, as many agents list Chrome etc.\n  if (userAgent.indexOf('Edge') > -1) {\n    return 'Edge';\n  }\n  const isMSIE = userAgent.indexOf('MSIE ') !== -1;\n  const isTrident = userAgent.indexOf('Trident/') !== -1;\n  if (isMSIE || isTrident) {\n    return 'IE';\n  }\n  // @ts-ignore\n  if (window.chrome) {\n    return 'Chrome';\n  }\n  // @ts-ignore\n  if (window.safari) {\n    return 'Safari';\n  }\n  // @ts-ignore\n  if (window.mozInnerScreenX) {\n    return 'Firefox';\n  }\n  return 'Unknown';\n}\n"]},"metadata":{},"sourceType":"script"}