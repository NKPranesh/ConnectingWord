[{"P:\\projects\\ConnectingWord\\front-end\\src\\index.js":"1","P:\\projects\\ConnectingWord\\front-end\\src\\App.js":"2","P:\\projects\\ConnectingWord\\front-end\\src\\reportWebVitals.js":"3","P:\\projects\\ConnectingWord\\front-end\\src\\Containers\\LoginPage.js":"4","P:\\projects\\ConnectingWord\\front-end\\src\\Containers\\UserPage.js":"5","P:\\projects\\ConnectingWord\\front-end\\src\\components\\mapStats.js":"6","P:\\projects\\ConnectingWord\\front-end\\src\\Containers\\SignupPage.js":"7","P:\\projects\\ConnectingWord\\front-end\\src\\components\\signupBox.js":"8","P:\\projects\\ConnectingWord\\front-end\\src\\components\\loginBox.js":"9","P:\\projects\\ConnectingWord\\front-end\\src\\components\\navbar.js":"10","P:\\projects\\ConnectingWord\\front-end\\src\\components\\navbarUser.js":"11","P:\\projects\\ConnectingWord\\front-end\\src\\components\\map.js":"12","P:\\projects\\ConnectingWord\\front-end\\src\\components\\gITSearchBox.js":"13","P:\\projects\\ConnectingWord\\front-end\\src\\components\\locateUser.js":"14","P:\\projects\\ConnectingWord\\front-end\\src\\components\\searchBox.js":"15","P:\\projects\\ConnectingWord\\front-end\\src\\components\\requestListBox.js":"16","P:\\projects\\ConnectingWord\\front-end\\src\\calc\\PNYfunc.js":"17","P:\\projects\\ConnectingWord\\front-end\\src\\calc\\GITfunc.js":"18"},{"size":517,"mtime":1638279681239,"results":"19","hashOfConfig":"20"},{"size":709,"mtime":1638615264662,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1638279681241,"results":"22","hashOfConfig":"20"},{"size":542,"mtime":1638279681233,"results":"23","hashOfConfig":"20"},{"size":612,"mtime":1638279681234,"results":"24","hashOfConfig":"20"},{"size":6587,"mtime":1638686503793,"results":"25","hashOfConfig":"20"},{"size":1499,"mtime":1638289563266,"results":"26","hashOfConfig":"20"},{"size":3196,"mtime":1638639150349,"results":"27","hashOfConfig":"20"},{"size":960,"mtime":1638279681235,"results":"28","hashOfConfig":"20"},{"size":1150,"mtime":1638279681235,"results":"29","hashOfConfig":"20"},{"size":1290,"mtime":1638279681235,"results":"30","hashOfConfig":"20"},{"size":4133,"mtime":1638615264664,"results":"31","hashOfConfig":"20"},{"size":2886,"mtime":1638688980100,"results":"32","hashOfConfig":"20"},{"size":1282,"mtime":1638615264663,"results":"33","hashOfConfig":"20"},{"size":3327,"mtime":1638615264671,"results":"34","hashOfConfig":"20"},{"size":1292,"mtime":1638279681236,"results":"35","hashOfConfig":"20"},{"size":1763,"mtime":1638686647981,"results":"36","hashOfConfig":"20"},{"size":1520,"mtime":1638687108987,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1tdniwl",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},"P:\\projects\\ConnectingWord\\front-end\\src\\index.js",[],["77","78"],"P:\\projects\\ConnectingWord\\front-end\\src\\App.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\reportWebVitals.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\Containers\\LoginPage.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\Containers\\UserPage.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\mapStats.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\Containers\\SignupPage.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\signupBox.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\loginBox.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\navbar.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\navbarUser.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\map.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\gITSearchBox.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\locateUser.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\searchBox.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\components\\requestListBox.js",[],"P:\\projects\\ConnectingWord\\front-end\\src\\calc\\PNYfunc.js",["79","80","81"],"import   UserTable from  \"../data/usersTable.json\";\r\nlet nodes=[\"pranesh@gmail.com\",\"vamshi@gmail.com\",\"mahesh@gmail.com\",\"virat@gmail.com\",\"rohit@gmail.com\",\"tarak@gmail.com\",\"charan@gmail.com\"];\r\nlet graph=[\r\n    [3,5,1],\r\n    [0],\r\n    [3,6],\r\n    [2,4,0],\r\n    [3],\r\n    [6,0],\r\n    [5,2]\r\n];\r\nfunction toRadians(degrees)\r\n{\r\n  var pi = Math.PI;\r\n  return degrees * (pi/180);\r\n}\r\nconst PNYlist = (latitude,longitude,loginEmail) => {\r\n    let distance=[];\r\n    nodes.map((node)=>{\r\n        UserTable.map((user)=>\r\n        {\r\n            if(user.email === node && user.email!==loginEmail){\r\n            let latitude1=user.latitude;\r\n            let longitude1=user.longitude;\r\n            let lon1 = toRadians(longitude);\r\n            let lon2 = toRadians(longitude1);\r\n            let lat1 = toRadians(latitude);\r\n            let lat2 = toRadians(latitude1);\r\n\r\n            // Haversine formula\r\n            let dlon = lon2 - lon1;\r\n            let dlat = lat2 - lat1;\r\n            let a = Math.pow(Math.sin(dlat / 2), 2)\r\n                        + Math.cos(lat1) * Math.cos(lat2)\r\n                        * Math.pow(Math.sin(dlon / 2),2);\r\n                    \r\n            let c = 2 * Math.asin(Math.sqrt(a));\r\n\r\n            // Radius of earth in kilometers. Use 3956\r\n            // for miles\r\n            let r = 6371; \r\n            distance.push({name : user.name,email : node,\r\n            distance : c*r,latitude : user.latitude,longitude : user.longitude,occupation :user.occupation});\r\n        }\r\n        })\r\n    })\r\n    distance.sort((a, b) => {\r\n        return a.distance-b.distance;\r\n    });\r\n    //console.log(distance);\r\n            return(\r\n                distance\r\n            );\r\n    }\r\n    //PNYlist(78.3453,3.4567);\r\nexport default PNYlist;","P:\\projects\\ConnectingWord\\front-end\\src\\calc\\GITfunc.js",["82"],"let nodes=[\"pranesh@gmail.com\",\"vamshi@gmail.com\",\"mahesh@gmail.com\",\"virat@gmail.com\",\"rohit@gmail.com\",\"tarak@gmail.com\",\"charan@gmail.com\"];\r\nlet adjList=[\r\n    [3,5,1],\r\n    [0],\r\n    [3,6],\r\n    [2,4,0],\r\n    [3],\r\n    [6,0],\r\n    [5,2]\r\n];\r\nlet v=nodes.length;\r\nlet pathLists=[];\r\nlet pathcount=0;\r\nfunction printAllPaths(s,d)\r\n{\r\n     let isVisited = new Array(v);\r\n     for(let i=0;i<v;i++)\r\n         isVisited[i]=false;\r\n        let pathList = [];\r\n  \r\n        pathList.push(nodes[s]);\r\n        printAllPathsUtil(s, d, isVisited, pathList);\r\n \r\n}\r\nfunction printAllPathsUtil(u,d,isVisited,localPathList)\r\n{\r\n    if (u === d) {\r\n            \r\n             pathLists[pathcount]=[];\r\n             localPathList.map((node)=>{\r\n                 pathLists[pathcount].push(node);\r\n             })\r\n            ++pathcount;\r\n            return ;\r\n            \r\n        }\r\n  \r\n        // Mark the current node\r\n        isVisited[u] = true;\r\n        for (let i=0;i< adjList[u].length;i++) {\r\n            if (!isVisited[adjList[u][i]]) {\r\n                localPathList.push(nodes[adjList[u][i]]);\r\n                printAllPathsUtil(adjList[u][i], d,\r\n                isVisited, localPathList);\r\n                localPathList.splice(localPathList.indexOf\r\n                (nodes[adjList[u][i]]),1);\r\n            }\r\n        }\r\n        isVisited[u] = false;\r\n}\r\n\r\nconst GITlist = (source,destination) => {\r\n    printAllPaths(nodes.indexOf(source),nodes.indexOf(destination))\r\n    return pathLists;\r\n}\r\nexport default GITlist;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":5,"nodeType":"89","messageId":"90","endLine":3,"endColumn":10},{"ruleId":"91","severity":1,"message":"92","line":19,"column":21,"nodeType":"93","messageId":"94","endLine":19,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":20,"column":29,"nodeType":"93","messageId":"94","endLine":20,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":30,"column":38,"nodeType":"93","messageId":"94","endLine":30,"endColumn":40},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'graph' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]