{"version":3,"sources":["../../../src/passes/layers-pass.js"],"names":["LayersPass","Pass","render","props","gl","framebuffer","target","_drawLayers","viewports","views","onViewportActive","clearCanvas","pass","clearGLCanvas","renderStats","viewportOrDescriptor","viewport","view","id","drawLayerParams","_getDrawLayerParams","subViewports","subViewport","stats","_drawLayersInViewport","push","layers","layerFilter","effects","moduleParameters","indexResolver","layerIndexResolver","drawContext","isPicking","startsWith","renderPass","layerFilterCache","layerIndex","length","layer","shouldDrawLayer","_shouldDrawLayer","layerRenderIndex","layerParam","_getModuleParameters","layerParameters","getLayerParameters","glViewport","getGLViewport","clear","clearOpts","color","depth","scissorTest","scissor","renderStatus","totalCount","visibleCount","compositeCount","pickableCount","pickable","isComposite","drawLayer","uniforms","parameters","err","raiseError","getModuleParameters","visible","parent","filterSubLayer","rootLayerId","activateViewport","overrides","Object","assign","create","autoWrapLongitude","wrapLongitude","context","mousePosition","pickingActive","devicePixelRatio","effect","startIndex","layerIndices","resolvers","resolveLayerIndex","isDrawn","indexOverride","_offset","layerId","parentId","index","resolver","Number","isFinite","height","canvas","clientHeight","dimensions","pixelRatio","x","y","width","drawingBufferWidth","drawingBufferHeight"],"mappings":"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","sourcesContent":["import GL from '@luma.gl/constants';\nimport Pass from './pass';\nimport {clear, setParameters, withParameters, cssToDeviceRatio} from '@luma.gl/core';\n\nexport default class LayersPass extends Pass {\n  render(props) {\n    const gl = this.gl;\n\n    setParameters(gl, {framebuffer: props.target});\n    return this._drawLayers(props);\n  }\n\n  // PRIVATE\n  // Draw a list of layers in a list of viewports\n  _drawLayers(props) {\n    const {viewports, views, onViewportActive, clearCanvas = true} = props;\n    props.pass = props.pass || 'unknown';\n\n    const gl = this.gl;\n    if (clearCanvas) {\n      clearGLCanvas(gl);\n    }\n\n    const renderStats = [];\n\n    for (const viewportOrDescriptor of viewports) {\n      // Get a viewport from a viewport descriptor (which can be a plain viewport)\n      const viewport = viewportOrDescriptor.viewport || viewportOrDescriptor;\n      const view = views && views[viewport.id];\n\n      // Update context to point to this viewport\n      onViewportActive(viewport);\n\n      const drawLayerParams = this._getDrawLayerParams(viewport, props);\n\n      props.view = view;\n\n      // render this viewport\n      const subViewports = viewport.subViewports || [viewport];\n      for (const subViewport of subViewports) {\n        props.viewport = subViewport;\n\n        const stats = this._drawLayersInViewport(gl, props, drawLayerParams);\n        renderStats.push(stats);\n      }\n    }\n    return renderStats;\n  }\n\n  // Resolve the parameters needed to draw each layer\n  // When a viewport contains multiple subviewports (e.g. repeated web mercator map),\n  // this is only done once for the parent viewport\n  _getDrawLayerParams(viewport, {layers, pass, layerFilter, effects, moduleParameters}) {\n    const drawLayerParams = [];\n    const indexResolver = layerIndexResolver();\n    const drawContext = {\n      viewport,\n      isPicking: pass.startsWith('picking'),\n      renderPass: pass\n    };\n    const layerFilterCache = {};\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex];\n      // Check if we should draw layer\n      const shouldDrawLayer = this._shouldDrawLayer(\n        layer,\n        drawContext,\n        layerFilter,\n        layerFilterCache\n      );\n\n      // This is the \"logical\" index for ordering this layer in the stack\n      // used to calculate polygon offsets\n      // It can be the same as another layer\n      const layerRenderIndex = indexResolver(layer, shouldDrawLayer);\n\n      const layerParam = {\n        shouldDrawLayer,\n        layerRenderIndex\n      };\n\n      if (shouldDrawLayer) {\n        layerParam.moduleParameters = this._getModuleParameters(\n          layer,\n          effects,\n          pass,\n          moduleParameters\n        );\n        layerParam.layerParameters = this.getLayerParameters(layer, layerIndex, viewport);\n      }\n      drawLayerParams[layerIndex] = layerParam;\n    }\n    return drawLayerParams;\n  }\n\n  // Draws a list of layers in one viewport\n  // TODO - when picking we could completely skip rendering viewports that dont\n  // intersect with the picking rect\n  /* eslint-disable max-depth, max-statements */\n  _drawLayersInViewport(gl, {layers, pass, viewport, view}, drawLayerParams) {\n    const glViewport = getGLViewport(gl, {viewport});\n\n    if (view && view.props.clear) {\n      const clearOpts = view.props.clear === true ? {color: true, depth: true} : view.props.clear;\n      withParameters(\n        gl,\n        {\n          scissorTest: true,\n          scissor: glViewport\n        },\n        () => clear(gl, clearOpts)\n      );\n    }\n\n    // render layers in normal colors\n    const renderStatus = {\n      totalCount: layers.length,\n      visibleCount: 0,\n      compositeCount: 0,\n      pickableCount: 0\n    };\n\n    setParameters(gl, {viewport: glViewport});\n\n    // render layers in normal colors\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex];\n      const {\n        shouldDrawLayer,\n        layerRenderIndex,\n        moduleParameters,\n        layerParameters\n      } = drawLayerParams[layerIndex];\n\n      // Calculate stats\n      if (shouldDrawLayer && layer.props.pickable) {\n        renderStatus.pickableCount++;\n      }\n      if (layer.isComposite) {\n        renderStatus.compositeCount++;\n      } else if (shouldDrawLayer) {\n        // Draw the layer\n        renderStatus.visibleCount++;\n\n        // overwrite layer.context.viewport with the sub viewport\n        moduleParameters.viewport = viewport;\n\n        try {\n          layer.drawLayer({\n            moduleParameters,\n            uniforms: {layerIndex: layerRenderIndex},\n            parameters: layerParameters\n          });\n        } catch (err) {\n          layer.raiseError(err, `drawing ${layer} to ${pass}`);\n        }\n      }\n    }\n\n    return renderStatus;\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  /* Methods for subclass overrides */\n  shouldDrawLayer(layer) {\n    return true;\n  }\n\n  getModuleParameters(layer, effects) {\n    return null;\n  }\n\n  getLayerParameters(layer, layerIndex) {\n    return layer.props.parameters;\n  }\n\n  /* Private */\n  _shouldDrawLayer(layer, drawContext, layerFilter, layerFilterCache) {\n    const shouldDrawLayer = this.shouldDrawLayer(layer) && layer.props.visible;\n\n    if (!shouldDrawLayer) {\n      return false;\n    }\n\n    drawContext.layer = layer;\n\n    let parent = layer.parent;\n    while (parent) {\n      if (!parent.props.visible || !parent.filterSubLayer(drawContext)) {\n        return false;\n      }\n      drawContext.layer = parent;\n      parent = parent.parent;\n    }\n\n    if (layerFilter) {\n      const rootLayerId = drawContext.layer.id;\n      if (!(rootLayerId in layerFilterCache)) {\n        layerFilterCache[rootLayerId] = layerFilter(drawContext);\n      }\n      if (!layerFilterCache[rootLayerId]) {\n        return false;\n      }\n    }\n\n    // If a layer is drawn, update its viewportChanged flag\n    layer.activateViewport(drawContext.viewport);\n\n    return true;\n  }\n\n  _getModuleParameters(layer, effects, pass, overrides) {\n    const moduleParameters = Object.assign(Object.create(layer.props), {\n      autoWrapLongitude: layer.wrapLongitude,\n      viewport: layer.context.viewport,\n      mousePosition: layer.context.mousePosition,\n      pickingActive: 0,\n      devicePixelRatio: cssToDeviceRatio(this.gl)\n    });\n\n    if (effects) {\n      for (const effect of effects) {\n        Object.assign(moduleParameters, effect.getModuleParameters(layer));\n      }\n    }\n\n    return Object.assign(moduleParameters, this.getModuleParameters(layer, effects), overrides);\n  }\n}\n\n// If the _index prop is defined, return a layer index that's relative to its parent\n// Otherwise return the index of the layer among all rendered layers\n// This is done recursively, i.e. if the user overrides a layer's default index,\n// all its descendants will be resolved relative to that index.\n// This implementation assumes that parent layers always appear before its children\n// which is true if the layer array comes from the LayerManager\nexport function layerIndexResolver(startIndex = 0, layerIndices = {}) {\n  const resolvers = {};\n\n  const resolveLayerIndex = (layer, isDrawn) => {\n    const indexOverride = layer.props._offset;\n    const layerId = layer.id;\n    const parentId = layer.parent && layer.parent.id;\n\n    let index;\n\n    if (parentId && !(parentId in layerIndices)) {\n      // Populate layerIndices with the parent layer's index\n      resolveLayerIndex(layer.parent, false);\n    }\n\n    if (parentId in resolvers) {\n      const resolver = (resolvers[parentId] =\n        resolvers[parentId] || layerIndexResolver(layerIndices[parentId], layerIndices));\n      index = resolver(layer, isDrawn);\n      resolvers[layerId] = resolver;\n    } else if (Number.isFinite(indexOverride)) {\n      index = indexOverride + (layerIndices[parentId] || 0);\n      // Mark layer as needing its own resolver\n      // We don't actually create it until it's used for the first time\n      resolvers[layerId] = null;\n    } else {\n      index = startIndex;\n    }\n\n    if (isDrawn && index >= startIndex) {\n      startIndex = index + 1;\n    }\n\n    layerIndices[layerId] = index;\n    return index;\n  };\n  return resolveLayerIndex;\n}\n\n// Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\nfunction getGLViewport(gl, {viewport}) {\n  // TODO - dummy default for node\n  // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n  const height = gl.canvas ? gl.canvas.clientHeight || gl.canvas.height : 100;\n  // Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\n  const dimensions = viewport;\n  const pixelRatio = cssToDeviceRatio(gl);\n  return [\n    dimensions.x * pixelRatio,\n    (height - dimensions.y - dimensions.height) * pixelRatio,\n    dimensions.width * pixelRatio,\n    dimensions.height * pixelRatio\n  ];\n}\n\nfunction clearGLCanvas(gl) {\n  const width = gl.drawingBufferWidth;\n  const height = gl.drawingBufferHeight;\n  // clear depth and color buffers, restoring transparency\n  setParameters(gl, {viewport: [0, 0, width, height]});\n  gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n}\n"],"file":"layers-pass.js"}