"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _deepEqual = require("../utils/deep-equal");

class LayerExtension {
  constructor(opts = {}) {
    this.opts = opts;
  }

  equals(extension) {
    if (this === extension) {
      return true;
    }

    return this.constructor === extension.constructor && (0, _deepEqual.deepEqual)(this.opts, extension.opts);
  }

  getShaders(extension) {
    return null;
  }

  getSubLayerProps(extension) {
    const {
      defaultProps = {}
    } = extension.constructor;
    const newProps = {
      updateTriggers: {}
    };

    for (const key in defaultProps) {
      if (key in this.props) {
        const propDef = defaultProps[key];
        const propValue = this.props[key];
        newProps[key] = propValue;

        if (propDef && propDef.type === 'accessor') {
          newProps.updateTriggers[key] = this.props.updateTriggers[key];

          if (typeof propValue === 'function') {
            newProps[key] = this.getSubLayerAccessor(propValue, true);
          }
        }
      }
    }

    return newProps;
  }

  initializeState(context, extension) {}

  updateState(params, extension) {}

  draw(params, extension) {}

  finalizeState(extension) {}

}

exports.default = LayerExtension;
//# sourceMappingURL=layer-extension.js.map