{"version":3,"sources":["../../../src/lib/deck.js"],"names":["noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","Effect","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","touchAction","eventRecognizerOptions","onWebGLInitialized","onResize","onViewStateChange","onInteractionStateChange","onBeforeRender","onAfterRender","onLoad","onError","debug","drawPickingColors","_framebuffer","_animate","_pickable","_typedArrayManagerProps","defaultProps","error","layer","log","_onMetrics","Deck","constructor","props","viewManager","layerManager","effectManager","deckRenderer","deckPicker","_needsRedraw","_pickRequest","_lastPointerDownInfo","interactiveState","isHovering","_onEvent","bind","_onPointerDown","_onPointerMove","initialViewState","warn","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","stats","Stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setProps","typedArrayManager","start","finalize","stop","eventManager","destroy","tooltip","remove","parentElement","removeChild","get","timeStart","removed","Object","assign","_setCanvasSize","resolvedProps","create","_getViews","_getViewState","activateViewport","getViewports","timeEnd","needsRedraw","opts","clearRedrawFlags","redraw","viewManagerNeedsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","force","redrawReason","incrementCount","_customRender","_drawLayers","getViews","rect","pickObject","infos","_pick","result","length","pickMultipleObjects","depth","pickObjects","_addResources","resources","forceUpdate","resourceManager","add","resourceId","data","_removeResources","resourceIds","method","statKey","getLayers","viewports","onViewportActive","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","AnimationLoop","autoResizeViewport","onCreateContext","onContextLost","_onContextLost","onInitialize","context","_setGLContext","onRender","_onRenderFrame","MapView","Array","isArray","Error","event","type","x","y","radius","leftButton","rightButton","pos","offsetCenter","mousePosition","mode","_pickAndCallback","emptyInfo","pickedInfo","handled","info","onHover","getTooltip","displayInfo","setTooltip","_updateCursor","container","cursor","enable","copyState","Tooltip","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","timeline","Timeline","play","attachTimeline","EventManager","recognizerOptions","events","pointerdown","pointermove","pointerleave","eventType","EVENTS","on","ViewManager","_onViewStateChange","_onInteractionStateChange","viewport","LayerManager","deck","EffectManager","DeckRenderer","DeckPicker","renderOptions","renderLayers","target","pass","getEffects","animationProps","_getFrameStats","_getMetrics","reset","table","isVisible","updateLayers","updateViewStates","params","viewId","interactionState","eventOptions","getLastPickedObject","layerHandler","handler","rootHandler","call","animationLoopStats","addTime","lastTiming","getHz","time","count","getAverageTime","memoryStats","lumaStats","VERSION","deckGlobal"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport deckGlobal from './init';\n\nimport {getBrowser} from 'probe.gl/env';\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n    eventRecognizerOptions: PropTypes.object,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onInteractionStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n    _framebuffer: PropTypes.object,\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool,\n\n    // UNSAFE options - not exhaustively tested, not guaranteed to work in all cases, use at your own risk\n\n    // Set to false to disable picking - avoiding picking buffer creation can save memory for mobile web browsers\n    _pickable: PropTypes.bool,\n\n    // Adjust parameters of typed array manager, can save memory e.g. for mobile web browsers\n    _typedArrayManagerProps: PropTypes.object //  {overAlloc: number, poolSize: number}\n  };\n}\n\nconst defaultProps = {\n  id: '',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  eventRecognizerOptions: {},\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onInteractionStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: (error, layer) => log.error(error)(),\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = {...defaultProps, ...props};\n    this.props = {};\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isHovering: false, // Whether the cursor is over a pickable object\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    if (getBrowser() === 'IE') {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setProps(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n\n      this.viewManager.finalize();\n      this.viewManager = null;\n\n      this.effectManager.finalize();\n      this.effectManager = null;\n\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n\n      this.deckPicker.finalize();\n      this.deckPicker = null;\n\n      this.eventManager.destroy();\n      this.eventManager = null;\n\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (props.initialViewState && !deepEqual(this.props.initialViewState, props.initialViewState)) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager.setProps(resolvedProps);\n      this.deckRenderer.setProps(resolvedProps);\n      this.deckPicker.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D} */\n  pickObject(opts) {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D, depth = 10} */\n  pickMultipleObjects(opts) {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* {x, y, width = 1, height = 1, layerIds = null} */\n  pickObjects(opts) {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  // Experimental\n\n  _addResources(resources, forceUpdate = false) {\n    for (const id in resources) {\n      this.layerManager.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  _removeResources(resourceIds) {\n    for (const id of resourceIds) {\n      this.layerManager.resourceManager.remove(id);\n    }\n  }\n\n  // Private Methods\n\n  _pick(method, statKey, opts) {\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method]({\n      layers: this.layerManager.getLayers(opts),\n      views: this.viewManager.getViews(),\n      viewports: this.getViewports(opts),\n      onViewportActive: this.layerManager.activateViewport,\n      ...opts\n    });\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.id = props.id || 'deckgl-overlay';\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    Object.assign(canvas.style, props.style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {\n      width,\n      height,\n      gl,\n      glOptions,\n      debug,\n      onError,\n      onBeforeRender,\n      onAfterRender,\n      useDevicePixels,\n      autoResizeDrawingBuffer\n    } = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext({\n          ...glOptions,\n          ...opts,\n          canvas: this.canvas,\n          debug,\n          onContextLost: () => this._onContextLost()\n        }),\n      onInitialize: context => this._setGLContext(context.gl),\n      onRender: this._onRenderFrame.bind(this),\n      onBeforeRender,\n      onAfterRender,\n      onError\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState() {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews() {\n    // Default to a full screen map view port\n    let views = this.props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = this.props.controller;\n    }\n    return views;\n  }\n\n  _onContextLost() {\n    const {onError} = this.props;\n    if (this.animationLoop && onError) {\n      onError(new Error(`WebGL context is lost`));\n    }\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n      this.interactiveState.isHovering = result.length > 0;\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer.onHover(info, _pickRequest.event);\n      }\n      if (!handled && this.props.onHover) {\n        this.props.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Update tooltip\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  _updateCursor() {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      recognizerOptions: this.props.eventRecognizerOptions,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange.bind(this),\n      onInteractionStateChange: this._onInteractionStateChange.bind(this),\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer.renderLayers({\n      target: this.props._framebuffer,\n      layers: this.layerManager.getLayers(),\n      viewports: this.viewManager.getViewports(),\n      onViewportActive: this.layerManager.activateViewport,\n      views: this.viewManager.getViews(),\n      pass: 'screen',\n      redrawReason,\n      effects: this.effectManager.getEffects(),\n      ...renderOptions\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // If view state has changed, clear tooltip\n    if (this.tooltip.isVisible && this.viewManager.needsRedraw()) {\n      this.tooltip.setTooltip(null);\n    }\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        if (this.viewManager) {\n          this.viewManager.setProps({viewState: this.viewState});\n        }\n      }\n    }\n  }\n\n  _onInteractionStateChange(interactionState) {\n    this.interactiveState.isDragging = interactionState.isDragging;\n    this.props.onInteractionStateChange(interactionState);\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    const pickedInfo = this._pick('pickObject', 'pickObject Time', {\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n    this._lastPointerDownInfo = pickedInfo.result[0] || pickedInfo.emptyInfo;\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/visgl/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n"],"file":"deck.js"}