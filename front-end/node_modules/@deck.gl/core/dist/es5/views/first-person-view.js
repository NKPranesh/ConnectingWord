"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _view = _interopRequireDefault(require("./view"));

var _viewport = _interopRequireDefault(require("../viewports/viewport"));

var _webMercator = require("@math.gl/web-mercator");

var _math = require("math.gl");

var _firstPersonController = _interopRequireDefault(require("../controllers/first-person-controller"));

function getDirectionFromBearingAndPitch({
  bearing,
  pitch
}) {
  const spherical = new _math._SphericalCoordinates({
    bearing,
    pitch
  });
  const direction = spherical.toVector3().normalize();
  return direction;
}

class FirstPersonViewport extends _viewport.default {
  constructor(props) {
    const {
      modelMatrix = null,
      bearing = 0,
      pitch = 0,
      up = [0, 0, 1]
    } = props;
    const dir = getDirectionFromBearingAndPitch({
      bearing,
      pitch: pitch === -90 ? 0.0001 : 90 + pitch
    });
    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;
    const zoom = (0, _webMercator.getMeterZoom)(props);
    const scale = Math.pow(2, zoom);
    const viewMatrix = new _math.Matrix4().lookAt({
      eye: [0, 0, 0],
      center,
      up
    }).scale(scale);
    super({ ...props,
      zoom,
      viewMatrix
    });
  }

}

class FirstPersonView extends _view.default {
  constructor(props) {
    super({ ...props,
      type: FirstPersonViewport
    });
  }

  get controller() {
    return this._getControllerProps({
      type: _firstPersonController.default
    });
  }

}

exports.default = FirstPersonView;
FirstPersonView.displayName = 'FirstPersonView';
//# sourceMappingURL=first-person-view.js.map