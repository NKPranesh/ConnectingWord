"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _core = require("@luma.gl/core");

var _core2 = require("@deck.gl/core");

var _triangleLayerVertex = _interopRequireDefault(require("./triangle-layer-vertex.glsl"));

var _triangleLayerFragment = _interopRequireDefault(require("./triangle-layer-fragment.glsl"));

class TriangleLayer extends _core2.Layer {
  getShaders() {
    return {
      vs: _triangleLayerVertex.default,
      fs: _triangleLayerFragment.default,
      modules: [_core2.project32]
    };
  }

  initializeState() {
    const {
      gl
    } = this.context;
    const attributeManager = this.getAttributeManager();
    attributeManager.add({
      positions: {
        size: 3,
        noAlloc: true
      },
      texCoords: {
        size: 2,
        noAlloc: true
      }
    });
    this.setState({
      model: this._getModel(gl)
    });
  }

  _getModel(gl) {
    const {
      vertexCount
    } = this.props;
    return new _core.Model(gl, { ...this.getShaders(),
      id: this.props.id,
      geometry: new _core.Geometry({
        drawMode: 6,
        vertexCount
      })
    });
  }

  draw({
    uniforms
  }) {
    const {
      model
    } = this.state;
    const {
      texture,
      maxTexture,
      colorTexture,
      intensity,
      threshold,
      aggregationMode,
      colorDomain
    } = this.props;
    model.setUniforms({ ...uniforms,
      texture,
      maxTexture,
      colorTexture,
      intensity,
      threshold,
      aggregationMode,
      colorDomain
    }).draw();
  }

}

exports.default = TriangleLayer;
TriangleLayer.layerName = 'TriangleLayer';
//# sourceMappingURL=triangle-layer.js.map