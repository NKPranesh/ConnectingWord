{"version":3,"sources":["../../../src/geojson-layer/geojson-binary.js"],"names":["binaryToFeatureForAccesor","data","index","featureIndex","startIndices","geometryIndex","featureIds","value","getPropertiesForIndex","propertiesIndex","numericPropsIndex","feature","properties","prop","numericProps","calculatePickingColors","geojsonBinary","encodePickingColor","pickingColors","points","lines","polygons","key","globalFeatureIds","Uint8ClampedArray","length","pickingColor","i"],"mappings":"AAUA,OAAO,SAASA,yBAAT,CAAmCC,IAAnC,EAAyCC,KAAzC,EAAgD;AACrD,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,QAAME,YAAY,GAAG,kBAAkBF,IAAlB,GAAyBA,IAAI,CAACG,YAAL,CAAkBF,KAAlB,CAAzB,GAAoDA,KAAzE;AACA,QAAMG,aAAa,GAAGJ,IAAI,CAACK,UAAL,CAAgBC,KAAhB,CAAsBJ,YAAtB,CAAtB;;AAEA,MAAIA,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvB,WAAOK,qBAAqB,CAACP,IAAD,EAAOI,aAAP,EAAsBF,YAAtB,CAA5B;AACD;;AAED,SAAO,IAAP;AACD;;AAED,SAASK,qBAAT,CAA+BP,IAA/B,EAAqCQ,eAArC,EAAsDC,iBAAtD,EAAyE;AACvE,QAAMC,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,EAAC,GAAGX,IAAI,CAACW,UAAL,CAAgBH,eAAhB;AAAJ;AADE,GAAhB;;AAIA,OAAK,MAAMI,IAAX,IAAmBZ,IAAI,CAACa,YAAxB,EAAsC;AACpCH,IAAAA,OAAO,CAACC,UAAR,CAAmBC,IAAnB,IAA2BZ,IAAI,CAACa,YAAL,CAAkBD,IAAlB,EAAwBN,KAAxB,CAA8BG,iBAA9B,CAA3B;AACD;;AAED,SAAOC,OAAP;AACD;;AAGD,OAAO,SAASI,sBAAT,CAAgCC,aAAhC,EAA+CC,kBAA/C,EAAmE;AACxE,QAAMC,aAAa,GAAG;AACpBC,IAAAA,MAAM,EAAE,IADY;AAEpBC,IAAAA,KAAK,EAAE,IAFa;AAGpBC,IAAAA,QAAQ,EAAE;AAHU,GAAtB;;AAKA,OAAK,MAAMC,GAAX,IAAkBJ,aAAlB,EAAiC;AAC/B,UAAMZ,UAAU,GAAGU,aAAa,CAACM,GAAD,CAAb,CAAmBC,gBAAnB,CAAoChB,KAAvD;AACAW,IAAAA,aAAa,CAACI,GAAD,CAAb,GAAqB,IAAIE,iBAAJ,CAAsBlB,UAAU,CAACmB,MAAX,GAAoB,CAA1C,CAArB;AACA,UAAMC,YAAY,GAAG,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,UAAU,CAACmB,MAA/B,EAAuCE,CAAC,EAAxC,EAA4C;AAC1CV,MAAAA,kBAAkB,CAACX,UAAU,CAACqB,CAAD,CAAX,EAAgBD,YAAhB,CAAlB;AACAR,MAAAA,aAAa,CAACI,GAAD,CAAb,CAAmBK,CAAC,GAAG,CAAJ,GAAQ,CAA3B,IAAgCD,YAAY,CAAC,CAAD,CAA5C;AACAR,MAAAA,aAAa,CAACI,GAAD,CAAb,CAAmBK,CAAC,GAAG,CAAJ,GAAQ,CAA3B,IAAgCD,YAAY,CAAC,CAAD,CAA5C;AACAR,MAAAA,aAAa,CAACI,GAAD,CAAb,CAAmBK,CAAC,GAAG,CAAJ,GAAQ,CAA3B,IAAgCD,YAAY,CAAC,CAAD,CAA5C;AACD;AACF;;AAED,SAAOR,aAAP;AACD","sourcesContent":["// This module implement some utility functions to work with\n// the geojson-binary format defined at loaders.gl:\n// https://github.com/visgl/loaders.gl/blob/master/modules/gis/docs/api-reference/geojson-to-binary.md\n\n/**\n * Return the feature for an accesor\n *\n * @param {Object} data - The data in binary format\n * @param {Number} index - The requested index\n */\nexport function binaryToFeatureForAccesor(data, index) {\n  if (!data) {\n    return null;\n  }\n\n  const featureIndex = 'startIndices' in data ? data.startIndices[index] : index;\n  const geometryIndex = data.featureIds.value[featureIndex];\n\n  if (featureIndex !== -1) {\n    return getPropertiesForIndex(data, geometryIndex, featureIndex);\n  }\n\n  return null;\n}\n\nfunction getPropertiesForIndex(data, propertiesIndex, numericPropsIndex) {\n  const feature = {\n    properties: {...data.properties[propertiesIndex]}\n  };\n\n  for (const prop in data.numericProps) {\n    feature.properties[prop] = data.numericProps[prop].value[numericPropsIndex];\n  }\n\n  return feature;\n}\n\n// Custom picking color to keep binary indexes\nexport function calculatePickingColors(geojsonBinary, encodePickingColor) {\n  const pickingColors = {\n    points: null,\n    lines: null,\n    polygons: null\n  };\n  for (const key in pickingColors) {\n    const featureIds = geojsonBinary[key].globalFeatureIds.value;\n    pickingColors[key] = new Uint8ClampedArray(featureIds.length * 3);\n    const pickingColor = [];\n    for (let i = 0; i < featureIds.length; i++) {\n      encodePickingColor(featureIds[i], pickingColor);\n      pickingColors[key][i * 3 + 0] = pickingColor[0];\n      pickingColors[key][i * 3 + 1] = pickingColor[1];\n      pickingColors[key][i * 3 + 2] = pickingColor[2];\n    }\n  }\n\n  return pickingColors;\n}\n"],"file":"geojson-binary.js"}