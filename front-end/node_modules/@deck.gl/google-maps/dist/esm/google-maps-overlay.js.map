{"version":3,"sources":["../../src/google-maps-overlay.js"],"names":["getParameters","setParameters","withParameters","createDeckInstance","destroyDeckInstance","getViewPropsFromOverlay","getViewPropsFromCoordinateTransformer","HIDE_ALL_LAYERS","GL_STATE","depthMask","depthTest","blend","blendFunc","blendEquation","GoogleMapsOverlay","constructor","props","_map","setProps","setMap","map","_overlay","UNINITIALIZED","google","maps","RenderingType","renderingType","getRenderingType","_createOverlay","addListener","Object","assign","_deck","style","canvas","parentElement","pickObject","params","pickMultipleObjects","pickObjects","finalize","VECTOR","isVectorMap","WebglOverlayView","OverlayView","overlay","onAdd","onContextLost","_onContextLost","bind","onContextRestored","_onContextRestored","onDraw","_onDrawVector","_onAdd","draw","_onDrawRaster","onRemove","_onRemove","gl","_customRender","requestRedraw","deck","animationLoop","_renderFrame","ab","getParameter","onRender","bindBuffer","layerFilter","width","height","left","top","zoom","pitch","latitude","longitude","canSyncWithGoogleMaps","parentStyle","viewState","repeat","redraw","coordinateTransformer","layerManager","_framebuffer","needsRedraw","clearRedrawFlags","viewport","scissor","stencilFunc","_drawLayers","clearCanvas"],"mappings":"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","sourcesContent":["/* global google */\nimport {getParameters, setParameters, withParameters} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport {\n  createDeckInstance,\n  destroyDeckInstance,\n  getViewPropsFromOverlay,\n  getViewPropsFromCoordinateTransformer\n} from './utils';\n\nconst HIDE_ALL_LAYERS = () => false;\nconst GL_STATE = {\n  depthMask: true,\n  depthTest: true,\n  blend: true,\n  blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n  blendEquation: GL.FUNC_ADD\n};\n\nexport default class GoogleMapsOverlay {\n  constructor(props) {\n    this.props = {};\n    this._map = null;\n    this.setProps(props);\n  }\n\n  /* Public API */\n\n  setMap(map) {\n    if (map === this._map) {\n      return;\n    }\n    if (this._map) {\n      this._overlay.setMap(null);\n      this._map = null;\n    }\n    if (map) {\n      this._map = map;\n      const {UNINITIALIZED} = google.maps.RenderingType;\n      const renderingType = map.getRenderingType();\n      if (renderingType !== UNINITIALIZED) {\n        this._createOverlay(map);\n      } else {\n        map.addListener('renderingtype_changed', () => {\n          this._createOverlay(map);\n        });\n      }\n    }\n  }\n\n  setProps(props) {\n    Object.assign(this.props, props);\n    if (this._deck) {\n      if (props.style) {\n        Object.assign(this._deck.canvas.parentElement.style, props.style);\n        props.style = null;\n      }\n      this._deck.setProps(props);\n    }\n  }\n\n  pickObject(params) {\n    return this._deck && this._deck.pickObject(params);\n  }\n\n  pickMultipleObjects(params) {\n    return this._deck && this._deck.pickMultipleObjects(params);\n  }\n\n  pickObjects(params) {\n    return this._deck && this._deck.pickObjects(params);\n  }\n\n  finalize() {\n    this.setMap(null);\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  /* Private API */\n  _createOverlay(map) {\n    const {VECTOR, UNINITIALIZED} = google.maps.RenderingType;\n    const renderingType = map.getRenderingType();\n    if (renderingType === UNINITIALIZED) {\n      return;\n    }\n    const isVectorMap = renderingType === VECTOR && google.maps.WebglOverlayView;\n    const OverlayView = isVectorMap ? google.maps.WebglOverlayView : google.maps.OverlayView;\n    const overlay = new OverlayView();\n\n    // Lifecycle methods are different depending on map type\n    if (isVectorMap) {\n      overlay.onAdd = () => {};\n      overlay.onContextLost = this._onContextLost.bind(this);\n      overlay.onContextRestored = this._onContextRestored.bind(this);\n      overlay.onDraw = this._onDrawVector.bind(this);\n    } else {\n      overlay.onAdd = this._onAdd.bind(this);\n      overlay.draw = this._onDrawRaster.bind(this);\n    }\n    overlay.onRemove = this._onRemove.bind(this);\n\n    this._overlay = overlay;\n    this._overlay.setMap(map);\n  }\n\n  _onAdd() {\n    this._deck = createDeckInstance(this._map, this._overlay, this._deck, this.props);\n  }\n\n  _onContextRestored(gl) {\n    const _customRender = () => {\n      this._overlay.requestRedraw();\n    };\n    const deck = createDeckInstance(this._map, this._overlay, this._deck, {\n      gl,\n      _customRender,\n      ...this.props\n    });\n    this._deck = deck;\n\n    // By default, animationLoop._renderFrame invokes\n    // animationLoop.onRender. We override this to wrap\n    // in withParameters so we don't modify the GL state\n    deck.animationLoop._renderFrame = () => {\n      const ab = gl.getParameter(gl.ARRAY_BUFFER_BINDING);\n      withParameters(gl, {}, () => {\n        deck.animationLoop.onRender();\n      });\n      gl.bindBuffer(gl.ARRAY_BUFFER, ab);\n    };\n  }\n\n  _onContextLost() {\n    // TODO this isn't working\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  _onRemove() {\n    // Clear deck canvas\n    this._deck.setProps({layerFilter: HIDE_ALL_LAYERS});\n  }\n\n  _onDrawRaster() {\n    const deck = this._deck;\n    const {width, height, left, top, zoom, pitch, latitude, longitude} = getViewPropsFromOverlay(\n      this._map,\n      this._overlay\n    );\n\n    const canSyncWithGoogleMaps = pitch === 0;\n\n    const parentStyle = deck.canvas.parentElement.style;\n    parentStyle.left = `${left}px`;\n    parentStyle.top = `${top}px`;\n\n    deck.setProps({\n      width,\n      height,\n      viewState: {latitude, longitude, zoom, repeat: true},\n      // deck.gl cannot sync with the base map with zoom < 0 and/or tilt\n      layerFilter: canSyncWithGoogleMaps ? this.props.layerFilter : HIDE_ALL_LAYERS\n    });\n    // Deck is initialized\n    deck.redraw();\n  }\n\n  // Vector code path\n  _onDrawVector(gl, coordinateTransformer) {\n    if (!this._deck || !this._map) {\n      return;\n    }\n\n    const deck = this._deck;\n\n    deck.setProps({\n      ...getViewPropsFromCoordinateTransformer(this._map, coordinateTransformer)\n    });\n\n    if (deck.layerManager) {\n      // As an optimization, some renders are to an separate framebuffer\n      // which we need to pass onto deck\n      const _framebuffer = getParameters(gl, GL.FRAMEBUFFER_BINDING);\n      deck.setProps({_framebuffer});\n\n      // Camera changed, will trigger a map repaint right after this\n      // Clear any change flag triggered by setting viewState so that deck does not request\n      // a second repaint\n      deck.needsRedraw({clearRedrawFlags: true});\n\n      // Workaround for bug in Google maps where viewport state is wrong\n      // TODO remove once fixed\n      setParameters(gl, {\n        viewport: [0, 0, gl.canvas.width, gl.canvas.height],\n        scissor: [0, 0, gl.canvas.width, gl.canvas.height],\n        stencilFunc: [gl.ALWAYS, 0, 255, gl.ALWAYS, 0, 255]\n      });\n\n      withParameters(gl, GL_STATE, () => {\n        deck._drawLayers('google-vector', {\n          clearCanvas: false\n        });\n      });\n    }\n  }\n}\n"],"file":"google-maps-overlay.js"}